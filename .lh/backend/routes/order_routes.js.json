{
    "sourceFile": "backend/routes/order_routes.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1739604757952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739606956521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n             }).format(new Date()).replace(\":\", \".\"),  // Replace \":\" with \".\"\r\n             orderItems: req.body.items,\r\n             orderType: req.body.orderType,\r\n             contactInfo: req.body.contactInfo,\r\n-            orderStatus: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥',\r\n+            orderStatus: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°',\r\n             totalPrice: req.body.total\r\n         });\r\n \r\n         const newOrder = await order.save();\r\n"
                },
                {
                    "date": 1739607358310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             orderTime: new Intl.DateTimeFormat('en-GB', {\r\n                 hour: '2-digit',\r\n                 minute: '2-digit',\r\n                 hour12: false,  // Ensures 24-hour format\r\n-            }).format(new Date()).replace(\":\", \".\"),  // Replace \":\" with \".\"\r\n+            }).format(new Date()),  // Replace \":\" with \".\"\r\n             orderItems: req.body.items,\r\n             orderType: req.body.orderType,\r\n             contactInfo: req.body.contactInfo,\r\n             orderStatus: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°',\r\n"
                },
                {
                    "date": 1739607403869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n             orderDate: todayDate,\r\n             orderTime: new Intl.DateTimeFormat('en-GB', {\r\n                 hour: '2-digit',\r\n                 minute: '2-digit',\r\n+                second: '2-digit',\r\n                 hour12: false,  // Ensures 24-hour format\r\n             }).format(new Date()),  // Replace \":\" with \".\"\r\n             orderItems: req.body.items,\r\n             orderType: req.body.orderType,\r\n"
                },
                {
                    "date": 1739607424093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n                 hour: '2-digit',\r\n                 minute: '2-digit',\r\n                 second: '2-digit',\r\n                 hour12: false,  // Ensures 24-hour format\r\n-            }).format(new Date()),  // Replace \":\" with \".\"\r\n+            }).format(new Date()),\r\n             orderItems: req.body.items,\r\n             orderType: req.body.orderType,\r\n             contactInfo: req.body.contactInfo,\r\n             orderStatus: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°',\r\n"
                },
                {
                    "date": 1740610589399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n         }\r\n \r\n         const order = new dataDB({\r\n             orderNumber: newOrderNumber,\r\n+            employeeName: req.body.employeeName,\r\n             orderDate: todayDate,\r\n             orderTime: new Intl.DateTimeFormat('en-GB', {\r\n                 hour: '2-digit',\r\n                 minute: '2-digit',\r\n"
                },
                {
                    "date": 1740728687527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,8 +47,9 @@\n                 minute: '2-digit',\r\n                 second: '2-digit',\r\n                 hour12: false,  // Ensures 24-hour format\r\n             }).format(new Date()),\r\n+            orderFinishTime: '',\r\n             orderItems: req.body.items,\r\n             orderType: req.body.orderType,\r\n             contactInfo: req.body.contactInfo,\r\n             orderStatus: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°',\r\n"
                },
                {
                    "date": 1740728705942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,8 @@\n         res.status(400).json({ message: error.message });\r\n     }\r\n });\r\n \r\n-\r\n // üìå Update an order by ID\r\n router.put('/:id', async (req, res) => {\r\n     try {\r\n         const updatedOrder = await dataDB.findByIdAndUpdate(\r\n"
                }
            ],
            "date": 1739604757952,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst router = express.Router();\r\n\r\nconst dataDB = require('../models/orders');\r\n\r\n// üìå Get all orders\r\nrouter.get('/', async (req, res) => {\r\n    try {\r\n        const result = await dataDB.find();\r\n        res.json(result);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n});\r\n\r\n// üìå Get an order by ID\r\nrouter.get('/:id', async (req, res) => {\r\n    try {\r\n        const data = await dataDB.findById(req.params.id);                          //‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ data (order) ‡πÉ‡∏ô dataDB\r\n        if (!data) return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö Order ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö' });\r\n        res.json(data);\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n});\r\n\r\n// üìå Create a new order\r\nrouter.post('/', async (req, res) => {\r\n    try {\r\n        const todayDate = new Date().toLocaleDateString('en-GB');   //‡∏Å‡∏≥‡∏´‡∏ô‡∏î todayDate ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô ‡πÇ‡∏î‡∏¢‡∏°‡∏µ format: DD/MM/YYYY\r\n\r\n        //‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ latestOrder ‡∏ó‡∏µ‡πà‡∏°‡∏µ orderDate ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö todayDate\r\n        //‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏´‡∏≤ order ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô (‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏° lastestOrder ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô null ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç if ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà 37 ‡πÑ‡∏õ)\r\n        const latestOrder = await dataDB.findOne({ orderDate: todayDate }).sort({ orderNumber: -1 });   \r\n\r\n        let newOrderNumber = 1; //‡∏Å‡∏≥‡∏´‡∏ô‡∏î newOrderNumber ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô 1 \r\n        if (latestOrder) {      //‡∏ñ‡πâ‡∏≤‡∏°‡∏µ latestOrder ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠ order ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πá‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç orderNumber ‡∏Ç‡∏≠‡∏á order ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏≤ +1\r\n            newOrderNumber = latestOrder.orderNumber + 1;\r\n        }\r\n\r\n        const order = new dataDB({\r\n            orderNumber: newOrderNumber,\r\n            orderDate: todayDate,\r\n            orderTime: new Intl.DateTimeFormat('en-GB', {\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n                hour12: false,  // Ensures 24-hour format\r\n            }).format(new Date()).replace(\":\", \".\"),  // Replace \":\" with \".\"\r\n            orderItems: req.body.items,\r\n            orderType: req.body.orderType,\r\n            contactInfo: req.body.contactInfo,\r\n            orderStatus: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥',\r\n            totalPrice: req.body.total\r\n        });\r\n\r\n        const newOrder = await order.save();\r\n        res.status(201).json(newOrder);\r\n    } catch (error) {\r\n        res.status(400).json({ message: error.message });\r\n    }\r\n});\r\n\r\n\r\n// üìå Update an order by ID\r\nrouter.put('/:id', async (req, res) => {\r\n    try {\r\n        const updatedOrder = await dataDB.findByIdAndUpdate(\r\n            req.params.id,\r\n            { $set: req.body }, // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤\r\n            { new: true, runValidators: true } // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\r\n        );\r\n\r\n        if (!updatedOrder) return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö Order ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö' });\r\n\r\n        res.json(updatedOrder);\r\n    } catch (error) {\r\n        res.status(400).json({ message: error.message });\r\n    }\r\n});\r\n\r\n// üìå Delete an order by ID\r\nrouter.delete('/:id', async (req, res) => {\r\n    try {\r\n        const order = await dataDB.findByIdAndDelete(req.params.id);\r\n        if (!order) return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö Order ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö' });\r\n\r\n        res.json({ message: '‡∏•‡∏ö Order ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß' });\r\n    } catch (error) {\r\n        res.status(500).json({ message: error.message });\r\n    }\r\n});\r\n\r\nmodule.exports = router;\r\n"
        }
    ]
}