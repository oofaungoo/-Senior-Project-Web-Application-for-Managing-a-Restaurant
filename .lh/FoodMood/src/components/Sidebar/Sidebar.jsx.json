{
    "sourceFile": "FoodMood/src/components/Sidebar/Sidebar.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 151,
            "patches": [
                {
                    "date": 1740149951868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740150029601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,15 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n+import './Sidebar.css';\r\n import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [mobileOpen, setMobileOpen] = useState(false);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n@@ -20,98 +19,74 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: (\r\n-                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n-                    <HiBell />\r\n-                </Badge>\r\n-            ),\r\n+            icon: <HiBell />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n-\r\n+ \r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0);\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    const handleDrawerToggle = () => {\r\n-        setMobileOpen(!mobileOpen);\r\n-    };\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n \r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n-    const drawerContent = (\r\n-        <List>\r\n-            {adminMenu.map((item) => (\r\n-                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n-                    <ListItem button selected={activeMenu === item.label} onClick={() => handleMenuClick(item.label)}>\r\n-                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n-                        {isExpanded && <ListItemText primary={item.label} />}\r\n-                    </ListItem>\r\n-                </Link>\r\n-            ))}\r\n-            <ListItem button>\r\n-                <ListItemIcon><HiLogout /></ListItemIcon>\r\n-                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n-            </ListItem>\r\n-        </List>\r\n-    );\r\n-\r\n     return (\r\n-        <Grid container>\r\n-            {/* Sidebar for large screens */}\r\n-            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n-                <Drawer\r\n-                    variant=\"permanent\"\r\n-                    open={isExpanded}\r\n-                    sx={{\r\n-                        width: isExpanded ? 240 : 60,\r\n-                        flexShrink: 0,\r\n-                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n-                    }}\r\n-                >\r\n-                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n-                        {isExpanded && <span>FoodMood.</span>}\r\n-                        <IconButton onClick={toggleSidebar}>\r\n-                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                        </IconButton>\r\n-                    </div>\r\n-                    {drawerContent}\r\n-                </Drawer>\r\n-            </Grid>\r\n-\r\n-            {/* Sidebar for mobile screens */}\r\n-            <IconButton\r\n-                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n-                onClick={handleDrawerToggle}\r\n-            >\r\n-                <HiMenu />\r\n-            </IconButton>\r\n-            <Drawer\r\n-                variant=\"temporary\"\r\n-                open={mobileOpen}\r\n-                onClose={handleDrawerToggle}\r\n-                ModalProps={{ keepMounted: true }}\r\n-                sx={{\r\n-                    '& .MuiDrawer-paper': { width: 240 },\r\n-                }}\r\n-            >\r\n-                {drawerContent}\r\n-            </Drawer>\r\n-        </Grid>\r\n+        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150083583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,16 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n+import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n+    const [mobileOpen, setMobileOpen] = useState(false);\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n@@ -19,74 +20,98 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: <HiBell />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+            icon: (\r\n+                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n+                    <HiBell />\r\n+                </Badge>\r\n+            ),\r\n         }\r\n     ];\r\n- \r\n+\r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n+            setUnreadNotifications(0);\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n+    const handleDrawerToggle = () => {\r\n+        setMobileOpen(!mobileOpen);\r\n+    };\r\n \r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n+    const drawerContent = (\r\n+        <List>\r\n+            {adminMenu.map((item) => (\r\n+                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n+                    <ListItem button selected={activeMenu === item.label} onClick={() => handleMenuClick(item.label)}>\r\n+                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n+                        {isExpanded && <ListItemText primary={item.label} />}\r\n+                    </ListItem>\r\n+                </Link>\r\n+            ))}\r\n+            <ListItem button>\r\n+                <ListItemIcon><HiLogout /></ListItemIcon>\r\n+                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n+            </ListItem>\r\n+        </List>\r\n+    );\r\n+\r\n     return (\r\n-        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>\r\n+        <Grid container>\r\n+            {/* Sidebar for large screens */}\r\n+            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n+                <Drawer\r\n+                    variant=\"permanent\"\r\n+                    open={isExpanded}\r\n+                    sx={{\r\n+                        width: isExpanded ? 240 : 60,\r\n+                        flexShrink: 0,\r\n+                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n+                    }}\r\n+                >\r\n+                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n+                        {isExpanded && <span>FoodMood.</span>}\r\n+                        <IconButton onClick={toggleSidebar}>\r\n+                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                        </IconButton>\r\n+                    </div>\r\n+                    {drawerContent}\r\n+                </Drawer>\r\n+            </Grid>\r\n+\r\n+            {/* Sidebar for mobile screens */}\r\n+            <IconButton\r\n+                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n+                onClick={handleDrawerToggle}\r\n+            >\r\n+                <HiMenu />\r\n+            </IconButton>\r\n+            <Drawer\r\n+                variant=\"temporary\"\r\n+                open={mobileOpen}\r\n+                onClose={handleDrawerToggle}\r\n+                ModalProps={{ keepMounted: true }}\r\n+                sx={{\r\n+                    '& .MuiDrawer-paper': { width: 240 },\r\n+                }}\r\n+            >\r\n+                {drawerContent}\r\n+            </Drawer>\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150104768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,15 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n+import './Sidebar.css';\r\n import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [mobileOpen, setMobileOpen] = useState(false);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n@@ -20,98 +19,74 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: (\r\n-                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n-                    <HiBell />\r\n-                </Badge>\r\n-            ),\r\n+            icon: <HiBell />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n-\r\n+ \r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0);\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    const handleDrawerToggle = () => {\r\n-        setMobileOpen(!mobileOpen);\r\n-    };\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n \r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n-    const drawerContent = (\r\n-        <List>\r\n-            {adminMenu.map((item) => (\r\n-                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n-                    <ListItem button selected={activeMenu === item.label} onClick={() => handleMenuClick(item.label)}>\r\n-                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n-                        {isExpanded && <ListItemText primary={item.label} />}\r\n-                    </ListItem>\r\n-                </Link>\r\n-            ))}\r\n-            <ListItem button>\r\n-                <ListItemIcon><HiLogout /></ListItemIcon>\r\n-                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n-            </ListItem>\r\n-        </List>\r\n-    );\r\n-\r\n     return (\r\n-        <Grid container>\r\n-            {/* Sidebar for large screens */}\r\n-            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n-                <Drawer\r\n-                    variant=\"permanent\"\r\n-                    open={isExpanded}\r\n-                    sx={{\r\n-                        width: isExpanded ? 240 : 60,\r\n-                        flexShrink: 0,\r\n-                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n-                    }}\r\n-                >\r\n-                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n-                        {isExpanded && <span>FoodMood.</span>}\r\n-                        <IconButton onClick={toggleSidebar}>\r\n-                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                        </IconButton>\r\n-                    </div>\r\n-                    {drawerContent}\r\n-                </Drawer>\r\n-            </Grid>\r\n-\r\n-            {/* Sidebar for mobile screens */}\r\n-            <IconButton\r\n-                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n-                onClick={handleDrawerToggle}\r\n-            >\r\n-                <HiMenu />\r\n-            </IconButton>\r\n-            <Drawer\r\n-                variant=\"temporary\"\r\n-                open={mobileOpen}\r\n-                onClose={handleDrawerToggle}\r\n-                ModalProps={{ keepMounted: true }}\r\n-                sx={{\r\n-                    '& .MuiDrawer-paper': { width: 240 },\r\n-                }}\r\n-            >\r\n-                {drawerContent}\r\n-            </Drawer>\r\n-        </Grid>\r\n+        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150165703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n import { MdFastfood } from \"react-icons/md\";\r\n import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n+import { Grid2 } from '@mui/material';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n"
                },
                {
                    "date": 1740150181787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n import { MdFastfood } from \"react-icons/md\";\r\n import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n-import { Grid2 } from '@mui/material';\r\n+import { Grid } from '@mui/material';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n@@ -59,9 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+        <Grid container>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n                 </div>\r\n@@ -85,9 +85,9 @@\n             </ul>\r\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n-        </div>\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150224175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n+import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n-import { Grid } from '@mui/material';\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n+    const [mobileOpen, setMobileOpen] = useState(false);\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n@@ -20,73 +20,97 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: <HiBell />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+            icon: (\r\n+                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n+                    <HiBell />\r\n+                </Badge>\r\n+            ),\r\n         }\r\n     ];\r\n- \r\n+\r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n+            setUnreadNotifications(0);\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n+    const handleDrawerToggle = () => {\r\n+        setMobileOpen(!mobileOpen);\r\n+    };\r\n \r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n+    const drawerContent = (\r\n+        <List>\r\n+            {adminMenu.map((item) => (\r\n+                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n+                    <ListItem button selected={activeMenu === item.label} onClick={() => handleMenuClick(item.label)}>\r\n+                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n+                        {isExpanded && <ListItemText primary={item.label} />}\r\n+                    </ListItem>\r\n+                </Link>\r\n+            ))}\r\n+            <ListItem button>\r\n+                <ListItemIcon><HiLogout /></ListItemIcon>\r\n+                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n+            </ListItem>\r\n+        </List>\r\n+    );\r\n+\r\n     return (\r\n         <Grid container>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n+            {/* Sidebar for large screens */}\r\n+            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n+                <Drawer\r\n+                    variant=\"permanent\"\r\n+                    open={isExpanded}\r\n+                    sx={{\r\n+                        width: isExpanded ? 240 : 60,\r\n+                        flexShrink: 0,\r\n+                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n+                    }}\r\n+                >\r\n+                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n+                        {isExpanded && <span>FoodMood.</span>}\r\n+                        <IconButton onClick={toggleSidebar}>\r\n+                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                        </IconButton>\r\n+                    </div>\r\n+                    {drawerContent}\r\n+                </Drawer>\r\n+            </Grid>\r\n+\r\n+            {/* Sidebar for mobile screens */}\r\n+            <IconButton\r\n+                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n+                onClick={handleDrawerToggle}\r\n+            >\r\n+                <HiMenu />\r\n+            </IconButton>\r\n+            <Drawer\r\n+                variant=\"temporary\"\r\n+                open={mobileOpen}\r\n+                onClose={handleDrawerToggle}\r\n+                ModalProps={{ keepMounted: true }}\r\n+                sx={{\r\n+                    '& .MuiDrawer-paper': { width: 240 },\r\n+                }}\r\n+            >\r\n+                {drawerContent}\r\n+            </Drawer>\r\n         </Grid>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1740150323482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,17 +54,41 @@\n \r\n     const drawerContent = (\r\n         <List>\r\n             {adminMenu.map((item) => (\r\n-                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n-                    <ListItem button selected={activeMenu === item.label} onClick={() => handleMenuClick(item.label)}>\r\n-                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n+                <Link to={item.to} key={item.label} style={{ textDecoration: 'none' }}>\r\n+                    <ListItem \r\n+                        button \r\n+                        selected={activeMenu === item.label} \r\n+                        onClick={() => handleMenuClick(item.label)}\r\n+                        sx={{\r\n+                            backgroundColor: activeMenu === item.label ? 'var(--dark-blue-color)' : 'var(--blue-color)',\r\n+                            color: 'white',\r\n+                            '&:hover': {\r\n+                                backgroundColor: 'var(--dark-blue-color)',\r\n+                            },\r\n+                            borderRadius: '8px',\r\n+                            margin: '5px 10px',\r\n+                        }}\r\n+                    >\r\n+                        <ListItemIcon sx={{ color: 'white' }}>{item.icon}</ListItemIcon>\r\n                         {isExpanded && <ListItemText primary={item.label} />}\r\n                     </ListItem>\r\n                 </Link>\r\n             ))}\r\n-            <ListItem button>\r\n-                <ListItemIcon><HiLogout /></ListItemIcon>\r\n+            <ListItem \r\n+                button\r\n+                sx={{\r\n+                    backgroundColor: 'var(--blue-color)',\r\n+                    color: 'white',\r\n+                    '&:hover': {\r\n+                        backgroundColor: 'var(--dark-blue-color)',\r\n+                    },\r\n+                    borderRadius: '8px',\r\n+                    margin: '5px 10px',\r\n+                }}\r\n+            >\r\n+                <ListItemIcon sx={{ color: 'white' }}><HiLogout /></ListItemIcon>\r\n                 {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n             </ListItem>\r\n         </List>\r\n     );\r\n"
                },
                {
                    "date": 1740150338731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n+import './Sidebar.css';\r\n import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n+import { Grid } from '@mui/material';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [mobileOpen, setMobileOpen] = useState(false);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n@@ -20,121 +20,73 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: (\r\n-                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n-                    <HiBell />\r\n-                </Badge>\r\n-            ),\r\n+            icon: <HiBell />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n-\r\n+ \r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0);\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    const handleDrawerToggle = () => {\r\n-        setMobileOpen(!mobileOpen);\r\n-    };\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n \r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n-    const drawerContent = (\r\n-        <List>\r\n-            {adminMenu.map((item) => (\r\n-                <Link to={item.to} key={item.label} style={{ textDecoration: 'none' }}>\r\n-                    <ListItem \r\n-                        button \r\n-                        selected={activeMenu === item.label} \r\n-                        onClick={() => handleMenuClick(item.label)}\r\n-                        sx={{\r\n-                            backgroundColor: activeMenu === item.label ? 'var(--dark-blue-color)' : 'var(--blue-color)',\r\n-                            color: 'white',\r\n-                            '&:hover': {\r\n-                                backgroundColor: 'var(--dark-blue-color)',\r\n-                            },\r\n-                            borderRadius: '8px',\r\n-                            margin: '5px 10px',\r\n-                        }}\r\n-                    >\r\n-                        <ListItemIcon sx={{ color: 'white' }}>{item.icon}</ListItemIcon>\r\n-                        {isExpanded && <ListItemText primary={item.label} />}\r\n-                    </ListItem>\r\n-                </Link>\r\n-            ))}\r\n-            <ListItem \r\n-                button\r\n-                sx={{\r\n-                    backgroundColor: 'var(--blue-color)',\r\n-                    color: 'white',\r\n-                    '&:hover': {\r\n-                        backgroundColor: 'var(--dark-blue-color)',\r\n-                    },\r\n-                    borderRadius: '8px',\r\n-                    margin: '5px 10px',\r\n-                }}\r\n-            >\r\n-                <ListItemIcon sx={{ color: 'white' }}><HiLogout /></ListItemIcon>\r\n-                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n-            </ListItem>\r\n-        </List>\r\n-    );\r\n-\r\n     return (\r\n         <Grid container>\r\n-            {/* Sidebar for large screens */}\r\n-            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n-                <Drawer\r\n-                    variant=\"permanent\"\r\n-                    open={isExpanded}\r\n-                    sx={{\r\n-                        width: isExpanded ? 240 : 60,\r\n-                        flexShrink: 0,\r\n-                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n-                    }}\r\n-                >\r\n-                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n-                        {isExpanded && <span>FoodMood.</span>}\r\n-                        <IconButton onClick={toggleSidebar}>\r\n-                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                        </IconButton>\r\n-                    </div>\r\n-                    {drawerContent}\r\n-                </Drawer>\r\n-            </Grid>\r\n-\r\n-            {/* Sidebar for mobile screens */}\r\n-            <IconButton\r\n-                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n-                onClick={handleDrawerToggle}\r\n-            >\r\n-                <HiMenu />\r\n-            </IconButton>\r\n-            <Drawer\r\n-                variant=\"temporary\"\r\n-                open={mobileOpen}\r\n-                onClose={handleDrawerToggle}\r\n-                ModalProps={{ keepMounted: true }}\r\n-                sx={{\r\n-                    '& .MuiDrawer-paper': { width: 240 },\r\n-                }}\r\n-            >\r\n-                {drawerContent}\r\n-            </Drawer>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n         </Grid>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1740150346921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container>\r\n+        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n                 </div>\r\n@@ -85,9 +85,9 @@\n             </ul>\r\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n-        </Grid>\r\n+        </div>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150394344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n+import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n-import { Grid } from '@mui/material';\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n+    const [mobileOpen, setMobileOpen] = useState(false);\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n@@ -20,74 +20,122 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: <HiBell />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+            icon: (\r\n+                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n+                    <HiBell />\r\n+                </Badge>\r\n+            ),\r\n         }\r\n     ];\r\n- \r\n+\r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n+            setUnreadNotifications(0);\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n+    const handleDrawerToggle = () => {\r\n+        setMobileOpen(!mobileOpen);\r\n+    };\r\n \r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n+    const drawerContent = (\r\n+        <List>\r\n+            {adminMenu.map((item) => (\r\n+                <Link to={item.to} key={item.label} style={{ textDecoration: 'none' }}>\r\n+                    <ListItem \r\n+                        button \r\n+                        selected={activeMenu === item.label} \r\n+                        onClick={() => handleMenuClick(item.label)}\r\n+                        sx={{\r\n+                            backgroundColor: activeMenu === item.label ? 'var(--dark-blue-color)' : 'var(--blue-color)',\r\n+                            color: 'white',\r\n+                            '&:hover': {\r\n+                                backgroundColor: 'var(--dark-blue-color)',\r\n+                            },\r\n+                            borderRadius: '8px',\r\n+                            margin: '5px 10px',\r\n+                        }}\r\n+                    >\r\n+                        <ListItemIcon sx={{ color: 'white' }}>{item.icon}</ListItemIcon>\r\n+                        {isExpanded && <ListItemText primary={item.label} />}\r\n+                    </ListItem>\r\n+                </Link>\r\n+            ))}\r\n+            <ListItem \r\n+                button\r\n+                sx={{\r\n+                    backgroundColor: 'var(--blue-color)',\r\n+                    color: 'white',\r\n+                    '&:hover': {\r\n+                        backgroundColor: 'var(--dark-blue-color)',\r\n+                    },\r\n+                    borderRadius: '8px',\r\n+                    margin: '5px 10px',\r\n+                }}\r\n+            >\r\n+                <ListItemIcon sx={{ color: 'white' }}><HiLogout /></ListItemIcon>\r\n+                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n+            </ListItem>\r\n+        </List>\r\n+    );\r\n+\r\n     return (\r\n-        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>\r\n+        <Grid container>\r\n+            {/* Sidebar for large screens */}\r\n+            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n+                <Drawer\r\n+                    variant=\"permanent\"\r\n+                    open={isExpanded}\r\n+                    sx={{\r\n+                        width: isExpanded ? 240 : 60,\r\n+                        flexShrink: 0,\r\n+                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n+                    }}\r\n+                >\r\n+                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n+                        {isExpanded && <span>FoodMood.</span>}\r\n+                        <IconButton onClick={toggleSidebar}>\r\n+                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                        </IconButton>\r\n+                    </div>\r\n+                    {drawerContent}\r\n+                </Drawer>\r\n+            </Grid>\r\n+\r\n+            {/* Sidebar for mobile screens */}\r\n+            <IconButton\r\n+                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n+                onClick={handleDrawerToggle}\r\n+            >\r\n+                <HiMenu />\r\n+            </IconButton>\r\n+            <Drawer\r\n+                variant=\"temporary\"\r\n+                open={mobileOpen}\r\n+                onClose={handleDrawerToggle}\r\n+                ModalProps={{ keepMounted: true }}\r\n+                sx={{\r\n+                    '& .MuiDrawer-paper': { width: 240 },\r\n+                }}\r\n+            >\r\n+                {drawerContent}\r\n+            </Drawer>\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150425258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,17 +96,10 @@\n     return (\r\n         <Grid container>\r\n             {/* Sidebar for large screens */}\r\n             <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n-                <Drawer\r\n-                    variant=\"permanent\"\r\n-                    open={isExpanded}\r\n-                    sx={{\r\n-                        width: isExpanded ? 240 : 60,\r\n-                        flexShrink: 0,\r\n-                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n-                    }}\r\n-                >\r\n+                <Drawer variant=\"permanent\" open={isExpanded} sx={{width: isExpanded ? 240 : 60, flexShrink: 0, \r\n+                '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },}}>\r\n                     <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n                         {isExpanded && <span>FoodMood.</span>}\r\n                         <IconButton onClick={toggleSidebar}>\r\n                             {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n"
                },
                {
                    "date": 1740150458245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n+import './Sidebar.css';\r\n import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n+import { Grid } from '@mui/material';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [mobileOpen, setMobileOpen] = useState(false);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n@@ -20,115 +20,74 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: (\r\n-                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n-                    <HiBell />\r\n-                </Badge>\r\n-            ),\r\n+            icon: <HiBell />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n-\r\n+ \r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0);\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    const handleDrawerToggle = () => {\r\n-        setMobileOpen(!mobileOpen);\r\n-    };\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n \r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n-    const drawerContent = (\r\n-        <List>\r\n-            {adminMenu.map((item) => (\r\n-                <Link to={item.to} key={item.label} style={{ textDecoration: 'none' }}>\r\n-                    <ListItem \r\n-                        button \r\n-                        selected={activeMenu === item.label} \r\n-                        onClick={() => handleMenuClick(item.label)}\r\n-                        sx={{\r\n-                            backgroundColor: activeMenu === item.label ? 'var(--dark-blue-color)' : 'var(--blue-color)',\r\n-                            color: 'white',\r\n-                            '&:hover': {\r\n-                                backgroundColor: 'var(--dark-blue-color)',\r\n-                            },\r\n-                            borderRadius: '8px',\r\n-                            margin: '5px 10px',\r\n-                        }}\r\n-                    >\r\n-                        <ListItemIcon sx={{ color: 'white' }}>{item.icon}</ListItemIcon>\r\n-                        {isExpanded && <ListItemText primary={item.label} />}\r\n-                    </ListItem>\r\n-                </Link>\r\n-            ))}\r\n-            <ListItem \r\n-                button\r\n-                sx={{\r\n-                    backgroundColor: 'var(--blue-color)',\r\n-                    color: 'white',\r\n-                    '&:hover': {\r\n-                        backgroundColor: 'var(--dark-blue-color)',\r\n-                    },\r\n-                    borderRadius: '8px',\r\n-                    margin: '5px 10px',\r\n-                }}\r\n-            >\r\n-                <ListItemIcon sx={{ color: 'white' }}><HiLogout /></ListItemIcon>\r\n-                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n-            </ListItem>\r\n-        </List>\r\n-    );\r\n-\r\n     return (\r\n-        <Grid container>\r\n-            {/* Sidebar for large screens */}\r\n-            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n-                <Drawer variant=\"permanent\" open={isExpanded} sx={{width: isExpanded ? 240 : 60, flexShrink: 0, \r\n-                '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },}}>\r\n-                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n-                        {isExpanded && <span>FoodMood.</span>}\r\n-                        <IconButton onClick={toggleSidebar}>\r\n-                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                        </IconButton>\r\n-                    </div>\r\n-                    {drawerContent}\r\n-                </Drawer>\r\n-            </Grid>\r\n-\r\n-            {/* Sidebar for mobile screens */}\r\n-            <IconButton\r\n-                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n-                onClick={handleDrawerToggle}\r\n-            >\r\n-                <HiMenu />\r\n-            </IconButton>\r\n-            <Drawer\r\n-                variant=\"temporary\"\r\n-                open={mobileOpen}\r\n-                onClose={handleDrawerToggle}\r\n-                ModalProps={{ keepMounted: true }}\r\n-                sx={{\r\n-                    '& .MuiDrawer-paper': { width: 240 },\r\n-                }}\r\n-            >\r\n-                {drawerContent}\r\n-            </Drawer>\r\n-        </Grid>\r\n+        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150472838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n+        <Grid>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n@@ -86,8 +87,9 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150804931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid>\r\n+        <Grid container>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n"
                },
                {
                    "date": 1740150810080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,8 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n@@ -87,9 +86,8 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n-        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150815794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n+        <Grid container>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n@@ -86,8 +87,9 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150825243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container>\r\n+        <Grid container sx={{ display: 'flex', width: '100vw', height: '100vh', padding: 0 }}>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n"
                },
                {
                    "date": 1740150836946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container sx={{ display: 'flex', width: '100vw', height: '100vh', padding: 0 }}>\r\n+        <Grid container>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n"
                },
                {
                    "date": 1740150843755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container>\r\n+        <Grid container disableGutters>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n"
                },
                {
                    "date": 1740150954789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,12 +59,14 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container disableGutters>\r\n+        <Grid container spacing={0} style={{ height: '100vh' }}>\r\n+    {/* Sidebar */}\r\n+    <Grid item xs={isExpanded ? 2 : 1} style={{ transition: '0.3s' }}>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n                 </div>\r\n                 <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n                     {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n@@ -87,9 +89,18 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n-        </Grid>\r\n+    </Grid>\r\n+\r\n+    {/* Main Content */}\r\n+    <Grid item xs={10} style={{ padding: '20px' }}>\r\n+        <div className=\"main-content\">\r\n+            {/* คอนเทนต์ที่อยู่ตรงนี้ */}\r\n+        </div>\r\n+    </Grid>\r\n+</Grid>\r\n+\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150970116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,14 +59,12 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container spacing={0} style={{ height: '100vh' }}>\r\n-    {/* Sidebar */}\r\n-    <Grid item xs={isExpanded ? 2 : 1} style={{ transition: '0.3s' }}>\r\n+        <Grid container>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px' }}>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n                 </div>\r\n                 <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n                     {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n@@ -89,18 +87,9 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n-    </Grid>\r\n-\r\n-    {/* Main Content */}\r\n-    <Grid item xs={10} style={{ padding: '20px' }}>\r\n-        <div className=\"main-content\">\r\n-            {/* คอนเทนต์ที่อยู่ตรงนี้ */}\r\n-        </div>\r\n-    </Grid>\r\n-</Grid>\r\n-\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740150993932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,16 @@\n         { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n         { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <MdFastfood /> },\r\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n-        { \r\n-            to: '/Noti', \r\n-            label: 'การแจ้งเตือน', \r\n+        {\r\n+            to: '/Noti',\r\n+            label: 'การแจ้งเตือน',\r\n             icon: <HiBell />,\r\n             badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n- \r\n+\r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n             setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n@@ -60,35 +60,35 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <Grid container>\r\n-        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n+            <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+                <div className='sidebar-header'>\r\n+                    <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                        {isExpanded && \"FoodMood.\"}\r\n+                    </div>\r\n+                    <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                        {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                    </button>\r\n                 </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                <ul>\r\n+                    {adminMenu.map((item) => (\r\n+                        <Link to={item.to} key={item.label}>\r\n+                            <li\r\n+                                className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`}\r\n+                                onClick={() => handleMenuClick(item.label)}\r\n+                            >\r\n+                                {item.icon}\r\n+                                {isExpanded && item.label}\r\n+                                {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                            </li>\r\n+                        </Link>\r\n+                    ))}\r\n+                </ul>\r\n+                <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                    <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n                 </button>\r\n             </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>\r\n         </Grid>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1740152149590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,16 +17,16 @@\n         { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n         { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <MdFastfood /> },\r\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n-        {\r\n-            to: '/Noti',\r\n-            label: 'การแจ้งเตือน',\r\n+        { \r\n+            to: '/Noti', \r\n+            label: 'การแจ้งเตือน', \r\n             icon: <HiBell />,\r\n             badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n-\r\n+ \r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n             setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n@@ -59,37 +59,37 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container>\r\n-            <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-                <div className='sidebar-header'>\r\n-                    <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                        {isExpanded && \"FoodMood.\"}\r\n-                    </div>\r\n-                    <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                        {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                    </button>\r\n+        //<Grid container>\r\n+        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n                 </div>\r\n-                <ul>\r\n-                    {adminMenu.map((item) => (\r\n-                        <Link to={item.to} key={item.label}>\r\n-                            <li\r\n-                                className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`}\r\n-                                onClick={() => handleMenuClick(item.label)}\r\n-                            >\r\n-                                {item.icon}\r\n-                                {isExpanded && item.label}\r\n-                                {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                            </li>\r\n-                        </Link>\r\n-                    ))}\r\n-                </ul>\r\n-                <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                    <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n                 </button>\r\n             </div>\r\n-        </Grid>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>\r\n+        //</Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740205216603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Link, useLocation } from 'react-router-dom';\r\n+import './Sidebar.css';\r\n+import { MdFastfood } from \"react-icons/md\";\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n+import { Grid } from '@mui/material';\r\n+\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+\r\n+\r\n+const Sidebar = () => {\r\n+    const location = useLocation();\r\n+    const [activeMenu, setActiveMenu] = useState('');\r\n+    const [isExpanded, setIsExpanded] = useState(true);\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n+\r\n+    const adminMenu = [\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n+        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n+        { \r\n+            to: '/Noti', \r\n+            label: 'การแจ้งเตือน', \r\n+            icon: <HiBell />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+        }\r\n+    ];\r\n+ \r\n+    const handleMenuClick = (menu) => {\r\n+        setActiveMenu(menu);\r\n+        if (menu === 'การแจ้งเตือน') {\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n+        }\r\n+    };\r\n+\r\n+    const toggleSidebar = () => {\r\n+        setIsExpanded(!isExpanded);\r\n+    };\r\n+\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n+\r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n+    useEffect(() => {\r\n+        const currentPath = location.pathname;\r\n+        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n+        if (activeItem) {\r\n+            setActiveMenu(activeItem.label);\r\n+        }\r\n+    }, [location.pathname, adminMenu]);\r\n+\r\n+    return (\r\n+        //<Grid container>\r\n+        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>\r\n+        //</Grid>\r\n+    );\r\n+}\r\n+\r\n+export default Sidebar;\r\n"
                },
                {
                    "date": 1740205377682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { MdFastfood } from \"react-icons/md\";\r\n import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n import { Grid } from '@mui/material';\r\n \r\n-import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+import { FastfoodRoundedIcon,InboxRoundedIcon } from '@mui/icons-material/FastfoodRounded';\r\n \r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n@@ -95,99 +95,4 @@\n     );\r\n }\r\n \r\n export default Sidebar;\r\n-import React, { useState, useEffect } from 'react';\r\n-import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n-import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n-import { Grid } from '@mui/material';\r\n-\r\n-const Sidebar = () => {\r\n-    const location = useLocation();\r\n-    const [activeMenu, setActiveMenu] = useState('');\r\n-    const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n-\r\n-    const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n-        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <MdFastfood /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n-        { \r\n-            to: '/Noti', \r\n-            label: 'การแจ้งเตือน', \r\n-            icon: <HiBell />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n-        }\r\n-    ];\r\n- \r\n-    const handleMenuClick = (menu) => {\r\n-        setActiveMenu(menu);\r\n-        if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n-        }\r\n-    };\r\n-\r\n-    const toggleSidebar = () => {\r\n-        setIsExpanded(!isExpanded);\r\n-    };\r\n-\r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n-\r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n-    useEffect(() => {\r\n-        const currentPath = location.pathname;\r\n-        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n-        if (activeItem) {\r\n-            setActiveMenu(activeItem.label);\r\n-        }\r\n-    }, [location.pathname, adminMenu]);\r\n-\r\n-    return (\r\n-        //<Grid container>\r\n-        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>\r\n-        //</Grid>\r\n-    );\r\n-}\r\n-\r\n-export default Sidebar;\r\n"
                },
                {
                    "date": 1740205385820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n         { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n"
                },
                {
                    "date": 1740205407289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n import { MdFastfood } from \"react-icons/md\";\r\n import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n import { Grid } from '@mui/material';\r\n \r\n-import { FastfoodRoundedIcon,InboxRoundedIcon } from '@mui/icons-material/FastfoodRounded';\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n \r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n"
                },
                {
                    "date": 1740205467085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import { Grid } from '@mui/material';\r\n \r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n+import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n \r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n@@ -17,9 +18,9 @@\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <v /> },\r\n         { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n"
                },
                {
                    "date": 1740205507910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n \r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n+import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n \r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n@@ -16,11 +17,11 @@\n     const [isExpanded, setIsExpanded] = useState(true);\r\n     const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <v /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n         { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n"
                },
                {
                    "date": 1740205533569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,19 +8,19 @@\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n+import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n \r\n-\r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n     const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n         { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n         { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n"
                },
                {
                    "date": 1740205551941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n+import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n@@ -22,9 +23,9 @@\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n         { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n         { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n             icon: <HiBell />,\r\n"
                },
                {
                    "date": 1740205558688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n-import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell } from 'react-icons/hi';\r\n+\r\n import { Grid } from '@mui/material';\r\n \r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n"
                },
                {
                    "date": 1740205564575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n-\r\n+import { HiBell, HiChevronLeft, HiChevronRight, HiLogout } from 'react-icons/hi';\r\n import { Grid } from '@mui/material';\r\n \r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n"
                },
                {
                    "date": 1740205590577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n+import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n@@ -90,9 +91,9 @@\n                     </Link>\r\n                 ))}\r\n             </ul>\r\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <HiLogout className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n         //</Grid>\r\n     );\r\n"
                },
                {
                    "date": 1740205618084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n+import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n \r\n const Sidebar = () => {\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n@@ -27,9 +28,9 @@\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: <HiBell />,\r\n+            icon: <NotificationsActiveRoundedIcon />,\r\n             badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n  \r\n"
                },
                {
                    "date": 1740205633705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n-import { HiBell, HiChevronLeft, HiChevronRight, HiLogout } from 'react-icons/hi';\r\n+import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n import { Grid } from '@mui/material';\r\n \r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n"
                },
                {
                    "date": 1740205654210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n     return (\r\n         //<Grid container>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-24 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n                 </div>\r\n                 <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n                     {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n"
                },
                {
                    "date": 1740205679679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        //<Grid container>\r\n+        <Grid container>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n@@ -95,9 +95,9 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n-        //</Grid>\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740205689341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container>\r\n+        <Grid container justifyContent='center'>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n"
                },
                {
                    "date": 1740205776589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n-import { Grid } from '@mui/material';\r\n+import { Drawer, Grid } from '@mui/material';\r\n \r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n@@ -67,9 +67,10 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Grid container justifyContent='center'>\r\n+        <Drawer>\r\n+        </Drawer>\r\n         <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n@@ -95,9 +96,9 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>\r\n-        </Grid>\r\n+        </ฏ>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740205806433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,10 +68,17 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <Drawer>\r\n-        </Drawer>\r\n-        <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+        \r\n+        </Draw>\r\n+    );\r\n+}\r\n+\r\n+export default Sidebar;\r\n+\r\n+{/* \r\n+  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n                     {isExpanded && \"FoodMood.\"}\r\n                 </div>\r\n@@ -95,10 +102,6 @@\n             </ul>\r\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n-        </div>\r\n-        </ฏ>\r\n-    );\r\n-}\r\n-\r\n-export default Sidebar;\r\n+        </div>  \r\n+*/}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740205819264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,11 +67,11 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Drawer>\r\n+        <Drawer anchor='left' open={true} variant='permanent' className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`}>\r\n         \r\n-        </Draw>\r\n+        </Drawer>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740205997693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,10 @@\n import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n \r\n const Sidebar = () => {\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n+\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n     const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n"
                },
                {
                    "date": 1740206015771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Drawer anchor='left' open={true} variant='permanent' className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`}>\r\n+        <Drawer anchor='left' open={true} variant='permanent' onClose{() => setIsDrawerOpen(false)}>\r\n         \r\n         </Drawer>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1740206031991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Drawer anchor='left' open={true} variant='permanent' onClose{() => setIsDrawerOpen(false)}>\r\n+        <Drawer anchor='left' open={isDrawerOpen} >\r\n         \r\n         </Drawer>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1740206038856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n-        <Drawer anchor='left' open={isDrawerOpen} >\r\n+        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n         \r\n         </Drawer>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1740206056704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,8 +70,9 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n+            \r\n         \r\n         </Drawer>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1740206077607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,11 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            \r\n+            <Box>\r\n+                \r\n+            </Box>\r\n         \r\n         </Drawer>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1740206115957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,12 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n-import { Drawer, Grid } from '@mui/material';\r\n+import { Drawer, Box, Typography, IconButton } from '@mui/material';\r\n \r\n+\r\n+\r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n@@ -71,9 +73,9 @@\n \r\n     return (\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box>\r\n-                \r\n+\r\n             </Box>\r\n         \r\n         </Drawer>\r\n     );\r\n"
                },
                {
                    "date": 1740206146394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box>\r\n+            <Box p={2} width='250'>\r\n \r\n             </Box>\r\n         \r\n         </Drawer>\r\n"
                },
                {
                    "date": 1740206155252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box p={2} width='250'>\r\n+            <Box p={2} width='250' role='presentation'>\r\n \r\n             </Box>\r\n         \r\n         </Drawer>\r\n"
                },
                {
                    "date": 1740206162871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box p={2} width='250' role='presentation'>\r\n+            <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n         \r\n         </Drawer>\r\n"
                },
                {
                    "date": 1740206531863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,14 +71,18 @@\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n+        <>\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n         \r\n         </Drawer>\r\n+        \r\n+        </>\r\n+        \r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740206537326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n import './Sidebar.css';\r\n import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n-import { Drawer, Box, Typography, IconButton } from '@mui/material';\r\n+import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n \r\n \r\n \r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n@@ -72,8 +72,9 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <>\r\n+        <IconButton\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n"
                },
                {
                    "date": 1740206548600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <>\r\n-        <IconButton\r\n+        <IconButton size='large' edge='start'\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n"
                },
                {
                    "date": 1740206586549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,11 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <>\r\n-        <IconButton size='large' edge='start'\r\n+        <IconButton size='large' edge='start' onClick={() => setIsDrawerOpen(true)}>\r\n+\r\n+        </IconButton>\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n"
                },
                {
                    "date": 1740206632003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n \r\n     return (\r\n         <>\r\n         <IconButton size='large' edge='start' onClick={() => setIsDrawerOpen(true)}>\r\n-\r\n+            <MenuIcon />\r\n         </IconButton>\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n"
                },
                {
                    "date": 1740206648289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n import './Sidebar.css';\r\n import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n \r\n+import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n \r\n-\r\n import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n"
                },
                {
                    "date": 1740206679704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,10 +72,10 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <>\r\n-        <IconButton size='large' edge='start' onClick={() => setIsDrawerOpen(true)}>\r\n-            <MenuIcon />\r\n+        <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n+            <MenuRoundedIcon />\r\n         </IconButton>\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n"
                },
                {
                    "date": 1740206736549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Link, useLocation } from 'react-router-dom';\r\n+import './Sidebar.css';\r\n+import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n+import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n+\r\n+import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n+\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n+import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n+import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n+import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n+import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n+import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n+import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n+\r\n+const Sidebar = () => {\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n+\r\n+    const location = useLocation();\r\n+    const [activeMenu, setActiveMenu] = useState('');\r\n+    const [isExpanded, setIsExpanded] = useState(true);\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n+\r\n+    const adminMenu = [\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n+        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n+        { \r\n+            to: '/Noti', \r\n+            label: 'การแจ้งเตือน', \r\n+            icon: <NotificationsActiveRoundedIcon />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+        }\r\n+    ];\r\n+ \r\n+    const handleMenuClick = (menu) => {\r\n+        setActiveMenu(menu);\r\n+        if (menu === 'การแจ้งเตือน') {\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n+        }\r\n+    };\r\n+\r\n+    const toggleSidebar = () => {\r\n+        setIsExpanded(!isExpanded);\r\n+    };\r\n+\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n+\r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n+    useEffect(() => {\r\n+        const currentPath = location.pathname;\r\n+        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n+        if (activeItem) {\r\n+            setActiveMenu(activeItem.label);\r\n+        }\r\n+    }, [location.pathname, adminMenu]);\r\n+\r\n+    return (\r\n+        <>\r\n+        <IconButton sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }} onClick={() => setIsDrawerOpen(true)}>\r\n+            <MenuRoundedIcon />\r\n+        </IconButton>\r\n+        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n+            <Box p={2} width='250px' role='presentation'>\r\n+\r\n+            </Box>\r\n+        \r\n+        </Drawer>\r\n+        \r\n+        </>\r\n+        \r\n+    );\r\n+}\r\n+\r\n+export default Sidebar;\r\n+\r\n+{/* \r\n+  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>  \r\n+*/}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740206744449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,129 +72,8 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <>\r\n-        <IconButton sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }} onClick={() => setIsDrawerOpen(true)}>\r\n-            <MenuRoundedIcon />\r\n-        </IconButton>\r\n-        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box p={2} width='250px' role='presentation'>\r\n-\r\n-            </Box>\r\n-        \r\n-        </Drawer>\r\n-        \r\n-        </>\r\n-        \r\n-    );\r\n-}\r\n-\r\n-export default Sidebar;\r\n-\r\n-{/* \r\n-  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>  \r\n-*/}\n-import React, { useState, useEffect } from 'react';\r\n-import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n-import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n-import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n-\r\n-import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n-\r\n-import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n-import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n-import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n-import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n-import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n-import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n-import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n-import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n-\r\n-const Sidebar = () => {\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n-\r\n-    const location = useLocation();\r\n-    const [activeMenu, setActiveMenu] = useState('');\r\n-    const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n-\r\n-    const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n-        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n-        { \r\n-            to: '/Noti', \r\n-            label: 'การแจ้งเตือน', \r\n-            icon: <NotificationsActiveRoundedIcon />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n-        }\r\n-    ];\r\n- \r\n-    const handleMenuClick = (menu) => {\r\n-        setActiveMenu(menu);\r\n-        if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n-        }\r\n-    };\r\n-\r\n-    const toggleSidebar = () => {\r\n-        setIsExpanded(!isExpanded);\r\n-    };\r\n-\r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n-\r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n-    useEffect(() => {\r\n-        const currentPath = location.pathname;\r\n-        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n-        if (activeItem) {\r\n-            setActiveMenu(activeItem.label);\r\n-        }\r\n-    }, [location.pathname, adminMenu]);\r\n-\r\n-    return (\r\n-        <>\r\n         <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n             <MenuRoundedIcon />\r\n         </IconButton>\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n"
                },
                {
                    "date": 1740206783168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,96 +1,147 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n-import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n-import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n+import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n+import { MdFastfood } from \"react-icons/md\";\r\n+import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n \r\n-import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n-\r\n-import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n-import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n-import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n-import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n-import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n-import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n-import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n-import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n-\r\n const Sidebar = () => {\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n-\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n+    const [mobileOpen, setMobileOpen] = useState(false);\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n \r\n     const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n-        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n+        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <MdFastfood /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: <NotificationsActiveRoundedIcon />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+            icon: (\r\n+                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n+                    <HiBell />\r\n+                </Badge>\r\n+            ),\r\n         }\r\n     ];\r\n- \r\n+\r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n+            setUnreadNotifications(0);\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n+    const handleDrawerToggle = () => {\r\n+        setMobileOpen(!mobileOpen);\r\n+    };\r\n \r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n+    const drawerContent = (\r\n+        <List>\r\n+            {adminMenu.map((item) => (\r\n+                <Link to={item.to} key={item.label} style={{ textDecoration: 'none' }}>\r\n+                    <ListItem \r\n+                        button \r\n+                        selected={activeMenu === item.label} \r\n+                        onClick={() => handleMenuClick(item.label)}\r\n+                        sx={{\r\n+                            backgroundColor: activeMenu === item.label ? 'var(--dark-blue-color)' : 'var(--blue-color)',\r\n+                            color: 'white',\r\n+                            '&:hover': {\r\n+                                backgroundColor: 'var(--dark-blue-color)',\r\n+                            },\r\n+                            borderRadius: '8px',\r\n+                            margin: '5px 10px',\r\n+                        }}\r\n+                    >\r\n+                        <ListItemIcon sx={{ color: 'white' }}>{item.icon}</ListItemIcon>\r\n+                        {isExpanded && <ListItemText primary={item.label} />}\r\n+                    </ListItem>\r\n+                </Link>\r\n+            ))}\r\n+            <ListItem \r\n+                button\r\n+                sx={{\r\n+                    backgroundColor: 'var(--blue-color)',\r\n+                    color: 'white',\r\n+                    '&:hover': {\r\n+                        backgroundColor: 'var(--dark-blue-color)',\r\n+                    },\r\n+                    borderRadius: '8px',\r\n+                    margin: '5px 10px',\r\n+                }}\r\n+            >\r\n+                <ListItemIcon sx={{ color: 'white' }}><HiLogout /></ListItemIcon>\r\n+                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n+            </ListItem>\r\n+        </List>\r\n+    );\r\n+\r\n     return (\r\n-        <>\r\n-        <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n-            <MenuRoundedIcon />\r\n-        </IconButton>\r\n-        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box p={2} width='250px' role='presentation'>\r\n+        <Grid container>\r\n+            {/* Sidebar for large screens */}\r\n+            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n+                <Drawer\r\n+                    variant=\"permanent\"\r\n+                    open={isExpanded}\r\n+                    sx={{\r\n+                        width: isExpanded ? 240 : 60,\r\n+                        flexShrink: 0,\r\n+                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n+                    }}\r\n+                >\r\n+                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n+                        {isExpanded && <span>FoodMood.</span>}\r\n+                        <IconButton onClick={toggleSidebar}>\r\n+                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                        </IconButton>\r\n+                    </div>\r\n+                    {drawerContent}\r\n+                </Drawer>\r\n+            </Grid>\r\n \r\n-            </Box>\r\n-        \r\n-        </Drawer>\r\n-        \r\n-        </>\r\n-        \r\n+            {/* Sidebar for mobile screens */}\r\n+            <IconButton\r\n+                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n+                onClick={handleDrawerToggle}\r\n+            >\r\n+                <HiMenu />\r\n+            </IconButton>\r\n+            <Drawer\r\n+                variant=\"temporary\"\r\n+                open={mobileOpen}\r\n+                onClose={handleDrawerToggle}\r\n+                ModalProps={{ keepMounted: true }}\r\n+                sx={{\r\n+                    '& .MuiDrawer-paper': { width: 240 },\r\n+                }}\r\n+            >\r\n+                {drawerContent}\r\n+            </Drawer>\r\n+        </Grid>\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n \r\n+\r\n {/* \r\n   <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n"
                },
                {
                    "date": 1740206793855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,147 +1,96 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\n-import { MdFastfood } from \"react-icons/md\";\r\n-import { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n+import './Sidebar.css';\r\n+import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n+import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n \r\n+import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n+\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n+import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n+import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n+import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n+import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n+import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n+import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n+\r\n const Sidebar = () => {\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n+\r\n     const location = useLocation();\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n     const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [mobileOpen, setMobileOpen] = useState(false);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n-        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <MdFastfood /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n+        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n         { \r\n             to: '/Noti', \r\n             label: 'การแจ้งเตือน', \r\n-            icon: (\r\n-                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n-                    <HiBell />\r\n-                </Badge>\r\n-            ),\r\n+            icon: <NotificationsActiveRoundedIcon />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n-\r\n+ \r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0);\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n         }\r\n     };\r\n \r\n     const toggleSidebar = () => {\r\n         setIsExpanded(!isExpanded);\r\n     };\r\n \r\n-    const handleDrawerToggle = () => {\r\n-        setMobileOpen(!mobileOpen);\r\n-    };\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n \r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n     useEffect(() => {\r\n         const currentPath = location.pathname;\r\n         const activeItem = adminMenu.find(item => item.to === currentPath);\r\n         if (activeItem) {\r\n             setActiveMenu(activeItem.label);\r\n         }\r\n     }, [location.pathname, adminMenu]);\r\n \r\n-    const drawerContent = (\r\n-        <List>\r\n-            {adminMenu.map((item) => (\r\n-                <Link to={item.to} key={item.label} style={{ textDecoration: 'none' }}>\r\n-                    <ListItem \r\n-                        button \r\n-                        selected={activeMenu === item.label} \r\n-                        onClick={() => handleMenuClick(item.label)}\r\n-                        sx={{\r\n-                            backgroundColor: activeMenu === item.label ? 'var(--dark-blue-color)' : 'var(--blue-color)',\r\n-                            color: 'white',\r\n-                            '&:hover': {\r\n-                                backgroundColor: 'var(--dark-blue-color)',\r\n-                            },\r\n-                            borderRadius: '8px',\r\n-                            margin: '5px 10px',\r\n-                        }}\r\n-                    >\r\n-                        <ListItemIcon sx={{ color: 'white' }}>{item.icon}</ListItemIcon>\r\n-                        {isExpanded && <ListItemText primary={item.label} />}\r\n-                    </ListItem>\r\n-                </Link>\r\n-            ))}\r\n-            <ListItem \r\n-                button\r\n-                sx={{\r\n-                    backgroundColor: 'var(--blue-color)',\r\n-                    color: 'white',\r\n-                    '&:hover': {\r\n-                        backgroundColor: 'var(--dark-blue-color)',\r\n-                    },\r\n-                    borderRadius: '8px',\r\n-                    margin: '5px 10px',\r\n-                }}\r\n-            >\r\n-                <ListItemIcon sx={{ color: 'white' }}><HiLogout /></ListItemIcon>\r\n-                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n-            </ListItem>\r\n-        </List>\r\n-    );\r\n-\r\n     return (\r\n-        <Grid container>\r\n-            {/* Sidebar for large screens */}\r\n-            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n-                <Drawer\r\n-                    variant=\"permanent\"\r\n-                    open={isExpanded}\r\n-                    sx={{\r\n-                        width: isExpanded ? 240 : 60,\r\n-                        flexShrink: 0,\r\n-                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n-                    }}\r\n-                >\r\n-                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n-                        {isExpanded && <span>FoodMood.</span>}\r\n-                        <IconButton onClick={toggleSidebar}>\r\n-                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                        </IconButton>\r\n-                    </div>\r\n-                    {drawerContent}\r\n-                </Drawer>\r\n-            </Grid>\r\n+        <>\r\n+        <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n+            <MenuRoundedIcon />\r\n+        </IconButton>\r\n+        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n+            <Box p={2} width='250px' role='presentation'>\r\n \r\n-            {/* Sidebar for mobile screens */}\r\n-            <IconButton\r\n-                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n-                onClick={handleDrawerToggle}\r\n-            >\r\n-                <HiMenu />\r\n-            </IconButton>\r\n-            <Drawer\r\n-                variant=\"temporary\"\r\n-                open={mobileOpen}\r\n-                onClose={handleDrawerToggle}\r\n-                ModalProps={{ keepMounted: true }}\r\n-                sx={{\r\n-                    '& .MuiDrawer-paper': { width: 240 },\r\n-                }}\r\n-            >\r\n-                {drawerContent}\r\n-            </Drawer>\r\n-        </Grid>\r\n+            </Box>\r\n+        \r\n+        </Drawer>\r\n+        \r\n+        </>\r\n+        \r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n \r\n-\r\n {/* \r\n   <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n"
                },
                {
                    "date": 1740206815821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         <>\r\n         <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n             <MenuRoundedIcon />\r\n         </IconButton>\r\n-        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n+        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(true)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n         \r\n"
                },
                {
                    "date": 1740206822847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         <>\r\n         <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n             <MenuRoundedIcon />\r\n         </IconButton>\r\n-        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(true)}>\r\n+        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(close)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n         \r\n"
                },
                {
                    "date": 1740206828132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n         <>\r\n         <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n             <MenuRoundedIcon />\r\n         </IconButton>\r\n-        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(close)}>\r\n+        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n             <Box p={2} width='250px' role='presentation'>\r\n \r\n             </Box>\r\n         \r\n"
                },
                {
                    "date": 1740206844589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Link, useLocation } from 'react-router-dom';\r\n+import './Sidebar.css';\r\n+import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n+import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n+\r\n+import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n+\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n+import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n+import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n+import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n+import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n+import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n+import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n+\r\n+const Sidebar = () => {\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n+\r\n+    const location = useLocation();\r\n+    const [activeMenu, setActiveMenu] = useState('');\r\n+    const [isExpanded, setIsExpanded] = useState(true);\r\n+    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n+\r\n+    const adminMenu = [\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n+        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n+        { \r\n+            to: '/Noti', \r\n+            label: 'การแจ้งเตือน', \r\n+            icon: <NotificationsActiveRoundedIcon />,\r\n+            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+        }\r\n+    ];\r\n+ \r\n+    const handleMenuClick = (menu) => {\r\n+        setActiveMenu(menu);\r\n+        if (menu === 'การแจ้งเตือน') {\r\n+            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n+        }\r\n+    };\r\n+\r\n+    const toggleSidebar = () => {\r\n+        setIsExpanded(!isExpanded);\r\n+    };\r\n+\r\n+    // Simulate fetching unread notifications from backend\r\n+    useEffect(() => {\r\n+        const fetchNotifications = () => {\r\n+            // Mock: Random unread notifications count\r\n+            const newUnreadCount = Math.floor(Math.random() * 10);\r\n+            setUnreadNotifications(newUnreadCount);\r\n+        };\r\n+\r\n+        fetchNotifications();\r\n+        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n+        return () => clearInterval(interval);\r\n+    }, []);\r\n+\r\n+    // Update active menu based on current URL\r\n+    useEffect(() => {\r\n+        const currentPath = location.pathname;\r\n+        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n+        if (activeItem) {\r\n+            setActiveMenu(activeItem.label);\r\n+        }\r\n+    }, [location.pathname, adminMenu]);\r\n+\r\n+    return (\r\n+        <>\r\n+        <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n+            <MenuRoundedIcon />\r\n+        </IconButton>\r\n+        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n+            <Box p={2} width='23vh' role='presentation'>\r\n+\r\n+            </Box>\r\n+        \r\n+        </Drawer>\r\n+        \r\n+        </>\r\n+        \r\n+    );\r\n+}\r\n+\r\n+export default Sidebar;\r\n+\r\n+{/* \r\n+  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>  \r\n+*/}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740206853332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n         <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n             <MenuRoundedIcon />\r\n         </IconButton>\r\n         <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box p={2} width='23vh' role='presentation'>\r\n+            <Box p={2} width='23vh' >\r\n \r\n             </Box>\r\n         \r\n         </Drawer>\r\n@@ -117,126 +117,5 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>  \r\n-*/}\n-import React, { useState, useEffect } from 'react';\r\n-import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n-import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n-import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n-\r\n-import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n-\r\n-import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n-import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n-import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n-import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n-import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n-import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n-import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n-import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n-\r\n-const Sidebar = () => {\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n-\r\n-    const location = useLocation();\r\n-    const [activeMenu, setActiveMenu] = useState('');\r\n-    const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n-\r\n-    const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n-        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n-        { \r\n-            to: '/Noti', \r\n-            label: 'การแจ้งเตือน', \r\n-            icon: <NotificationsActiveRoundedIcon />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n-        }\r\n-    ];\r\n- \r\n-    const handleMenuClick = (menu) => {\r\n-        setActiveMenu(menu);\r\n-        if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n-        }\r\n-    };\r\n-\r\n-    const toggleSidebar = () => {\r\n-        setIsExpanded(!isExpanded);\r\n-    };\r\n-\r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n-\r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n-    useEffect(() => {\r\n-        const currentPath = location.pathname;\r\n-        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n-        if (activeItem) {\r\n-            setActiveMenu(activeItem.label);\r\n-        }\r\n-    }, [location.pathname, adminMenu]);\r\n-\r\n-    return (\r\n-        <>\r\n-        <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n-            <MenuRoundedIcon />\r\n-        </IconButton>\r\n-        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box p={2} width='250px' role='presentation'>\r\n-\r\n-            </Box>\r\n-        \r\n-        </Drawer>\r\n-        \r\n-        </>\r\n-        \r\n-    );\r\n-}\r\n-\r\n-export default Sidebar;\r\n-\r\n-{/* \r\n-  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>  \r\n */}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740206925114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,16 +29,16 @@\n         { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n         { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n         { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n         { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n-        { \r\n-            to: '/Noti', \r\n-            label: 'การแจ้งเตือน', \r\n+        {\r\n+            to: '/Noti',\r\n+            label: 'การแจ้งเตือน',\r\n             icon: <NotificationsActiveRoundedIcon />,\r\n             badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n         }\r\n     ];\r\n- \r\n+\r\n     const handleMenuClick = (menu) => {\r\n         setActiveMenu(menu);\r\n         if (menu === 'การแจ้งเตือน') {\r\n             setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n@@ -72,20 +72,20 @@\n     }, [location.pathname, adminMenu]);\r\n \r\n     return (\r\n         <>\r\n-        <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n-            <MenuRoundedIcon />\r\n-        </IconButton>\r\n-        <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-            <Box p={2} width='23vh' >\r\n+            <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n+                <MenuRoundedIcon />\r\n+            </IconButton>\r\n+            <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n+                <Box p={2} width='23vh' >\r\n \r\n-            </Box>\r\n-        \r\n-        </Drawer>\r\n-        \r\n+                </Box>\r\n+\r\n+            </Drawer>\r\n+\r\n         </>\r\n-        \r\n+\r\n     );\r\n }\r\n \r\n export default Sidebar;\r\n"
                },
                {
                    "date": 1740210101795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,14 +15,13 @@\n import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n \r\n const Sidebar = () => {\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n-\r\n     const location = useLocation();\r\n+    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // เช็คขนาดหน้าจอ\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n+    const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n-    const [isExpanded, setIsExpanded] = useState(true);\r\n-    const [unreadNotifications, setUnreadNotifications] = useState(0); // Mock for unread notification count\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n"
                },
                {
                    "date": 1740210138164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,16 @@\n     const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n     const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n \r\n+    useEffect(() => {\r\n+        if (isSmallScreen) {\r\n+            setIsDrawerOpen(false);\r\n+        } else {\r\n+            setIsDrawerOpen(true);\r\n+        }\r\n+    }, [isSmallScreen]);\r\n+\r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n         { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n         { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n@@ -32,61 +40,81 @@\n         {\r\n             to: '/Noti',\r\n             label: 'การแจ้งเตือน',\r\n             icon: <NotificationsActiveRoundedIcon />,\r\n-            badge: unreadNotifications > 0, // Show badge if there are unread notifications\r\n+            badge: unreadNotifications > 0,\r\n         }\r\n     ];\r\n \r\n-    const handleMenuClick = (menu) => {\r\n-        setActiveMenu(menu);\r\n-        if (menu === 'การแจ้งเตือน') {\r\n-            setUnreadNotifications(0); // Mark all notifications as read when visiting the page\r\n-        }\r\n-    };\r\n-\r\n-    const toggleSidebar = () => {\r\n-        setIsExpanded(!isExpanded);\r\n-    };\r\n-\r\n-    // Simulate fetching unread notifications from backend\r\n-    useEffect(() => {\r\n-        const fetchNotifications = () => {\r\n-            // Mock: Random unread notifications count\r\n-            const newUnreadCount = Math.floor(Math.random() * 10);\r\n-            setUnreadNotifications(newUnreadCount);\r\n-        };\r\n-\r\n-        fetchNotifications();\r\n-        const interval = setInterval(fetchNotifications, 10000); // Simulate periodic updates\r\n-        return () => clearInterval(interval);\r\n-    }, []);\r\n-\r\n-    // Update active menu based on current URL\r\n-    useEffect(() => {\r\n-        const currentPath = location.pathname;\r\n-        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n-        if (activeItem) {\r\n-            setActiveMenu(activeItem.label);\r\n-        }\r\n-    }, [location.pathname, adminMenu]);\r\n-\r\n     return (\r\n         <>\r\n-            <IconButton size='large' edge='start' aria-label='logo' onClick={() => setIsDrawerOpen(true)}>\r\n-                <MenuRoundedIcon />\r\n-            </IconButton>\r\n-            <Drawer anchor='left' open={isDrawerOpen} onClose={() => setIsDrawerOpen(false)}>\r\n-                <Box p={2} width='23vh' >\r\n+            {/* ปุ่มเมนูสำหรับมือถือ */}\r\n+            {isSmallScreen && (\r\n+                <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n+                    <MenuRoundedIcon />\r\n+                </IconButton>\r\n+            )}\r\n \r\n+            {/* Sidebar สำหรับหน้าจอใหญ่ */}\r\n+            <Drawer\r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+                anchor='left'\r\n+                open={isDrawerOpen}\r\n+                onClose={() => setIsDrawerOpen(false)}\r\n+                sx={{\r\n+                    width: isCollapsed ? 80 : 250,\r\n+                    flexShrink: 0,\r\n+                    '& .MuiDrawer-paper': {\r\n+                        width: isCollapsed ? 80 : 250,\r\n+                        transition: 'width 0.3s',\r\n+                        overflowX: 'hidden',\r\n+                    }\r\n+                }}\r\n+            >\r\n+                <Box\r\n+                    p={2}\r\n+                    sx={{\r\n+                        height: '100vh',\r\n+                        display: 'flex',\r\n+                        flexDirection: 'column',\r\n+                        alignItems: isCollapsed ? 'center' : 'flex-start',\r\n+                    }}\r\n+                >\r\n+                    {/* ปุ่ม Collapse/Expand */}\r\n+                    {!isSmallScreen && (\r\n+                        <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n+                            <MenuRoundedIcon />\r\n+                        </IconButton>\r\n+                    )}\r\n+\r\n+                    {/* เมนูรายการ */}\r\n+                    <ul style={{ listStyle: 'none', padding: 0, marginTop: 10 }}>\r\n+                        {adminMenu.map((item) => (\r\n+                            <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n+                                <li\r\n+                                    style={{\r\n+                                        display: 'flex',\r\n+                                        alignItems: 'center',\r\n+                                        padding: '10px 20px',\r\n+                                        borderRadius: '8px',\r\n+                                        backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n+                                        cursor: 'pointer',\r\n+                                        transition: '0.3s',\r\n+                                    }}\r\n+                                    onClick={() => setActiveMenu(item.label)}\r\n+                                >\r\n+                                    {item.icon}\r\n+                                    {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n+                                    {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                                </li>\r\n+                            </Link>\r\n+                        ))}\r\n+                    </ul>\r\n                 </Box>\r\n-\r\n             </Drawer>\r\n-\r\n         </>\r\n-\r\n     );\r\n-}\r\n+};\r\n \r\n export default Sidebar;\r\n \r\n {/* \r\n"
                },
                {
                    "date": 1740210178194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n                                     onClick={() => setActiveMenu(item.label)}\r\n                                 >\r\n                                     {item.icon}\r\n                                     {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n-                                    {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                                    {item.badge && <span className=\"badge\">{}</span>}\r\n                                 </li>\r\n                             </Link>\r\n                         ))}\r\n                     </ul>\r\n"
                },
                {
                    "date": 1740210200815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,17 @@\n-import React, { useState, useEffect } from 'react';\r\n+import { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n-import './Sidebar.css';\r\n-import { HiChevronLeft, HiChevronRight, } from 'react-icons/hi';\r\n-import { Drawer, Box, Typography, IconButton, Icon } from '@mui/material';\r\n-\r\n+import { Box, Drawer, IconButton, useMediaQuery } from '@mui/material';\r\n import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n-\r\n-import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n-import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n-import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n+import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n+import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n-import LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\n import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n \r\n-const Sidebar = () => {\r\n+const Sidebar = ({ unreadNotifications }) => {\r\n     const location = useLocation();\r\n     const isSmallScreen = useMediaQuery('(max-width: 768px)'); // เช็คขนาดหน้าจอ\r\n     const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n     const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n@@ -103,9 +98,9 @@\n                                     onClick={() => setActiveMenu(item.label)}\r\n                                 >\r\n                                     {item.icon}\r\n                                     {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n-                                    {item.badge && <span className=\"badge\">{}</span>}\r\n+                                    {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n                                 </li>\r\n                             </Link>\r\n                         ))}\r\n                     </ul>\r\n@@ -115,34 +110,4 @@\n     );\r\n };\r\n \r\n export default Sidebar;\r\n-\r\n-{/* \r\n-  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>  \r\n-*/}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740210206459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,144 @@\n+import { useState, useEffect } from 'react';\r\n+import { Link, useLocation } from 'react-router-dom';\r\n+import { Box, Drawer, IconButton, useMediaQuery } from '@mui/material';\r\n+import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n+import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n+import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n+import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n+import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n+import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n+\r\n+const Sidebar = ({ unreadNotifications }) => {\r\n+    const location = useLocation();\r\n+    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // เช็คขนาดหน้าจอ\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n+    const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n+    const [activeMenu, setActiveMenu] = useState('');\r\n+\r\n+    useEffect(() => {\r\n+        if (isSmallScreen) {\r\n+            setIsDrawerOpen(false);\r\n+        } else {\r\n+            setIsDrawerOpen(true);\r\n+        }\r\n+    }, [isSmallScreen]);\r\n+\r\n+    const adminMenu = [\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n+        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n+        {\r\n+            to: '/Noti',\r\n+            label: 'การแจ้งเตือน',\r\n+            icon: <NotificationsActiveRoundedIcon />,\r\n+            badge: unreadNotifications > 0,\r\n+        }\r\n+    ];\r\n+\r\n+    return (\r\n+        <>\r\n+            {/* ปุ่มเมนูสำหรับมือถือ */}\r\n+            {isSmallScreen && (\r\n+                <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n+                    <MenuRoundedIcon />\r\n+                </IconButton>\r\n+            )}\r\n+\r\n+            {/* Sidebar สำหรับหน้าจอใหญ่ */}\r\n+            <Drawer\r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+                anchor='left'\r\n+                open={isDrawerOpen}\r\n+                onClose={() => setIsDrawerOpen(false)}\r\n+                sx={{\r\n+                    width: isCollapsed ? 80 : 250,\r\n+                    flexShrink: 0,\r\n+                    '& .MuiDrawer-paper': {\r\n+                        width: isCollapsed ? 80 : 250,\r\n+                        transition: 'width 0.3s',\r\n+                        overflowX: 'hidden',\r\n+                    }\r\n+                }}\r\n+            >\r\n+                <Box\r\n+                    p={2}\r\n+                    sx={{\r\n+                        height: '100vh',\r\n+                        display: 'flex',\r\n+                        flexDirection: 'column',\r\n+                        alignItems: isCollapsed ? 'center' : 'flex-start',\r\n+                    }}\r\n+                >\r\n+                    {/* ปุ่ม Collapse/Expand */}\r\n+                    {!isSmallScreen && (\r\n+                        <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n+                            <MenuRoundedIcon />\r\n+                        </IconButton>\r\n+                    )}\r\n+\r\n+                    {/* เมนูรายการ */}\r\n+                    <ul style={{ listStyle: 'none', padding: 0, marginTop: 10 }}>\r\n+                        {adminMenu.map((item) => (\r\n+                            <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n+                                <li\r\n+                                    style={{\r\n+                                        display: 'flex',\r\n+                                        alignItems: 'center',\r\n+                                        padding: '10px 20px',\r\n+                                        borderRadius: '8px',\r\n+                                        backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n+                                        cursor: 'pointer',\r\n+                                        transition: '0.3s',\r\n+                                    }}\r\n+                                    onClick={() => setActiveMenu(item.label)}\r\n+                                >\r\n+                                    {item.icon}\r\n+                                    {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n+                                    {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                                </li>\r\n+                            </Link>\r\n+                        ))}\r\n+                    </ul>\r\n+                </Box>\r\n+            </Drawer>\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n+export default Sidebar;\r\n+\r\n+\r\n+{/* \r\n+  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>  \r\n+*/}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740210382696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n \r\n const Sidebar = ({ unreadNotifications }) => {\r\n     const location = useLocation();\r\n-    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // เช็คขนาดหน้าจอ\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n+    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // For mobile user\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // For computer & tablet user\r\n     const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n \r\n     useEffect(() => {\r\n@@ -41,9 +41,9 @@\n     ];\r\n \r\n     return (\r\n         <>\r\n-            {/* ปุ่มเมนูสำหรับมือถือ */}\r\n+            {/* กรณีที่ใช้งานในมือถือ */}\r\n             {isSmallScreen && (\r\n                 <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n@@ -64,16 +64,9 @@\n                         overflowX: 'hidden',\r\n                     }\r\n                 }}\r\n             >\r\n-                <Box\r\n-                    p={2}\r\n-                    sx={{\r\n-                        height: '100vh',\r\n-                        display: 'flex',\r\n-                        flexDirection: 'column',\r\n-                        alignItems: isCollapsed ? 'center' : 'flex-start',\r\n-                    }}\r\n+                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}\r\n                 >\r\n                     {/* ปุ่ม Collapse/Expand */}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n@@ -140,118 +133,5 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>  \r\n-*/}\n-import { useState, useEffect } from 'react';\r\n-import { Link, useLocation } from 'react-router-dom';\r\n-import { Box, Drawer, IconButton, useMediaQuery } from '@mui/material';\r\n-import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n-import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n-import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n-import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n-import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n-import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n-import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n-import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n-\r\n-const Sidebar = ({ unreadNotifications }) => {\r\n-    const location = useLocation();\r\n-    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // เช็คขนาดหน้าจอ\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n-    const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n-    const [activeMenu, setActiveMenu] = useState('');\r\n-\r\n-    useEffect(() => {\r\n-        if (isSmallScreen) {\r\n-            setIsDrawerOpen(false);\r\n-        } else {\r\n-            setIsDrawerOpen(true);\r\n-        }\r\n-    }, [isSmallScreen]);\r\n-\r\n-    const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n-        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n-        {\r\n-            to: '/Noti',\r\n-            label: 'การแจ้งเตือน',\r\n-            icon: <NotificationsActiveRoundedIcon />,\r\n-            badge: unreadNotifications > 0,\r\n-        }\r\n-    ];\r\n-\r\n-    return (\r\n-        <>\r\n-            {/* ปุ่มเมนูสำหรับมือถือ */}\r\n-            {isSmallScreen && (\r\n-                <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n-                    <MenuRoundedIcon />\r\n-                </IconButton>\r\n-            )}\r\n-\r\n-            {/* Sidebar สำหรับหน้าจอใหญ่ */}\r\n-            <Drawer\r\n-                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n-                anchor='left'\r\n-                open={isDrawerOpen}\r\n-                onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{\r\n-                    width: isCollapsed ? 80 : 250,\r\n-                    flexShrink: 0,\r\n-                    '& .MuiDrawer-paper': {\r\n-                        width: isCollapsed ? 80 : 250,\r\n-                        transition: 'width 0.3s',\r\n-                        overflowX: 'hidden',\r\n-                    }\r\n-                }}\r\n-            >\r\n-                <Box\r\n-                    p={2}\r\n-                    sx={{\r\n-                        height: '100vh',\r\n-                        display: 'flex',\r\n-                        flexDirection: 'column',\r\n-                        alignItems: isCollapsed ? 'center' : 'flex-start',\r\n-                    }}\r\n-                >\r\n-                    {/* ปุ่ม Collapse/Expand */}\r\n-                    {!isSmallScreen && (\r\n-                        <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n-                            <MenuRoundedIcon />\r\n-                        </IconButton>\r\n-                    )}\r\n-\r\n-                    {/* เมนูรายการ */}\r\n-                    <ul style={{ listStyle: 'none', padding: 0, marginTop: 10 }}>\r\n-                        {adminMenu.map((item) => (\r\n-                            <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n-                                <li\r\n-                                    style={{\r\n-                                        display: 'flex',\r\n-                                        alignItems: 'center',\r\n-                                        padding: '10px 20px',\r\n-                                        borderRadius: '8px',\r\n-                                        backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n-                                        cursor: 'pointer',\r\n-                                        transition: '0.3s',\r\n-                                    }}\r\n-                                    onClick={() => setActiveMenu(item.label)}\r\n-                                >\r\n-                                    {item.icon}\r\n-                                    {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n-                                    {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                                </li>\r\n-                            </Link>\r\n-                        ))}\r\n-                    </ul>\r\n-                </Box>\r\n-            </Drawer>\r\n-        </>\r\n-    );\r\n-};\r\n-\r\n-export default Sidebar;\n\\ No newline at end of file\n+*/}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740210452676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { useState, useEffect } from 'react';\r\n import { Link, useLocation } from 'react-router-dom';\r\n import { Box, Drawer, IconButton, useMediaQuery } from '@mui/material';\r\n import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n+import MenuOpenRoundedIcon from '@mui/icons-material/MenuOpenRounded';\r\n import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n@@ -64,11 +65,10 @@\n                         overflowX: 'hidden',\r\n                     }\r\n                 }}\r\n             >\r\n-                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}\r\n-                >\r\n-                    {/* ปุ่ม Collapse/Expand */}\r\n+                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n+                    {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                             <MenuRoundedIcon />\r\n                         </IconButton>\r\n"
                },
                {
                    "date": 1740210647178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,19 +12,15 @@\n import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n \r\n const Sidebar = ({ unreadNotifications }) => {\r\n     const location = useLocation();\r\n-    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // For mobile user\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // For computer & tablet user\r\n+    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // เช็คขนาดหน้าจอ\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n     const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n \r\n     useEffect(() => {\r\n-        if (isSmallScreen) {\r\n-            setIsDrawerOpen(false);\r\n-        } else {\r\n-            setIsDrawerOpen(true);\r\n-        }\r\n+        setIsDrawerOpen(!isSmallScreen);\r\n     }, [isSmallScreen]);\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n@@ -42,16 +38,19 @@\n     ];\r\n \r\n     return (\r\n         <>\r\n-            {/* กรณีที่ใช้งานในมือถือ */}\r\n-            {isSmallScreen && (\r\n-                <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n-                    <MenuRoundedIcon />\r\n-                </IconButton>\r\n-            )}\r\n+            {/* ปุ่มเมนู */}\r\n+            <IconButton\r\n+                size='large'\r\n+                edge='start'\r\n+                aria-label='menu'\r\n+                onClick={() => setIsDrawerOpen(!isDrawerOpen)}\r\n+            >\r\n+                {isDrawerOpen ? <MenuOpenRoundedIcon /> : <MenuRoundedIcon />}\r\n+            </IconButton>\r\n \r\n-            {/* Sidebar สำหรับหน้าจอใหญ่ */}\r\n+            {/* Sidebar */}\r\n             <Drawer\r\n                 variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n@@ -65,13 +64,21 @@\n                         overflowX: 'hidden',\r\n                     }\r\n                 }}\r\n             >\r\n-                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n-                    {/* Sidebar: Collapse button*/}\r\n+                <Box\r\n+                    p={2}\r\n+                    sx={{\r\n+                        height: '100vh',\r\n+                        display: 'flex',\r\n+                        flexDirection: 'column',\r\n+                        alignItems: isCollapsed ? 'center' : 'flex-start',\r\n+                    }}\r\n+                >\r\n+                    {/* ปุ่ม Collapse/Expand */}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n-                            <MenuRoundedIcon />\r\n+                            {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n                         </IconButton>\r\n                     )}\r\n \r\n                     {/* เมนูรายการ */}\r\n@@ -105,8 +112,9 @@\n \r\n export default Sidebar;\r\n \r\n \r\n+\r\n {/* \r\n   <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n"
                },
                {
                    "date": 1740210712678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,19 @@\n import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n \r\n const Sidebar = ({ unreadNotifications }) => {\r\n     const location = useLocation();\r\n-    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // เช็คขนาดหน้าจอ\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // เปิด sidebar ตลอดถ้าเป็นจอใหญ่\r\n+    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // For mobile user\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // For computer & tablet user\r\n     const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n     const [activeMenu, setActiveMenu] = useState('');\r\n \r\n     useEffect(() => {\r\n-        setIsDrawerOpen(!isSmallScreen);\r\n+        if (isSmallScreen) {\r\n+            setIsDrawerOpen(false);\r\n+        } else {\r\n+            setIsDrawerOpen(true);\r\n+        }\r\n     }, [isSmallScreen]);\r\n \r\n     const adminMenu = [\r\n         { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n@@ -38,19 +42,16 @@\n     ];\r\n \r\n     return (\r\n         <>\r\n-            {/* ปุ่มเมนู */}\r\n-            <IconButton\r\n-                size='large'\r\n-                edge='start'\r\n-                aria-label='menu'\r\n-                onClick={() => setIsDrawerOpen(!isDrawerOpen)}\r\n-            >\r\n-                {isDrawerOpen ? <MenuOpenRoundedIcon /> : <MenuRoundedIcon />}\r\n-            </IconButton>\r\n+            {/* กรณีที่ใช้งานในมือถือ */}\r\n+            {isSmallScreen && (\r\n+                <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n+                    <MenuRoundedIcon />\r\n+                </IconButton>\r\n+            )}\r\n \r\n-            {/* Sidebar */}\r\n+            {/* Sidebar สำหรับหน้าจอใหญ่ */}\r\n             <Drawer\r\n                 variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n@@ -64,21 +65,13 @@\n                         overflowX: 'hidden',\r\n                     }\r\n                 }}\r\n             >\r\n-                <Box\r\n-                    p={2}\r\n-                    sx={{\r\n-                        height: '100vh',\r\n-                        display: 'flex',\r\n-                        flexDirection: 'column',\r\n-                        alignItems: isCollapsed ? 'center' : 'flex-start',\r\n-                    }}\r\n-                >\r\n-                    {/* ปุ่ม Collapse/Expand */}\r\n+                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n+                    {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n-                            {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n+                            <MenuRoundedIcon />\r\n                         </IconButton>\r\n                     )}\r\n \r\n                     {/* เมนูรายการ */}\r\n@@ -112,9 +105,8 @@\n \r\n export default Sidebar;\r\n \r\n \r\n-\r\n {/* \r\n   <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n             <div className='sidebar-header'>\r\n                 <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n"
                },
                {
                    "date": 1740210731322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n-                            <MenuRoundedIcon />\r\n+                            {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n                         </IconButton>\r\n                     )}\r\n \r\n                     {/* เมนูรายการ */}\r\n"
                },
                {
                    "date": 1740210822213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     ];\r\n \r\n     return (\r\n         <>\r\n-            {/* กรณีที่ใช้งานในมือถือ */}\r\n+            {/* In case: mobile user | ถ้าเป็นผู้ใช้ที่ใช้งานผ่านอุปกรณ์โทรศัพท์มือถือแถบ Sidebar จะเป็นปุ่มเล็ก ๆ ให้กดเพื่อ expanded */}\r\n             {isSmallScreen && (\r\n                 <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n"
                },
                {
                    "date": 1740210845252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n             )}\r\n \r\n-            {/* Sidebar สำหรับหน้าจอใหญ่ */}\r\n+            {/* In case: desktop/tablet/iPad user */}\r\n             <Drawer\r\n                 variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n"
                },
                {
                    "date": 1740210940331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,11 +49,10 @@\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n             )}\r\n \r\n-            {/* In case: desktop/tablet/iPad user */}\r\n             <Drawer\r\n-                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n"
                },
                {
                    "date": 1740210964454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,16 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{\r\n-                    width: isCollapsed ? 80 : 250,\r\n-                    flexShrink: 0,\r\n-                    '& .MuiDrawer-paper': {\r\n-                        width: isCollapsed ? 80 : 250,\r\n-                        transition: 'width 0.3s',\r\n-                        overflowX: 'hidden',\r\n-                    }\r\n+                sx={{width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',overflowX: 'hidden',}\r\n                 }}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n"
                },
                {
                    "date": 1740210999253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,10 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',overflowX: 'hidden',}\r\n-                }}\r\n+                sx={{width: isCollapsed ? 60 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211018766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{width: isCollapsed ? 60 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211032701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{width: isCollapsed ? 120 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211054067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{width: isCollapsed ? 120 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211064945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211073171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211086302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211094233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0,}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211102187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0,}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, \r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211112618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, \r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 300, flexShrink: 0,}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211185036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,15 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 300, flexShrink: 0,}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, PaperProps={{\r\n+                    sx: {\r\n+                      width: {\r\n+                        xs: 300,\r\n+                        sm: 500\r\n+                      }\r\n+                    }}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211190747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                       width: {\r\n                         xs: 300,\r\n                         sm: 500\r\n                       }\r\n-                    }}\r\n+                    }}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211200764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,19 +50,14 @@\n                 </IconButton>\r\n             )}\r\n \r\n             <Drawer\r\n+                \r\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, PaperProps={{\r\n-                    sx: {\r\n-                      width: {\r\n-                        xs: 300,\r\n-                        sm: 500\r\n-                      }\r\n-                    }}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211206443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,16 @@\n                 </IconButton>\r\n             )}\r\n \r\n             <Drawer\r\n-                \r\n+                PaperProps={{\r\n+                    sx: {\r\n+                      width: {\r\n+                        xs: 300,\r\n+                        sm: 500\r\n+                      }\r\n+                    }\r\n+                  }}\r\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n"
                },
                {
                    "date": 1740211219773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,16 +50,8 @@\n                 </IconButton>\r\n             )}\r\n \r\n             <Drawer\r\n-                PaperProps={{\r\n-                    sx: {\r\n-                      width: {\r\n-                        xs: 300,\r\n-                        sm: 500\r\n-                      }\r\n-                    }\r\n-                  }}\r\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n"
                },
                {
                    "date": 1740211226099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211232440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211243539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 3000, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 300, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211448831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,48 +49,65 @@\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n             )}\r\n \r\n-            <Drawer\r\n-                variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n-                anchor='left'\r\n-                open={isDrawerOpen}\r\n-                onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 300, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n-            >\r\n-                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n-                    {/* Sidebar: Collapse button*/}\r\n-                    {!isSmallScreen && (\r\n-                        <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n-                            {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n-                        </IconButton>\r\n-                    )}\r\n+<Drawer\r\n+    variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+    anchor='left'\r\n+    open={isDrawerOpen}\r\n+    onClose={() => setIsDrawerOpen(false)}\r\n+    sx={{\r\n+        flexShrink: 0,\r\n+        '& .MuiDrawer-paper': {\r\n+            width: 'auto', // Auto-fit width to content\r\n+            minWidth: isCollapsed ? 80 : 200, // Ensure a minimum size\r\n+            maxWidth: 300, // Prevent it from becoming too wide\r\n+            transition: 'width 0.3s',\r\n+        },\r\n+    }}\r\n+>\r\n+    <Box \r\n+        p={2} \r\n+        sx={{\r\n+            height: '100vh',\r\n+            display: 'flex',\r\n+            flexDirection: 'column',\r\n+            alignItems: isCollapsed ? 'center' : 'flex-start',\r\n+            paddingRight: !isSmallScreen ? '10px' : '0', // Add padding-right only for desktop users\r\n+        }}\r\n+    >\r\n+        {/* Sidebar: Collapse button */}\r\n+        {!isSmallScreen && (\r\n+            <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n+                {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n+            </IconButton>\r\n+        )}\r\n \r\n-                    {/* เมนูรายการ */}\r\n-                    <ul style={{ listStyle: 'none', padding: 0, marginTop: 10 }}>\r\n-                        {adminMenu.map((item) => (\r\n-                            <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n-                                <li\r\n-                                    style={{\r\n-                                        display: 'flex',\r\n-                                        alignItems: 'center',\r\n-                                        padding: '10px 20px',\r\n-                                        borderRadius: '8px',\r\n-                                        backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n-                                        cursor: 'pointer',\r\n-                                        transition: '0.3s',\r\n-                                    }}\r\n-                                    onClick={() => setActiveMenu(item.label)}\r\n-                                >\r\n-                                    {item.icon}\r\n-                                    {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n-                                    {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                                </li>\r\n-                            </Link>\r\n-                        ))}\r\n-                    </ul>\r\n-                </Box>\r\n-            </Drawer>\r\n+        {/* Menu List */}\r\n+        <ul style={{ listStyle: 'none', padding: 0, marginTop: 10 }}>\r\n+            {adminMenu.map((item) => (\r\n+                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n+                    <li\r\n+                        style={{\r\n+                            display: 'flex',\r\n+                            alignItems: 'center',\r\n+                            padding: '10px 20px',\r\n+                            borderRadius: '8px',\r\n+                            backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n+                            cursor: 'pointer',\r\n+                            transition: '0.3s',\r\n+                        }}\r\n+                        onClick={() => setActiveMenu(item.label)}\r\n+                    >\r\n+                        {item.icon}\r\n+                        {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n+                        {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                    </li>\r\n+                </Link>\r\n+            ))}\r\n+        </ul>\r\n+    </Box>\r\n+</Drawer>\r\n         </>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740211496820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n             )}\r\n \r\n-<Drawer\r\n+            <Drawer\r\n     variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n     anchor='left'\r\n     open={isDrawerOpen}\r\n     onClose={() => setIsDrawerOpen(false)}\r\n"
                },
                {
                    "date": 1740211503407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,136 @@\n+import { useState, useEffect } from 'react';\r\n+import { Link, useLocation } from 'react-router-dom';\r\n+import { Box, Drawer, IconButton, useMediaQuery } from '@mui/material';\r\n+import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n+import MenuOpenRoundedIcon from '@mui/icons-material/MenuOpenRounded';\r\n+import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n+import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n+import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n+import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n+import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n+import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n+import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n+\r\n+const Sidebar = ({ unreadNotifications }) => {\r\n+    const location = useLocation();\r\n+    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // For mobile user\r\n+    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // For computer & tablet user\r\n+    const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n+    const [activeMenu, setActiveMenu] = useState('');\r\n+\r\n+    useEffect(() => {\r\n+        if (isSmallScreen) {\r\n+            setIsDrawerOpen(false);\r\n+        } else {\r\n+            setIsDrawerOpen(true);\r\n+        }\r\n+    }, [isSmallScreen]);\r\n+\r\n+    const adminMenu = [\r\n+        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n+        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n+        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n+        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n+        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n+        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n+        {\r\n+            to: '/Noti',\r\n+            label: 'การแจ้งเตือน',\r\n+            icon: <NotificationsActiveRoundedIcon />,\r\n+            badge: unreadNotifications > 0,\r\n+        }\r\n+    ];\r\n+\r\n+    return (\r\n+        <>\r\n+            {/* In case: mobile user | ถ้าเป็นผู้ใช้ที่ใช้งานผ่านอุปกรณ์โทรศัพท์มือถือแถบ Sidebar จะเป็นปุ่มเล็ก ๆ ให้กดเพื่อ expanded */}\r\n+            {isSmallScreen && (\r\n+                <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n+                    <MenuRoundedIcon />\r\n+                </IconButton>\r\n+            )}\r\n+\r\n+            <Drawer\r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n+                anchor='left'\r\n+                open={isDrawerOpen}\r\n+                onClose={() => setIsDrawerOpen(false)}\r\n+                sx={{\r\n+                    flexShrink: 0,\r\n+                    '& .MuiDrawer-paper': {\r\n+                        width: 'auto', // Auto-fit width to content\r\n+                        minWidth: isCollapsed ? 80 : 200, // Ensure a minimum size\r\n+                        maxWidth: 300, // Prevent it from becoming too wide\r\n+                        transition: 'width 0.3s',\r\n+                    },\r\n+                }}\r\n+            >\r\n+                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n+                    {/* Sidebar: Collapse button*/}\r\n+                    {!isSmallScreen && (\r\n+                        <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n+                            {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n+                        </IconButton>\r\n+                    )}\r\n+\r\n+                    {/* เมนูรายการ */}\r\n+                    <ul style={{ listStyle: 'none', padding: 0, marginTop: 10 }}>\r\n+                        {adminMenu.map((item) => (\r\n+                            <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n+                                <li\r\n+                                    style={{\r\n+                                        display: 'flex',\r\n+                                        alignItems: 'center',\r\n+                                        padding: '10px 20px',\r\n+                                        borderRadius: '8px',\r\n+                                        backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n+                                        cursor: 'pointer',\r\n+                                        transition: '0.3s',\r\n+                                    }}\r\n+                                    onClick={() => setActiveMenu(item.label)}\r\n+                                >\r\n+                                    {item.icon}\r\n+                                    {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n+                                    {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                                </li>\r\n+                            </Link>\r\n+                        ))}\r\n+                    </ul>\r\n+                </Box>\r\n+            </Drawer>\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n+export default Sidebar;\r\n+\r\n+\r\n+{/* \r\n+  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n+            <div className='sidebar-header'>\r\n+                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n+                    {isExpanded && \"FoodMood.\"}\r\n+                </div>\r\n+                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n+                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n+                </button>\r\n+            </div>\r\n+            <ul>\r\n+                {adminMenu.map((item) => (\r\n+                    <Link to={item.to} key={item.label}>\r\n+                        <li \r\n+                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n+                            onClick={() => handleMenuClick(item.label)}\r\n+                        >\r\n+                            {item.icon} \r\n+                            {isExpanded && item.label}\r\n+                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n+                        </li>\r\n+                    </Link>\r\n+                ))}\r\n+            </ul>\r\n+            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n+                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n+            </button>\r\n+        </div>  \r\n+*/}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740211510606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n-                    flexShrink: 0,\r\n+                \r\n                     '& .MuiDrawer-paper': {\r\n                         width: 'auto', // Auto-fit width to content\r\n                         minWidth: isCollapsed ? 80 : 200, // Ensure a minimum size\r\n                         maxWidth: 300, // Prevent it from becoming too wide\r\n@@ -132,150 +132,5 @@\n             <button className=\"sidebar-logout-button fs-16 text-white\">\r\n                 <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n             </button>\r\n         </div>  \r\n-*/}\n-import { useState, useEffect } from 'react';\r\n-import { Link, useLocation } from 'react-router-dom';\r\n-import { Box, Drawer, IconButton, useMediaQuery } from '@mui/material';\r\n-import MenuRoundedIcon from '@mui/icons-material/MenuRounded';\r\n-import MenuOpenRoundedIcon from '@mui/icons-material/MenuOpenRounded';\r\n-import NoteAddRoundedIcon from '@mui/icons-material/NoteAddRounded';\r\n-import FileCopyRoundedIcon from '@mui/icons-material/FileCopyRounded';\r\n-import FindInPageRoundedIcon from '@mui/icons-material/FindInPageRounded';\r\n-import InboxRoundedIcon from '@mui/icons-material/InboxRounded';\r\n-import FastfoodRoundedIcon from '@mui/icons-material/FastfoodRounded';\r\n-import PeopleAltRoundedIcon from '@mui/icons-material/PeopleAltRounded';\r\n-import NotificationsActiveRoundedIcon from '@mui/icons-material/NotificationsActiveRounded';\r\n-\r\n-const Sidebar = ({ unreadNotifications }) => {\r\n-    const location = useLocation();\r\n-    const isSmallScreen = useMediaQuery('(max-width: 768px)'); // For mobile user\r\n-    const [isDrawerOpen, setIsDrawerOpen] = useState(!isSmallScreen); // For computer & tablet user\r\n-    const [isCollapsed, setIsCollapsed] = useState(false); // ควบคุมการย่อ/ขยายของ sidebar\r\n-    const [activeMenu, setActiveMenu] = useState('');\r\n-\r\n-    useEffect(() => {\r\n-        if (isSmallScreen) {\r\n-            setIsDrawerOpen(false);\r\n-        } else {\r\n-            setIsDrawerOpen(true);\r\n-        }\r\n-    }, [isSmallScreen]);\r\n-\r\n-    const adminMenu = [\r\n-        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <NoteAddRoundedIcon /> },\r\n-        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <FileCopyRoundedIcon /> },\r\n-        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <FindInPageRoundedIcon /> },\r\n-        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <InboxRoundedIcon /> },\r\n-        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <FastfoodRoundedIcon /> },\r\n-        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <PeopleAltRoundedIcon /> },\r\n-        {\r\n-            to: '/Noti',\r\n-            label: 'การแจ้งเตือน',\r\n-            icon: <NotificationsActiveRoundedIcon />,\r\n-            badge: unreadNotifications > 0,\r\n-        }\r\n-    ];\r\n-\r\n-    return (\r\n-        <>\r\n-            {/* In case: mobile user | ถ้าเป็นผู้ใช้ที่ใช้งานผ่านอุปกรณ์โทรศัพท์มือถือแถบ Sidebar จะเป็นปุ่มเล็ก ๆ ให้กดเพื่อ expanded */}\r\n-            {isSmallScreen && (\r\n-                <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n-                    <MenuRoundedIcon />\r\n-                </IconButton>\r\n-            )}\r\n-\r\n-            <Drawer\r\n-    variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n-    anchor='left'\r\n-    open={isDrawerOpen}\r\n-    onClose={() => setIsDrawerOpen(false)}\r\n-    sx={{\r\n-        flexShrink: 0,\r\n-        '& .MuiDrawer-paper': {\r\n-            width: 'auto', // Auto-fit width to content\r\n-            minWidth: isCollapsed ? 80 : 200, // Ensure a minimum size\r\n-            maxWidth: 300, // Prevent it from becoming too wide\r\n-            transition: 'width 0.3s',\r\n-        },\r\n-    }}\r\n->\r\n-    <Box \r\n-        p={2} \r\n-        sx={{\r\n-            height: '100vh',\r\n-            display: 'flex',\r\n-            flexDirection: 'column',\r\n-            alignItems: isCollapsed ? 'center' : 'flex-start',\r\n-            paddingRight: !isSmallScreen ? '10px' : '0', // Add padding-right only for desktop users\r\n-        }}\r\n-    >\r\n-        {/* Sidebar: Collapse button */}\r\n-        {!isSmallScreen && (\r\n-            <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n-                {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n-            </IconButton>\r\n-        )}\r\n-\r\n-        {/* Menu List */}\r\n-        <ul style={{ listStyle: 'none', padding: 0, marginTop: 10 }}>\r\n-            {adminMenu.map((item) => (\r\n-                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n-                    <li\r\n-                        style={{\r\n-                            display: 'flex',\r\n-                            alignItems: 'center',\r\n-                            padding: '10px 20px',\r\n-                            borderRadius: '8px',\r\n-                            backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n-                            cursor: 'pointer',\r\n-                            transition: '0.3s',\r\n-                        }}\r\n-                        onClick={() => setActiveMenu(item.label)}\r\n-                    >\r\n-                        {item.icon}\r\n-                        {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n-                        {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                    </li>\r\n-                </Link>\r\n-            ))}\r\n-        </ul>\r\n-    </Box>\r\n-</Drawer>\r\n-        </>\r\n-    );\r\n-};\r\n-\r\n-export default Sidebar;\r\n-\r\n-\r\n-{/* \r\n-  <div className={`sidebar ${isExpanded ? 'expanded' : 'collapsed'}`} id='sidebar'>\r\n-            <div className='sidebar-header'>\r\n-                <div className='fw-5 fs-20 text-blue' style={{ margin: '20px 0px 20px 0px' }}>\r\n-                    {isExpanded && \"FoodMood.\"}\r\n-                </div>\r\n-                <button className=\"toggle-button\" onClick={toggleSidebar}>\r\n-                    {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n-                </button>\r\n-            </div>\r\n-            <ul>\r\n-                {adminMenu.map((item) => (\r\n-                    <Link to={item.to} key={item.label}>\r\n-                        <li \r\n-                            className={`${activeMenu === item.label ? 'active' : ''} ${item.badge ? 'has-badge' : ''}`} \r\n-                            onClick={() => handleMenuClick(item.label)}\r\n-                        >\r\n-                            {item.icon} \r\n-                            {isExpanded && item.label}\r\n-                            {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n-                        </li>\r\n-                    </Link>\r\n-                ))}\r\n-            </ul>\r\n-            <button className=\"sidebar-logout-button fs-16 text-white\">\r\n-                <LogoutRoundedIcon className='icon' /> {isExpanded && 'ออกจากระบบ'}\r\n-            </button>\r\n-        </div>  \r\n */}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740211547116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,17 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{\r\n-                \r\n-                    '& .MuiDrawer-paper': {\r\n-                        width: 'auto', // Auto-fit width to content\r\n-                        minWidth: isCollapsed ? 80 : 200, // Ensure a minimum size\r\n-                        maxWidth: 300, // Prevent it from becoming too wide\r\n-                        transition: 'width 0.3s',\r\n-                    },\r\n-                }}\r\n+                sx={{paddingRight: '10px', width: auto, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211553279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: auto, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: 'auto', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211565353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: 'auto', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 300, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211575151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 90 : 300, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: 'auto', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211619678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: 'auto', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed? '8vh' : '23vh', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211630986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed? '8vh' : '23vh', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed? '8vh' : '23vh', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? '8vh' : '23vh',transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211672164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed? '8vh' : '23vh', flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? '8vh' : '23vh',transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211689751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? '8vh' : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211695414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? '8vh' : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? '80' : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211770306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                 variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n                 anchor='left'\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? '80' : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n+                sx={{paddingRight: '10px', width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n             >\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n"
                },
                {
                    "date": 1740211888024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,15 +49,23 @@\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n             )}\r\n \r\n-            <Drawer\r\n-                variant={isSmallScreen ? 'temporary' : 'permanent'} //ถ้าเป็นโทรศัพท์ จะใช้ temporary คือน้องจะโผล่ออกมาให้กด / ถ้าเป็นคอมน้องจะปรากฎตลอดเวลา (สามารถกดปุ่มเพื่อย่อลงได้)\r\n-                anchor='left'\r\n-                open={isDrawerOpen}\r\n-                onClose={() => setIsDrawerOpen(false)}\r\n-                sx={{paddingRight: '10px', width: isCollapsed ? 80 : 250, flexShrink: 0, '& .MuiDrawer-paper': {width: isCollapsed ? 80 : 250,transition: 'width 0.3s',}}}\r\n-            >\r\n+<Drawer\r\n+    variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+    anchor=\"left\"\r\n+    open={isDrawerOpen}\r\n+    onClose={() => setIsDrawerOpen(false)}\r\n+    sx={{\r\n+        width: isCollapsed ? 80 : 250,\r\n+        flexShrink: 0,\r\n+        paddingRight: !isSmallScreen ? '10px' : 0,  // ✅ ใส่ paddingRight เมื่อไม่ใช่มือถือ\r\n+        '& .MuiDrawer-paper': {\r\n+            width: isCollapsed ? 80 : 250,\r\n+            transition: 'width 0.3s',\r\n+            paddingRight: !isSmallScreen ? '10px' : 0, // ✅ ใส่ paddingRight ให้ Drawer จริง ๆ\r\n+        }\r\n+    }}\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n"
                },
                {
                    "date": 1740211896539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,9 @@\n             transition: 'width 0.3s',\r\n             paddingRight: !isSmallScreen ? '10px' : 0, // ✅ ใส่ paddingRight ให้ Drawer จริง ๆ\r\n         }\r\n     }}\r\n+>\r\n                 <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n"
                },
                {
                    "date": 1740211924789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,25 +49,25 @@\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n             )}\r\n \r\n-<Drawer\r\n-    variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n-    anchor=\"left\"\r\n-    open={isDrawerOpen}\r\n-    onClose={() => setIsDrawerOpen(false)}\r\n-    sx={{\r\n-        width: isCollapsed ? 80 : 250,\r\n-        flexShrink: 0,\r\n-        paddingRight: !isSmallScreen ? '10px' : 0,  // ✅ ใส่ paddingRight เมื่อไม่ใช่มือถือ\r\n-        '& .MuiDrawer-paper': {\r\n-            width: isCollapsed ? 80 : 250,\r\n-            transition: 'width 0.3s',\r\n-            paddingRight: !isSmallScreen ? '10px' : 0, // ✅ ใส่ paddingRight ให้ Drawer จริง ๆ\r\n-        }\r\n-    }}\r\n->\r\n-                <Box p={2} sx={{height: '100vh',display: 'flex',flexDirection: 'column',alignItems: isCollapsed ? 'center' : 'flex-start',}}>\r\n+            <Drawer\r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+                anchor=\"left\"\r\n+                open={isDrawerOpen}\r\n+                onClose={() => setIsDrawerOpen(false)}\r\n+                sx={{\r\n+                    width: isCollapsed ? 80 : 250,\r\n+                    flexShrink: 0,\r\n+                    marginRight: !isSmallScreen ? '10px' : 0,  // ✅ ใส่ paddingRight เมื่อไม่ใช่มือถือ\r\n+                    '& .MuiDrawer-paper': {\r\n+                        width: isCollapsed ? 80 : 250,\r\n+                        transition: 'width 0.3s',\r\n+                        paddingRight: !isSmallScreen ? '10px' : 0, // ✅ ใส่ paddingRight ให้ Drawer จริง ๆ\r\n+                    }\r\n+                }}\r\n+            >\r\n+                <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                             {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n"
                },
                {
                    "date": 1740211961688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,14 +56,14 @@\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n                     width: isCollapsed ? 80 : 250,\r\n+                    marginRight: !isSmallScreen ? '10px' : 0,  //  \r\n                     flexShrink: 0,\r\n-                    marginRight: !isSmallScreen ? '10px' : 0,  // ✅ ใส่ paddingRight เมื่อไม่ใช่มือถือ\r\n                     '& .MuiDrawer-paper': {\r\n                         width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n-                        paddingRight: !isSmallScreen ? '10px' : 0, // ✅ ใส่ paddingRight ให้ Drawer จริง ๆ\r\n+                        marginRight: !isSmallScreen ? '10px' : 0, // ✅ ใส่ paddingRight ให้ Drawer จริง ๆ\r\n                     }\r\n                 }}\r\n             >\r\n                 <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n"
                },
                {
                    "date": 1740211992749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,8 @@\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n                     width: isCollapsed ? 80 : 250,\r\n-                    marginRight: !isSmallScreen ? '10px' : 0,  //  \r\n                     flexShrink: 0,\r\n                     '& .MuiDrawer-paper': {\r\n                         width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n"
                },
                {
                    "date": 1740212097232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,10 +49,10 @@\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n             )}\r\n \r\n-            <Drawer\r\n-                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+            <Drawer \r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'}     // 📱ใช้ temporary, 🖥️ใช้ permanent\r\n                 anchor=\"left\"\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n"
                },
                {
                    "date": 1740212125095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n                     flexShrink: 0,\r\n                     '& .MuiDrawer-paper': {\r\n                         width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n-                        marginRight: !isSmallScreen ? '10px' : 0, // ✅ ใส่ paddingRight ให้ Drawer จริง ๆ\r\n+                        marginRight: !isSmallScreen ? '10px' : 0,\r\n                     }\r\n                 }}\r\n             >\r\n                 <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n"
                },
                {
                    "date": 1740212168632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n                     width: isCollapsed ? 80 : 250,\r\n                     flexShrink: 0,\r\n+                    marginRight: !isSmallScreen ? '10px' : 0,\r\n                     '& .MuiDrawer-paper': {\r\n                         width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n                         marginRight: !isSmallScreen ? '10px' : 0,\r\n"
                },
                {
                    "date": 1740212192332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n                     width: isCollapsed ? 80 : 250,\r\n                     flexShrink: 0,\r\n-                    marginRight: !isSmallScreen ? '10px' : 0,\r\n+                    marginRight: !isSmallScreen ? '10px' : 0,           // 🖥️ เพิ่ม marginRight เพื่อให้ content ด้านขวามือติดขอบ\r\n                     '& .MuiDrawer-paper': {\r\n                         width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n                         marginRight: !isSmallScreen ? '10px' : 0,\r\n"
                },
                {
                    "date": 1740212230419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n                     marginRight: !isSmallScreen ? '10px' : 0,           // 🖥️ เพิ่ม marginRight เพื่อให้ content ด้านขวามือติดขอบ\r\n                     '& .MuiDrawer-paper': {\r\n                         width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n-                        marginRight: !isSmallScreen ? '10px' : 0,\r\n+                        marginRight: !isSmallScreen ? '10px' : 0,       // ทำเหมือนด้านบน ซึ่งจะต้องกำหนดเหมือนกัน (เป็น default การเขียนของ MUI)\r\n                     }\r\n                 }}\r\n             >\r\n                 <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n"
                },
                {
                    "date": 1740212237057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n                     marginRight: !isSmallScreen ? '10px' : 0,           // 🖥️ เพิ่ม marginRight เพื่อให้ content ด้านขวามือติดขอบ\r\n                     '& .MuiDrawer-paper': {\r\n                         width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n-                        marginRight: !isSmallScreen ? '10px' : 0,       // ทำเหมือนด้านบน ซึ่งจะต้องกำหนดเหมือนกัน (เป็น default การเขียนของ MUI)\r\n+                        marginRight: !isSmallScreen ? '10px' : 0,       // ทำเหมือนด้านบน ซึ่งจะต้องกำหนดเหมือนกัน (เป็น default การเขียน Drawer ของ MUI)\r\n                     }\r\n                 }}\r\n             >\r\n                 <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n"
                },
                {
                    "date": 1740212285265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                 </IconButton>\r\n             )}\r\n \r\n             <Drawer \r\n-                variant={isSmallScreen ? 'temporary' : 'permanent'}     // 📱ใช้ temporary, 🖥️ใช้ permanent\r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n                 anchor=\"left\"\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n@@ -89,9 +89,9 @@\n                                         transition: '0.3s',\r\n                                     }}\r\n                                     onClick={() => setActiveMenu(item.label)}\r\n                                 >\r\n-                                    {item.icon}\r\n+                                     \r\n                                     {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n                                     {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n                                 </li>\r\n                             </Link>\r\n"
                },
                {
                    "date": 1740212299447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n                     width: isCollapsed ? 80 : 250,\r\n                     flexShrink: 0,\r\n                     marginRight: !isSmallScreen ? '10px' : 0,           // 🖥️ เพิ่ม marginRight เพื่อให้ content ด้านขวามือติดขอบ\r\n                     '& .MuiDrawer-paper': {\r\n-                        width: isCollapsed ? 80 : 250,\r\n+                        width: isCollapsed ? 250 : 250,\r\n                         transition: 'width 0.3s',\r\n                         marginRight: !isSmallScreen ? '10px' : 0,       // ทำเหมือนด้านบน ซึ่งจะต้องกำหนดเหมือนกัน (เป็น default การเขียน Drawer ของ MUI)\r\n                     }\r\n                 }}\r\n"
                },
                {
                    "date": 1740212310508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,15 +59,15 @@\n                     width: isCollapsed ? 80 : 250,\r\n                     flexShrink: 0,\r\n                     marginRight: !isSmallScreen ? '10px' : 0,           // 🖥️ เพิ่ม marginRight เพื่อให้ content ด้านขวามือติดขอบ\r\n                     '& .MuiDrawer-paper': {\r\n-                        width: isCollapsed ? 250 : 250,\r\n+                        width: isCollapsed ? 80 : 250,\r\n                         transition: 'width 0.3s',\r\n                         marginRight: !isSmallScreen ? '10px' : 0,       // ทำเหมือนด้านบน ซึ่งจะต้องกำหนดเหมือนกัน (เป็น default การเขียน Drawer ของ MUI)\r\n                     }\r\n                 }}\r\n             >\r\n-                <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n+                <Box sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                             {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n"
                },
                {
                    "date": 1740212315920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,9 +65,9 @@\n                         marginRight: !isSmallScreen ? '10px' : 0,       // ทำเหมือนด้านบน ซึ่งจะต้องกำหนดเหมือนกัน (เป็น default การเขียน Drawer ของ MUI)\r\n                     }\r\n                 }}\r\n             >\r\n-                <Box sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n+                <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n                     {/* Sidebar: Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                             {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n"
                },
                {
                    "date": 1740212323170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                 </IconButton>\r\n             )}\r\n \r\n             <Drawer \r\n-                variant={isSmallScreen ? 'temporary' : 'permanent'}\r\n+                variant={isSmallScreen ? 'temporary' : 'permanent'}     // 📱ใช้ temporary, 🖥️ใช้ permanent\r\n                 anchor=\"left\"\r\n                 open={isDrawerOpen}\r\n                 onClose={() => setIsDrawerOpen(false)}\r\n                 sx={{\r\n@@ -89,9 +89,9 @@\n                                         transition: '0.3s',\r\n                                     }}\r\n                                     onClick={() => setActiveMenu(item.label)}\r\n                                 >\r\n-                                     \r\n+                                    {item.icon}\r\n                                     {!isCollapsed && <span style={{ marginLeft: 10 }}>{item.label}</span>}\r\n                                     {item.badge && <span className=\"badge\">{unreadNotifications}</span>}\r\n                                 </li>\r\n                             </Link>\r\n"
                },
                {
                    "date": 1740212335004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,10 @@\n                     }\r\n                 }}\r\n             >\r\n                 <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n-                    {/* Sidebar: Collapse button*/}\r\n+\r\n+                    {/* Collapse button*/}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                             {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n                         </IconButton>\r\n"
                },
                {
                    "date": 1740212399422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n     ];\r\n \r\n     return (\r\n         <>\r\n-            {/* In case: mobile user | ถ้าเป็นผู้ใช้ที่ใช้งานผ่านอุปกรณ์โทรศัพท์มือถือแถบ Sidebar จะเป็นปุ่มเล็ก ๆ ให้กดเพื่อ expanded */}\r\n+            {/* (Mobile) Menu collapse button */}\r\n             {isSmallScreen && (\r\n                 <IconButton size='large' edge='start' aria-label='menu' onClick={() => setIsDrawerOpen(true)}>\r\n                     <MenuRoundedIcon />\r\n                 </IconButton>\r\n@@ -67,9 +67,9 @@\n                 }}\r\n             >\r\n                 <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n \r\n-                    {/* Collapse button*/}\r\n+                    {/* In case: desktop user | ปุ่มสำหรับ expand */}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                             {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n                         </IconButton>\r\n"
                },
                {
                    "date": 1740212406120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n                 }}\r\n             >\r\n                 <Box p={2} sx={{ height: '100vh', display: 'flex', flexDirection: 'column', alignItems: isCollapsed ? 'center' : 'flex-start', }}>\r\n \r\n-                    {/* In case: desktop user | ปุ่มสำหรับ expand */}\r\n+                    {/* (PC) Menu collapse button */}\r\n                     {!isSmallScreen && (\r\n                         <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                             {isCollapsed ? <MenuRoundedIcon /> : <MenuOpenRoundedIcon />}\r\n                         </IconButton>\r\n"
                },
                {
                    "date": 1740212767714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n-                                        backgroundColor: activeMenu === item.label ? '#e0e0e0' : 'transparent',\r\n+                                        backgroundColor: activeMenu === item.label ? 'var(--blue-color)' : 'transparent',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n                                     onClick={() => setActiveMenu(item.label)}\r\n"
                },
                {
                    "date": 1740212785994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n                                         backgroundColor: activeMenu === item.label ? 'var(--blue-color)' : 'transparent',\r\n+                                        color: activeMenu === item.label ? 'var(--blue-color)' : 'transparent',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n                                     onClick={() => setActiveMenu(item.label)}\r\n"
                },
                {
                    "date": 1740212802490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n                                         backgroundColor: activeMenu === item.label ? 'var(--blue-color)' : 'transparent',\r\n-                                        color: activeMenu === item.label ? 'var(--blue-color)' : 'transparent',\r\n+                                        color: activeMenu === item.label ? 'var(--white-color)' : 'transparent',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n                                     onClick={() => setActiveMenu(item.label)}\r\n"
                },
                {
                    "date": 1740212815286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n                                         backgroundColor: activeMenu === item.label ? 'var(--blue-color)' : 'transparent',\r\n-                                        color: activeMenu === item.label ? 'var(--white-color)' : 'transparent',\r\n+                                        color: activeMenu === item.label ? '#fff' : 'transparent',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n                                     onClick={() => setActiveMenu(item.label)}\r\n"
                },
                {
                    "date": 1740212822812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n-                                        backgroundColor: activeMenu === item.label ? 'var(--blue-color)' : 'transparent',\r\n+                                        backgroundColor: activeMenu === item.label ? '#007bff' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : 'transparent',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n"
                },
                {
                    "date": 1740212840025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n-                                        backgroundColor: activeMenu === item.label ? '#007bff' : 'transparent',\r\n+                                        backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : 'transparent',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n"
                },
                {
                    "date": 1740212854932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,10 @@\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n-                                        backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n-                                        color: activeMenu === item.label ? '#fff' : 'transparent',\r\n+                                        backgroundColor: activeMenu === item.label ? '#64A2FF' : '#777777',\r\n+                                        color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n                                     onClick={() => setActiveMenu(item.label)}\r\n"
                },
                {
                    "date": 1740212860349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '8px',\r\n-                                        backgroundColor: activeMenu === item.label ? '#64A2FF' : '#777777',\r\n+                                        backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n                                     }}\r\n"
                },
                {
                    "date": 1740212875332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n                                     style={{\r\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n-                                        borderRadius: '8px',\r\n+                                        borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n                                         transition: '0.3s',\r\n"
                },
                {
                    "date": 1740212916647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                                 <li\r\n                                     style={{\r\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n-                                        padding: '10px 20px',\r\n+                                        padding: '10px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n"
                },
                {
                    "date": 1740212921859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                                 <li\r\n                                     style={{\r\n                                         display: 'flex',\r\n                                         alignItems: 'center',\r\n-                                        padding: '10px',\r\n+                                        padding: '10px 20px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n"
                },
                {
                    "date": 1740212935425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,8 @@\n                         {adminMenu.map((item) => (\r\n                             <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                 <li\r\n                                     style={{\r\n-                                        display: 'flex',\r\n                                         alignItems: 'center',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n"
                },
                {
                    "date": 1740212940709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n                         {adminMenu.map((item) => (\r\n                             <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                 <li\r\n                                     style={{\r\n-                                        alignItems: 'center',\r\n+                                        display: 'flex',\r\n                                         padding: '10px 20px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n"
                },
                {
                    "date": 1740212953394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                             <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                 <li\r\n                                     style={{\r\n                                         display: 'flex',\r\n-                                        padding: '10px 20px',\r\n+                                        padding: '10px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n"
                },
                {
                    "date": 1740212966484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                             <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                 <li\r\n                                     style={{\r\n                                         display: 'flex',\r\n-                                        padding: '10px',\r\n+                                        padding: '8px 14px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n"
                },
                {
                    "date": 1740212981259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                             <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                 <li\r\n                                     style={{\r\n                                         display: 'flex',\r\n-                                        padding: '8px',\r\n+                                        padding: '8px 14px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n                                         color: activeMenu === item.label ? '#fff' : '#777777',\r\n                                         cursor: 'pointer',\r\n"
                },
                {
                    "date": 1740213220794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n                             <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                 <li\r\n                                     style={{\r\n                                         display: 'flex',\r\n-                                        fontSize: '24',\r\n+                                        fontSize: '20',\r\n                                         padding: '8px 14px',\r\n                                         marginBottom: '10px',\r\n                                         borderRadius: '26px',\r\n                                         backgroundColor: activeMenu === item.label ? '#64A2FF' : 'transparent',\r\n"
                }
            ],
            "date": 1740149951868,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Grid, IconButton, Badge } from '@mui/material';\r\nimport { MdFastfood } from \"react-icons/md\";\r\nimport { HiDocumentAdd, HiDocumentDuplicate, HiDocumentSearch, HiUserGroup, HiLogout, HiInbox, HiChevronLeft, HiChevronRight, HiBell, HiMenu } from 'react-icons/hi';\r\n\r\nconst Sidebar = () => {\r\n    const location = useLocation();\r\n    const [activeMenu, setActiveMenu] = useState('');\r\n    const [isExpanded, setIsExpanded] = useState(true);\r\n    const [mobileOpen, setMobileOpen] = useState(false);\r\n    const [unreadNotifications, setUnreadNotifications] = useState(3); // Mock data\r\n\r\n    const adminMenu = [\r\n        { to: '/OrderCreate', label: 'สร้างออเดอร์', icon: <HiDocumentAdd /> },\r\n        { to: '/OrderCheck', label: 'ออร์เดอร์ปัจจุบัน', icon: <HiDocumentDuplicate /> },\r\n        { to: '/OrderHistory', label: 'ประวัติออเดอร์', icon: <HiDocumentSearch /> },\r\n        { to: '/IngredientManagement', label: 'จัดการวัตถุดิบ', icon: <HiInbox /> },\r\n        { to: '/MenuManager', label: 'จัดการเมนูอาหาร', icon: <MdFastfood /> },\r\n        { to: '/UserManager', label: 'จัดการผู้ใช้', icon: <HiUserGroup /> },\r\n        { \r\n            to: '/Noti', \r\n            label: 'การแจ้งเตือน', \r\n            icon: (\r\n                <Badge badgeContent={unreadNotifications} color=\"error\">\r\n                    <HiBell />\r\n                </Badge>\r\n            ),\r\n        }\r\n    ];\r\n\r\n    const handleMenuClick = (menu) => {\r\n        setActiveMenu(menu);\r\n        if (menu === 'การแจ้งเตือน') {\r\n            setUnreadNotifications(0);\r\n        }\r\n    };\r\n\r\n    const toggleSidebar = () => {\r\n        setIsExpanded(!isExpanded);\r\n    };\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentPath = location.pathname;\r\n        const activeItem = adminMenu.find(item => item.to === currentPath);\r\n        if (activeItem) {\r\n            setActiveMenu(activeItem.label);\r\n        }\r\n    }, [location.pathname, adminMenu]);\r\n\r\n    const drawerContent = (\r\n        <List>\r\n            {adminMenu.map((item) => (\r\n                <Link to={item.to} key={item.label} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                    <ListItem button selected={activeMenu === item.label} onClick={() => handleMenuClick(item.label)}>\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        {isExpanded && <ListItemText primary={item.label} />}\r\n                    </ListItem>\r\n                </Link>\r\n            ))}\r\n            <ListItem button>\r\n                <ListItemIcon><HiLogout /></ListItemIcon>\r\n                {isExpanded && <ListItemText primary=\"ออกจากระบบ\" />}\r\n            </ListItem>\r\n        </List>\r\n    );\r\n\r\n    return (\r\n        <Grid container>\r\n            {/* Sidebar for large screens */}\r\n            <Grid item xs={12} md={3} lg={2} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    open={isExpanded}\r\n                    sx={{\r\n                        width: isExpanded ? 240 : 60,\r\n                        flexShrink: 0,\r\n                        '& .MuiDrawer-paper': { width: isExpanded ? 240 : 60, boxSizing: 'border-box' },\r\n                    }}\r\n                >\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', padding: '16px' }}>\r\n                        {isExpanded && <span>FoodMood.</span>}\r\n                        <IconButton onClick={toggleSidebar}>\r\n                            {isExpanded ? <HiChevronLeft /> : <HiChevronRight />}\r\n                        </IconButton>\r\n                    </div>\r\n                    {drawerContent}\r\n                </Drawer>\r\n            </Grid>\r\n\r\n            {/* Sidebar for mobile screens */}\r\n            <IconButton\r\n                sx={{ display: { xs: 'block', md: 'none' }, position: 'absolute', top: 10, left: 10 }}\r\n                onClick={handleDrawerToggle}\r\n            >\r\n                <HiMenu />\r\n            </IconButton>\r\n            <Drawer\r\n                variant=\"temporary\"\r\n                open={mobileOpen}\r\n                onClose={handleDrawerToggle}\r\n                ModalProps={{ keepMounted: true }}\r\n                sx={{\r\n                    '& .MuiDrawer-paper': { width: 240 },\r\n                }}\r\n            >\r\n                {drawerContent}\r\n            </Drawer>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n"
        }
    ]
}