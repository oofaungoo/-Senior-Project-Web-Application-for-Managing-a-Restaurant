{
    "sourceFile": "FoodMood/src/pages/Dashboard/Dashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1740829352736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1740829352736,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, LineChart, Line } from 'recharts';\r\nimport './Dashboard.css';\r\n\r\nimport Food from '../../images/food.jpg';\r\nimport Drink from '../../images/drink.jpg';\r\nimport Fruit from '../../images/fruit.jpg';\r\nimport Appetizer from '../../images/Appetizer.jpg';\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState('all');\r\n    const [timePeriod, setTimePeriod] = useState('daily'); // New state for time filter\r\n    const [selectedGraph, setSelectedGraph] = useState('sales'); // New state for selected graph\r\n\r\n    const menuData = [\r\n        { name: 'ไก่ย่าง', sales: 5000, category: 'main', image: Food },\r\n        { name: 'ชาเขียว', sales: 3000, category: 'drinks', image: Drink },\r\n        { name: 'สตอร์เบอร์รี่เค้ก', sales: 2000, category: 'desserts', image: Fruit },\r\n        { name: 'ข้าวโพดอบเนย', sales: 4000, category: 'appetizers', image: Appetizer },\r\n    ];\r\n\r\n    const ingredientData = [\r\n        { name: 'ไก่ (สะโพก)', purchased: 300, used: 250 },\r\n        { name: 'หมู (สับ)', purchased: 200, used: 240 },\r\n        { name: 'หมู (สันใน)', purchased: 150, used: 120 },\r\n        { name: 'ข้าวโพด', purchased: 100, used: 60 },\r\n    ];\r\n\r\n    const peakTimeData = [\r\n        { time: '08:00', orders: 50, income: 2500 },\r\n        { time: '09:00', orders: 80, income: 4000 },\r\n        { time: '10:00', orders: 70, income: 3500 },\r\n        { time: '11:00', orders: 90, income: 4500 },\r\n        { time: '12:00', orders: 110, income: 5500 },\r\n        { time: '13:00', orders: 130, income: 6500 },\r\n        { time: '14:00', orders: 100, income: 5000 },\r\n        { time: '15:00', orders: 60, income: 3000 },\r\n    ];\r\n\r\n    const filterOptions = [\r\n        { label: 'All', value: 'all' },\r\n        { label: 'เมนูจานหลัก', value: 'main' },\r\n        { label: 'ของหวาน', value: 'desserts' },\r\n        { label: 'Appetizers', value: 'appetizers' },\r\n        { label: 'Drinks', value: 'drinks' },\r\n    ];\r\n\r\n    const timeOptions = [\r\n        { label: 'Daily', value: 'daily' },\r\n        { label: 'Weekly', value: 'weekly' },\r\n        { label: 'Monthly', value: 'monthly' },\r\n    ];\r\n\r\n    const filteredMenuData = selectedCategory === 'all'\r\n        ? menuData\r\n        : menuData.filter(item => item.category === selectedCategory);\r\n\r\n    const totalRevenue = filteredMenuData.reduce((acc, item) => acc + item.sales, 0);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"middle-box\">\r\n                <div className=\"filters\">\r\n                    {filterOptions.map(option => (\r\n                        <button\r\n                            key={option.value}\r\n                            onClick={() => setSelectedCategory(option.value)}\r\n                            className={selectedCategory === option.value ? 'active-filter' : ''}\r\n                        >\r\n                            {option.label}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"time-filters\">\r\n                    {timeOptions.map(option => (\r\n                        <button\r\n                            key={option.value}\r\n                            onClick={() => setTimePeriod(option.value)}\r\n                            className={timePeriod === option.value ? 'active-filter' : ''}\r\n                        >\r\n                            {option.label}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Conditional rendering based on selected graph */}\r\n                <div className=\"charts\">\r\n                    {selectedGraph === 'sales' && (\r\n                        <div className=\"bar-chart\">\r\n                            <div className='fs-18 fw-5 text-center'>ยอดขายตามเมนู (บาท)</div>\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <BarChart data={filteredMenuData}>\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis />\r\n                                    <Tooltip />\r\n                                    <Legend />\r\n                                    <Bar dataKey=\"sales\" fill=\"#79adfc\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    )}\r\n\r\n                    {selectedGraph === 'peakTime' && (\r\n                        <div className=\"line-chart\">\r\n                            <div className='fs-18 fw-5 text-center'>Peak Time - Customer Orders & Income</div>\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <LineChart data={peakTimeData}>\r\n                                    <XAxis dataKey=\"time\" />\r\n                                    <YAxis yAxisId=\"left\" />\r\n                                    <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n                                    <Tooltip />\r\n                                    <Legend />\r\n                                    <Line type=\"monotone\" dataKey=\"orders\" stroke=\"#8884d8\" yAxisId=\"left\" name=\"จำนวนออเดอร์\" />\r\n                                    <Line type=\"monotone\" dataKey=\"income\" stroke=\"#82ca9d\" yAxisId=\"right\" name=\"รายได้\" />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    )}\r\n\r\n                    {selectedGraph === 'ingredient' && (\r\n                        <div className=\"ingredient-chart\">\r\n                            <div className='fs-18 fw-5 text-center'>วัตถุดิบที่ซื้อมา ต่อวัตถุดิบที่ใช้ไป</div>\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <BarChart data={ingredientData}>\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis />\r\n                                    <Tooltip />\r\n                                    <Legend />\r\n                                    <Bar dataKey=\"purchased\" fill=\"#f4b266\" name=\"ซื้อมา\" />\r\n                                    <Bar dataKey=\"used\" fill=\"#79adfc\" name=\"ใช้ไป\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    )}\r\n                    {/* Bottom Navigation for selecting graphs */}\r\n            <div className=\"graph-nav\">\r\n                <button onClick={() => setSelectedGraph('sales')} className={selectedGraph === 'sales' ? 'active' : ''}>\r\n                    ยอดขาย\r\n                </button>\r\n                <button onClick={() => setSelectedGraph('peakTime')} className={selectedGraph === 'peakTime' ? 'active' : ''}>\r\n                    Peak Time\r\n                </button>\r\n                <button onClick={() => setSelectedGraph('ingredient')} className={selectedGraph === 'ingredient' ? 'active' : ''}>\r\n                    วัตถุดิบ\r\n                </button>\r\n            </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='best-selling-right-box'>\r\n                <div className='fs-20 fw-5 text-center right-box-header' style={{marginBottom:'10px'}}>เมนูขายดี</div>\r\n                <ul className='best-selling-list'>\r\n                    {filteredMenuData\r\n                        .sort((a, b) => b.sales - a.sales)\r\n                        .map(item => (\r\n                            <li key={item.name}>\r\n                                <img src={item.image} alt={item.name} />\r\n                                <div className='fs-16 fw-5'>{item.name}</div>\r\n                                <div className=\"sales-revenue\">รายได้: {item.sales} ฿</div>\r\n                                <div className=\"sales-quantity\">ยอดขาย (จาน): {item.sales}</div>\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"
        }
    ]
}