{
    "sourceFile": "FoodMood/src/pages/IngredientManager/In2.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1740378845222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1740378845222,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { HiChevronRight, HiChevronLeft } from \"react-icons/hi2\";\r\nimport AddIngredient from './assets/AddIngredient';\r\nimport './IngredientManager.css';\r\nimport IngredientTable from './assets/IngredientTable';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst IngredientManager = () => {\r\n    const [data, setData] = useState([]);   // Collecting datas from API\r\n    const [showEditData, setShowEditData] = useState(false);    // show AddIngredient.jsx\r\n    const [dataToEdit, setDataToEdit] = useState(null); // Edit data\r\n    const [isEditing, setIsEditing] = useState(false);  // Add & Edit data (mode toggle)\r\n    const [dataToDelete, setDataToDelete] = useState(null);     // Delete data\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [category, setCategory] = useState([]);\r\n    const [categoryFilter, setCategoryFilter] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const itemsPerPage = 8;\r\n\r\n    // API: Fetch data from database\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/ingredients')\r\n            .then(res => setData(res.data))\r\n            .catch(err => console.error('Error fetching ingredients:', err));\r\n\r\n        axios.get('http://localhost:5000/api/add_menus/category')\r\n            .then(res => { setCategory(res.data); })\r\n            .catch(err => console.error('Error fetching categories:', err));\r\n    }, []);\r\n\r\n    // API: 1.Edit 2.Add\r\n    const handleSaveData = (updatedData) => {\r\n        if (isEditing) {\r\n            //console.log('วัตถุดิบ  :', dataToEdit._id);\r\n            axios.put(`http://localhost:5000/api/ingredients/${dataToEdit._id}`, updatedData)\r\n                .then(res => {\r\n                    //console.log('แก้ไขวัตถุดิบเป็น: ', res.data);\r\n                    setData(data.map(user => (user._id === res.data._id ? res.data : user)));\r\n                })\r\n                .catch(err => console.error('Failed to update user:', err));\r\n        } else {\r\n            //console.log('วัตถุดิบ:', updatedData);\r\n            axios.post('http://localhost:5000/api/ingredients', updatedData)\r\n                .then(res => {\r\n                    //console.log('เพิ่มวัตถุดิบเข้าสู่ database สำเร็จ');\r\n                    setData(prev => [...prev, res.data]);\r\n                })\r\n                .catch(err => console.error('เพิ่มวัตถุดิบเข้าสู่ database ไม่สำเร็จ:', err));\r\n        }\r\n        setShowEditData(false); // ปิดหน้าต่าง AddIngredient.jsx\r\n    };\r\n\r\n    // API: 3.Delete\r\n    const handleDeleteIngredient = (data) => {\r\n        //console.log(data._id);\r\n        axios.delete(`http://localhost:5000/api/ingredients/${data._id}`)\r\n            .then((res) => {\r\n                //console.log('วัตถุดิบที่ต้องการลบ:', res.data);\r\n                Swal.fire({\r\n                    title: 'วัตถุดิบถูกลบแล้ว!',\r\n                    confirmButtonColor: '#64A2FF',\r\n                    icon: 'success',\r\n                });\r\n                setData((prevData) => prevData.filter((item) => item._id !== data._id));\r\n            })\r\n            .catch((err) => {\r\n                //console.error('เกิดข้อผิดพลาดในการลบวัตถุดิบ:', err);\r\n                Swal.fire({\r\n                    title: 'เกิดข้อผิดพลาดในการลบวัตถุดิบ',\r\n                    text: 'กรุณาลองใหม่อีกครั้ง',\r\n                    icon: 'error',\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    // Edit function\r\n    const handleEditData = (data) => {\r\n        setDataToEdit(data);\r\n        setIsEditing(true); // เปลี่ยนโหมดเป็น Edit\r\n        setShowEditData(true);\r\n    };\r\n\r\n    // Add function\r\n    const handleAddNewData = () => {\r\n        setDataToEdit({ name: '', group: '', unit: '', remain: null, min: null });\r\n        setIsEditing(false); // เปลี่ยนโหมดเป็น Add\r\n        setShowEditData(true);\r\n    };\r\n\r\n    // Confirm delete function\r\n    const handleClickConfirm = (e) => {\r\n        setDataToDelete(e);\r\n        Swal.fire({\r\n            title: \"แน่ใจใช่ไหม?\",\r\n            text: \"คุณกำลังจะลบ\" + \"\\nชื่อวัตถุดิบ: \" + e.name + \"\\nหมวดหมู่: \" + e.group,\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#ff4b4b\",\r\n            cancelButtonColor: \"#B2B2B2\",\r\n            confirmButtonText: 'ยืนยันการลบ',\r\n            cancelButtonText: 'ยกเลิก',\r\n            dangerMode: true,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                handleDeleteIngredient(e);\r\n            } else {\r\n                Swal.fire({\r\n                    title: 'ยกเลิกการลบ',\r\n                    confirmButtonColor: '#64A2FF',\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleSearch = (e) => setSearch(e.target.value.toLowerCase());\r\n    const handleCategoryFilter = (e) => setCategoryFilter(e.target.value);\r\n\r\n    // Filter function\r\n    const filteredIngredients = data.filter(ingredient =>\r\n        ingredient.name.toLowerCase().includes(search) &&\r\n        (categoryFilter ? ingredient.category === categoryFilter : true)\r\n    );\r\n\r\n    const totalPages = Math.ceil(filteredIngredients.length / itemsPerPage);\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const paginatedIngredients = filteredIngredients.slice(startIndex, startIndex + itemsPerPage);\r\n\r\n    const handleNextPage = () => currentPage < totalPages && setCurrentPage(currentPage + 1);\r\n    const handleBeforePage = () => currentPage > 1 && setCurrentPage(currentPage - 1);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"middle-box\">\r\n                <div class='inline-elements'>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"ค้นหาวัตถุดิบ\"\r\n                        className=\"search-bar\"\r\n                        onChange={handleSearch}\r\n                        value={search}\r\n                    />\r\n                    <select className=\"category-filter\" onChange={handleCategoryFilter} value={categoryFilter} style={{ marginTop: \"10px\" }}>\r\n                        <option value=\"\">หมวดหมู่</option>\r\n                        <option value=\"เนื้อสัตว์\">เนื้อสัตว์</option>\r\n                        <option value=\"ผัก\">ผัก</option>\r\n                        <option value=\"ทะเล\">ทะเล</option>\r\n                        <option value=\"เครื่องดื่ม\">เครื่องดื่ม</option>\r\n                        <option value=\"ของหวาน\">ของหวาน</option>\r\n                    </select>\r\n                    <button className=\"blue-button\" onClick={handleAddNewData}>\r\n                        เพิ่มวัตถุดิบใหม่\r\n                    </button>\r\n                </div>\r\n\r\n                <IngredientTable data={paginatedIngredients} onEdit={handleEditData} handleClickConfirm={handleClickConfirm} />\r\n\r\n                {/* <div className=\"pagination text-black\">\r\n                    {currentPage > 1 && <button onClick={handleBeforePage} className='text-black'><HiChevronLeft /></button>}\r\n                    <span>หน้าที่ {currentPage} จาก {totalPages}</span>\r\n                    {currentPage < totalPages && <button onClick={handleNextPage} className='text-black'><HiChevronRight /></button>}\r\n                </div> */}\r\n            </div>\r\n\r\n            {showEditData &&\r\n                <AddIngredient\r\n                    data={dataToEdit}\r\n                    isEditing={isEditing}\r\n                    onSave={handleSaveData}\r\n                    onClose={() => setShowEditData(false)}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IngredientManager;\r\n"
        }
    ]
}