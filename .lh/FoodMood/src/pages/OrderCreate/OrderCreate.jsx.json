{
    "sourceFile": "FoodMood/src/pages/OrderCreate/OrderCreate.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1739608563877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739615477830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,8 +140,9 @@\n                         handleQuantityIncrease={handleQuantityIncrease}\r\n                         handleQuantityDecrease={handleQuantityDecrease}\r\n                         handleConfirmAdd={handleConfirmAdd}\r\n                         setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n                     />\r\n                 ) : (\r\n                     <CartSummary\r\n                         cartItems={cartItems}\r\n"
                },
                {
                    "date": 1739620344677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,18 @@\n     // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+        setIngredientRemain(ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        ))\r\n+        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739620694239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,9 @@\n             return acc\r\n         }\r\n         ))\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n+        \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739620746211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,10 @@\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            console.log('Order saved:', response.data);\r\n+            \r\n+            //console.log('Order saved:', response.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n@@ -75,9 +76,9 @@\n             return acc\r\n         }\r\n         ))\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n-        \r\n+\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739620752314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,12 +39,12 @@\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n             \r\n             //console.log('Order saved:', response.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+            //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1739620929692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,8 @@\n         setNote('');\r\n         \r\n     };\r\n \r\n-\r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n     // Function: Edit Item (in cart)\r\n"
                },
                {
                    "date": 1739620949477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", s)\r\n             //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n             \r\n             //console.log('Order saved:', response.data);\r\n             //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739620954842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", s)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n             \r\n             //console.log('Order saved:', response.data);\r\n             //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739621027616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,12 +40,14 @@\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response2 = await axios.put('http://localhost:5000/api/ingredients', ingredientRemain);\r\n             \r\n-            //console.log('Order saved:', response.data);\r\n-            //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+            console.log('Order saved:', response.data);\r\n+            console.log('Ingredient Remain saved:', response2.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1739621221311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.put('http://localhost:5000/api/ingredients', ingredientRemain);\r\n+            const response2 = await axios.put('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n             \r\n             console.log('Order saved:', response.data);\r\n             console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739621473768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     const [selectedOptions, setSelectedOptions] = useState({});\r\n     const [note, setNote] = useState('');\r\n \r\n     const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n \r\n     // API: Fetch data from database\r\n     useEffect(() => {\r\n         axios.get('http://localhost:5000/api/foods')\r\n@@ -41,9 +42,9 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.put('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n             \r\n             console.log('Order saved:', response.data);\r\n             console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739621812662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n             .then(res => { setCategory(res.data) })\r\n             .catch(err => console.error('Error fetching :', err));\r\n         axios.get('http://localhost:5000/api/ingredients')\r\n             .then(res => { setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n                 console.log(\"Ingredient Remain : \", res.data)\r\n             })\r\n             .catch(err => console.error('Error fetching :', err));\r\n     }, []);\r\n@@ -71,8 +72,10 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+        const remainChange = ingredientChange.filter((acc,index) => ingredientRemain[index].remain != acc.remain)\r\n+        console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n                 acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n"
                },
                {
                    "date": 1739621934626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.filter((acc,index) => ingredientRemain[index].remain != acc.remain)\r\n+        const remainChange = ingredientChange.filter((acc, index) => ingredientRemain[index] !== acc);\r\n+\r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n"
                },
                {
                    "date": 1739622019467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.filter((acc, index) => ingredientRemain[index] !== acc);\r\n+        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index] !== acc);\r\n \r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n"
                },
                {
                    "date": 1739622051551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index] !== acc);\r\n+        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index].remain !== acc.remain);\r\n \r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n"
                },
                {
                    "date": 1739622089667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,12 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index].remain !== acc.remain);\r\n+        const remainChange = ingredientChange.filter((acc, index) => \r\n+            ingredientRemain[index]?.remain !== acc.remain\r\n+        );\r\n+        \r\n \r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n"
                },
                {
                    "date": 1739622144820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import MenuList_Order from './assets/MenuList_Order';\r\n+import MenuItemSelected from './assets/MenuItemSelected';\r\n+import CartSummary from './assets/CartSummary';\r\n+import './OrderCreate.css';\r\n+\r\n+{/* BUGS\r\n+    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n+*/}\r\n+\r\n+const OrderCreate = () => {\r\n+    const [data, setData] = useState([]);\r\n+    const [category, setCategory] = useState([]);\r\n+    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n+    const [selectedItem, setSelectedItem] = useState(null);\r\n+    const [selectedSize, setSelectedSize] = useState('');\r\n+    const [quantity, setQuantity] = useState(1);\r\n+    const [selectedOptions, setSelectedOptions] = useState({});\r\n+    const [note, setNote] = useState('');\r\n+\r\n+    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n+\r\n+    // API: Fetch data from database\r\n+    useEffect(() => {\r\n+        axios.get('http://localhost:5000/api/foods')\r\n+            .then(res => { setData(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/add_menus/category')\r\n+            .then(res => { setCategory(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => { setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n+                console.log(\"Ingredient Remain : \", res.data)\r\n+            })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+    }, []);\r\n+\r\n+    //API: Add New Order\r\n+    const handleSaveData = async (orderData) => {\r\n+        try {\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            \r\n+            console.log('Order saved:', response.data);\r\n+            console.log('Ingredient Remain saved:', response2.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+        } catch (error) {\r\n+            console.error('Error saving order:', error);\r\n+        }\r\n+    };\r\n+\r\n+    // Function: Handle Menu Click & Set default for every option that exists.\r\n+    const handleMenuClick = (item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n+        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n+        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n+    };\r\n+\r\n+    // Fuction: Change size in MenuItemSelected.jsx\r\n+    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n+\r\n+    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n+    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n+    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n+\r\n+    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n+    const handleConfirmAdd = () => {\r\n+        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n+\r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        console.log(\"ingredientChange : \", ingredientChange)\r\n+        const remainChange = ingredientChange.filter((acc, index) => \r\n+            ingredientRemain[index]?.remain !== acc.remain\r\n+        );\r\n+        \r\n+\r\n+        console.log(\"Ingredient Change : \", remainChange)\r\n+        setIngredientRemain(ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        ))\r\n+        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n+\r\n+        const newItem = {\r\n+            //id: selectedItem._id,\r\n+            name: selectedItem.name,\r\n+            size: selectedSize,\r\n+            price: selectedSizeData.price,\r\n+            quantity: quantity,\r\n+            note: note,\r\n+            selectedOptions: selectedOptions,\r\n+        };\r\n+        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n+\r\n+        setCartItems([...cartItems, newItem]);\r\n+\r\n+        setSelectedItem(null);\r\n+        setQuantity(1);\r\n+        setSelectedSize('')\r\n+        setSelectedOptions({});\r\n+        setNote('');\r\n+        \r\n+    };\r\n+\r\n+    // Function: Remove Item (from cart)\r\n+    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n+\r\n+    // Function: Edit Item (in cart)\r\n+    const handleEditItem = (indexToEdit) => {\r\n+        const itemToEdit = cartItems[indexToEdit];\r\n+    \r\n+        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n+        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n+    \r\n+        setSelectedItem({\r\n+            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n+            size: itemToEdit.size,\r\n+            price: itemToEdit.price,\r\n+            quantity: itemToEdit.quantity,\r\n+            note: itemToEdit.note,\r\n+            selectedOptions: itemToEdit.selectedOptions || {},\r\n+        });\r\n+    \r\n+        setSelectedSize(itemToEdit.size);\r\n+        setQuantity(itemToEdit.quantity);\r\n+        setNote(itemToEdit.note);\r\n+        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n+    \r\n+        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n+        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n+    };\r\n+\r\n+    // Function: Calculate total price of item(s) in cart.\r\n+    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <MenuList_Order\r\n+                data={data}\r\n+                category={category}\r\n+                onMenuClick={handleMenuClick}\r\n+                selectedItem={selectedItem}\r\n+            />\r\n+            <div className='right-box fr-18'>\r\n+                {selectedItem ? (\r\n+                    <MenuItemSelected\r\n+                        selectedItem={selectedItem}\r\n+                        selectedSize={selectedSize}\r\n+                        quantity={quantity}\r\n+                        note={note}\r\n+                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                        handleSizeChange={handleSizeChange}\r\n+                        handleQuantityIncrease={handleQuantityIncrease}\r\n+                        handleQuantityDecrease={handleQuantityDecrease}\r\n+                        handleConfirmAdd={handleConfirmAdd}\r\n+                        setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n+                    />\r\n+                ) : (\r\n+                    <CartSummary\r\n+                        cartItems={cartItems}\r\n+                        totalPrice={totalPrice}\r\n+                        handleEditItem={handleEditItem}\r\n+                        handleRemoveItem={handleRemoveItem}\r\n+                        onSave={handleSaveData}\r\n+                    />\r\n+                )}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622332191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,9 @@\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n-        const remainChange = ingredientChange.filter((acc, index) => \r\n-            ingredientRemain[index]?.remain !== acc.remain\r\n-        );\r\n-        \r\n-\r\n-        console.log(\"Ingredient Change : \", remainChange)\r\n+      \r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n                 acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n@@ -181,186 +176,4 @@\n     );\r\n };\r\n \r\n export default OrderCreate;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import MenuList_Order from './assets/MenuList_Order';\r\n-import MenuItemSelected from './assets/MenuItemSelected';\r\n-import CartSummary from './assets/CartSummary';\r\n-import './OrderCreate.css';\r\n-\r\n-{/* BUGS\r\n-    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n-*/}\r\n-\r\n-const OrderCreate = () => {\r\n-    const [data, setData] = useState([]);\r\n-    const [category, setCategory] = useState([]);\r\n-    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n-    const [selectedItem, setSelectedItem] = useState(null);\r\n-    const [selectedSize, setSelectedSize] = useState('');\r\n-    const [quantity, setQuantity] = useState(1);\r\n-    const [selectedOptions, setSelectedOptions] = useState({});\r\n-    const [note, setNote] = useState('');\r\n-\r\n-    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n-    const [ingredientChange, setIngredientChange] = useState([]);\r\n-\r\n-    // API: Fetch data from database\r\n-    useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/foods')\r\n-            .then(res => { setData(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/add_menus/category')\r\n-            .then(res => { setCategory(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => { setIngredientRemain(res.data)\r\n-                setIngredientChange(res.data)\r\n-                console.log(\"Ingredient Remain : \", res.data)\r\n-            })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-    }, []);\r\n-\r\n-    //API: Add New Order\r\n-    const handleSaveData = async (orderData) => {\r\n-        try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n-            \r\n-            console.log('Order saved:', response.data);\r\n-            console.log('Ingredient Remain saved:', response2.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n-        } catch (error) {\r\n-            console.error('Error saving order:', error);\r\n-        }\r\n-    };\r\n-\r\n-    // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n-        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n-        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n-    };\r\n-\r\n-    // Fuction: Change size in MenuItemSelected.jsx\r\n-    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n-\r\n-    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n-    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n-    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n-\r\n-    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n-    const handleConfirmAdd = () => {\r\n-        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-\r\n-        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.filter((acc, index) => \r\n-            ingredientRemain[index]?.remain !== acc.remain\r\n-        );\r\n-        \r\n-\r\n-        console.log(\"Ingredient Change : \", remainChange)\r\n-        setIngredientRemain(ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        ))\r\n-        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n-\r\n-        const newItem = {\r\n-            //id: selectedItem._id,\r\n-            name: selectedItem.name,\r\n-            size: selectedSize,\r\n-            price: selectedSizeData.price,\r\n-            quantity: quantity,\r\n-            note: note,\r\n-            selectedOptions: selectedOptions,\r\n-        };\r\n-        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n-\r\n-        setCartItems([...cartItems, newItem]);\r\n-\r\n-        setSelectedItem(null);\r\n-        setQuantity(1);\r\n-        setSelectedSize('')\r\n-        setSelectedOptions({});\r\n-        setNote('');\r\n-        \r\n-    };\r\n-\r\n-    // Function: Remove Item (from cart)\r\n-    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n-\r\n-    // Function: Edit Item (in cart)\r\n-    const handleEditItem = (indexToEdit) => {\r\n-        const itemToEdit = cartItems[indexToEdit];\r\n-    \r\n-        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n-        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-    \r\n-        setSelectedItem({\r\n-            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n-            size: itemToEdit.size,\r\n-            price: itemToEdit.price,\r\n-            quantity: itemToEdit.quantity,\r\n-            note: itemToEdit.note,\r\n-            selectedOptions: itemToEdit.selectedOptions || {},\r\n-        });\r\n-    \r\n-        setSelectedSize(itemToEdit.size);\r\n-        setQuantity(itemToEdit.quantity);\r\n-        setNote(itemToEdit.note);\r\n-        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-    \r\n-        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n-        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n-    };\r\n-\r\n-    // Function: Calculate total price of item(s) in cart.\r\n-    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <MenuList_Order\r\n-                data={data}\r\n-                category={category}\r\n-                onMenuClick={handleMenuClick}\r\n-                selectedItem={selectedItem}\r\n-            />\r\n-            <div className='right-box fr-18'>\r\n-                {selectedItem ? (\r\n-                    <MenuItemSelected\r\n-                        selectedItem={selectedItem}\r\n-                        selectedSize={selectedSize}\r\n-                        quantity={quantity}\r\n-                        note={note}\r\n-                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n-                        handleSizeChange={handleSizeChange}\r\n-                        handleQuantityIncrease={handleQuantityIncrease}\r\n-                        handleQuantityDecrease={handleQuantityDecrease}\r\n-                        handleConfirmAdd={handleConfirmAdd}\r\n-                        setNote={setNote}\r\n-                        ingredientRemain={ingredientRemain}\r\n-                    />\r\n-                ) : (\r\n-                    <CartSummary\r\n-                        cartItems={cartItems}\r\n-                        totalPrice={totalPrice}\r\n-                        handleEditItem={handleEditItem}\r\n-                        handleRemoveItem={handleRemoveItem}\r\n-                        onSave={handleSaveData}\r\n-                    />\r\n-                )}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622431028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,17 +74,8 @@\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n-      \r\n-        setIngredientRemain(ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        ))\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n"
                },
                {
                    "date": 1739622523686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,10 +72,20 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+      \r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        )\r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n+\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n"
                },
                {
                    "date": 1739622538803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n             }\r\n             return acc\r\n         }\r\n         )\r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        console.log(\"ingredientRemain : \", ingredientProcess)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n \r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n \r\n"
                },
                {
                    "date": 1739622610580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,21 +73,18 @@\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n       \r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n                 acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n             }\r\n             return acc\r\n         }\r\n         )\r\n-        console.log(\"ingredientRemain : \", ingredientProcess)\r\n-        console.log(\"ingredientChange : \", ingredientChange)\r\n \r\n-        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n-\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739622620002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,178 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import MenuList_Order from './assets/MenuList_Order';\r\n+import MenuItemSelected from './assets/MenuItemSelected';\r\n+import CartSummary from './assets/CartSummary';\r\n+import './OrderCreate.css';\r\n+\r\n+{/* BUGS\r\n+    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n+*/}\r\n+\r\n+const OrderCreate = () => {\r\n+    const [data, setData] = useState([]);\r\n+    const [category, setCategory] = useState([]);\r\n+    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n+    const [selectedItem, setSelectedItem] = useState(null);\r\n+    const [selectedSize, setSelectedSize] = useState('');\r\n+    const [quantity, setQuantity] = useState(1);\r\n+    const [selectedOptions, setSelectedOptions] = useState({});\r\n+    const [note, setNote] = useState('');\r\n+\r\n+    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n+\r\n+    // API: Fetch data from database\r\n+    useEffect(() => {\r\n+        axios.get('http://localhost:5000/api/foods')\r\n+            .then(res => { setData(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/add_menus/category')\r\n+            .then(res => { setCategory(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => { setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n+                console.log(\"Ingredient Remain : \", res.data)\r\n+            })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+    }, []);\r\n+\r\n+    //API: Add New Order\r\n+    const handleSaveData = async (orderData) => {\r\n+        try {\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            \r\n+            console.log('Order saved:', response.data);\r\n+            console.log('Ingredient Remain saved:', response2.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+        } catch (error) {\r\n+            console.error('Error saving order:', error);\r\n+        }\r\n+    };\r\n+\r\n+    // Function: Handle Menu Click & Set default for every option that exists.\r\n+    const handleMenuClick = (item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n+        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n+        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n+    };\r\n+\r\n+    // Fuction: Change size in MenuItemSelected.jsx\r\n+    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n+\r\n+    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n+    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n+    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n+\r\n+    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n+    const handleConfirmAdd = () => {\r\n+        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n+\r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+      \r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        )\r\n+        console.log(\"ingredientProcess : \", ingredientProcess)\r\n+\r\n+        const newItem = {\r\n+            //id: selectedItem._id,\r\n+            name: selectedItem.name,\r\n+            size: selectedSize,\r\n+            price: selectedSizeData.price,\r\n+            quantity: quantity,\r\n+            note: note,\r\n+            selectedOptions: selectedOptions,\r\n+        };\r\n+        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n+\r\n+        setCartItems([...cartItems, newItem]);\r\n+\r\n+        setSelectedItem(null);\r\n+        setQuantity(1);\r\n+        setSelectedSize('')\r\n+        setSelectedOptions({});\r\n+        setNote('');\r\n+        \r\n+    };\r\n+\r\n+    // Function: Remove Item (from cart)\r\n+    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n+\r\n+    // Function: Edit Item (in cart)\r\n+    const handleEditItem = (indexToEdit) => {\r\n+        const itemToEdit = cartItems[indexToEdit];\r\n+    \r\n+        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n+        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n+    \r\n+        setSelectedItem({\r\n+            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n+            size: itemToEdit.size,\r\n+            price: itemToEdit.price,\r\n+            quantity: itemToEdit.quantity,\r\n+            note: itemToEdit.note,\r\n+            selectedOptions: itemToEdit.selectedOptions || {},\r\n+        });\r\n+    \r\n+        setSelectedSize(itemToEdit.size);\r\n+        setQuantity(itemToEdit.quantity);\r\n+        setNote(itemToEdit.note);\r\n+        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n+    \r\n+        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n+        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n+    };\r\n+\r\n+    // Function: Calculate total price of item(s) in cart.\r\n+    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <MenuList_Order\r\n+                data={data}\r\n+                category={category}\r\n+                onMenuClick={handleMenuClick}\r\n+                selectedItem={selectedItem}\r\n+            />\r\n+            <div className='right-box fr-18'>\r\n+                {selectedItem ? (\r\n+                    <MenuItemSelected\r\n+                        selectedItem={selectedItem}\r\n+                        selectedSize={selectedSize}\r\n+                        quantity={quantity}\r\n+                        note={note}\r\n+                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                        handleSizeChange={handleSizeChange}\r\n+                        handleQuantityIncrease={handleQuantityIncrease}\r\n+                        handleQuantityDecrease={handleQuantityDecrease}\r\n+                        handleConfirmAdd={handleConfirmAdd}\r\n+                        setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n+                    />\r\n+                ) : (\r\n+                    <CartSummary\r\n+                        cartItems={cartItems}\r\n+                        totalPrice={totalPrice}\r\n+                        handleEditItem={handleEditItem}\r\n+                        handleRemoveItem={handleRemoveItem}\r\n+                        onSave={handleSaveData}\r\n+                    />\r\n+                )}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622638461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,16 +74,8 @@\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n       \r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        const ingredientProcess = ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        )\r\n         console.log(\"ingredientProcess : \", ingredientProcess)\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n@@ -175,181 +167,4 @@\n     );\r\n };\r\n \r\n export default OrderCreate;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import MenuList_Order from './assets/MenuList_Order';\r\n-import MenuItemSelected from './assets/MenuItemSelected';\r\n-import CartSummary from './assets/CartSummary';\r\n-import './OrderCreate.css';\r\n-\r\n-{/* BUGS\r\n-    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n-*/}\r\n-\r\n-const OrderCreate = () => {\r\n-    const [data, setData] = useState([]);\r\n-    const [category, setCategory] = useState([]);\r\n-    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n-    const [selectedItem, setSelectedItem] = useState(null);\r\n-    const [selectedSize, setSelectedSize] = useState('');\r\n-    const [quantity, setQuantity] = useState(1);\r\n-    const [selectedOptions, setSelectedOptions] = useState({});\r\n-    const [note, setNote] = useState('');\r\n-\r\n-    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n-    const [ingredientChange, setIngredientChange] = useState([]);\r\n-\r\n-    // API: Fetch data from database\r\n-    useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/foods')\r\n-            .then(res => { setData(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/add_menus/category')\r\n-            .then(res => { setCategory(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => { setIngredientRemain(res.data)\r\n-                setIngredientChange(res.data)\r\n-                console.log(\"Ingredient Remain : \", res.data)\r\n-            })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-    }, []);\r\n-\r\n-    //API: Add New Order\r\n-    const handleSaveData = async (orderData) => {\r\n-        try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n-            \r\n-            console.log('Order saved:', response.data);\r\n-            console.log('Ingredient Remain saved:', response2.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n-        } catch (error) {\r\n-            console.error('Error saving order:', error);\r\n-        }\r\n-    };\r\n-\r\n-    // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n-        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n-        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n-    };\r\n-\r\n-    // Fuction: Change size in MenuItemSelected.jsx\r\n-    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n-\r\n-    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n-    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n-    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n-\r\n-    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n-    const handleConfirmAdd = () => {\r\n-        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-\r\n-        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-      \r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        const ingredientProcess = ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        )\r\n-\r\n-        const newItem = {\r\n-            //id: selectedItem._id,\r\n-            name: selectedItem.name,\r\n-            size: selectedSize,\r\n-            price: selectedSizeData.price,\r\n-            quantity: quantity,\r\n-            note: note,\r\n-            selectedOptions: selectedOptions,\r\n-        };\r\n-        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n-\r\n-        setCartItems([...cartItems, newItem]);\r\n-\r\n-        setSelectedItem(null);\r\n-        setQuantity(1);\r\n-        setSelectedSize('')\r\n-        setSelectedOptions({});\r\n-        setNote('');\r\n-        \r\n-    };\r\n-\r\n-    // Function: Remove Item (from cart)\r\n-    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n-\r\n-    // Function: Edit Item (in cart)\r\n-    const handleEditItem = (indexToEdit) => {\r\n-        const itemToEdit = cartItems[indexToEdit];\r\n-    \r\n-        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n-        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-    \r\n-        setSelectedItem({\r\n-            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n-            size: itemToEdit.size,\r\n-            price: itemToEdit.price,\r\n-            quantity: itemToEdit.quantity,\r\n-            note: itemToEdit.note,\r\n-            selectedOptions: itemToEdit.selectedOptions || {},\r\n-        });\r\n-    \r\n-        setSelectedSize(itemToEdit.size);\r\n-        setQuantity(itemToEdit.quantity);\r\n-        setNote(itemToEdit.note);\r\n-        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-    \r\n-        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n-        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n-    };\r\n-\r\n-    // Function: Calculate total price of item(s) in cart.\r\n-    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <MenuList_Order\r\n-                data={data}\r\n-                category={category}\r\n-                onMenuClick={handleMenuClick}\r\n-                selectedItem={selectedItem}\r\n-            />\r\n-            <div className='right-box fr-18'>\r\n-                {selectedItem ? (\r\n-                    <MenuItemSelected\r\n-                        selectedItem={selectedItem}\r\n-                        selectedSize={selectedSize}\r\n-                        quantity={quantity}\r\n-                        note={note}\r\n-                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n-                        handleSizeChange={handleSizeChange}\r\n-                        handleQuantityIncrease={handleQuantityIncrease}\r\n-                        handleQuantityDecrease={handleQuantityDecrease}\r\n-                        handleConfirmAdd={handleConfirmAdd}\r\n-                        setNote={setNote}\r\n-                        ingredientRemain={ingredientRemain}\r\n-                    />\r\n-                ) : (\r\n-                    <CartSummary\r\n-                        cartItems={cartItems}\r\n-                        totalPrice={totalPrice}\r\n-                        handleEditItem={handleEditItem}\r\n-                        handleRemoveItem={handleRemoveItem}\r\n-                        onSave={handleSaveData}\r\n-                    />\r\n-                )}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622710339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,11 +73,24 @@\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n       \r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        console.log(\"ingredientProcess : \", ingredientProcess)\r\n+        console.log(\"ingredientRemain : \", ingredientRemain);\r\n \r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n+            if (ingredient) {\r\n+                return {\r\n+                    ...acc,\r\n+                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n+                };\r\n+            }\r\n+            return acc; // Keep the original if no change\r\n+        });\r\n+        \r\n+        console.log(\"ingredientProcess : \", ingredientProcess);\r\n+        \r\n+\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739622863196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,11 +85,13 @@\n                 };\r\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n-        \r\n         console.log(\"ingredientProcess : \", ingredientProcess);\r\n         \r\n+        const IngredientChangefilter = ingredientProcess.filter((acc,index) => acc.remain != ingredientChange[index].remain);\r\n+        \r\n+        console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n"
                },
                {
                    "date": 1739622939842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,14 +85,14 @@\n                 };\r\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n-        console.log(\"ingredientProcess : \", ingredientProcess);\r\n         \r\n         const IngredientChangefilter = ingredientProcess.filter((acc,index) => acc.remain != ingredientChange[index].remain);\r\n         \r\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n-\r\n+        \r\n+        setIngredientChange(IngredientChangefilter);\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739622965938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,11 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            ingredientChange.map(async (acc) => {\r\n+                const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n+            });\r\n             \r\n             console.log('Order saved:', response.data);\r\n             console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n@@ -89,9 +91,9 @@\n         \r\n         const IngredientChangefilter = ingredientProcess.filter((acc,index) => acc.remain != ingredientChange[index].remain);\r\n         \r\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n-        \r\n+\r\n         setIngredientChange(IngredientChangefilter);\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n"
                },
                {
                    "date": 1739622971789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            \r\n             ingredientChange.map(async (acc) => {\r\n                 const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n             });\r\n             \r\n"
                },
                {
                    "date": 1739622980755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,15 +43,14 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            \r\n+\r\n             ingredientChange.map(async (acc) => {\r\n                 const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n             });\r\n             \r\n             console.log('Order saved:', response.data);\r\n-            console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n"
                },
                {
                    "date": 1739623044845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,8 @@\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n \r\n-{/* BUGS\r\n-    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n-*/}\r\n-\r\n const OrderCreate = () => {\r\n     const [data, setData] = useState([]);\r\n     const [category, setCategory] = useState([]);\r\n     const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n"
                },
                {
                    "date": 1740378821236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n     // Function: Calculate total price of item(s) in cart.\r\n     const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n \r\n     return (\r\n-        <div className='container'>\r\n+        <>\r\n             <MenuList_Order\r\n                 data={data}\r\n                 category={category}\r\n                 onMenuClick={handleMenuClick}\r\n@@ -175,9 +175,9 @@\n                         onSave={handleSaveData}\r\n                     />\r\n                 )}\r\n             </div>\r\n-        </div>\r\n+        </>\r\n     );\r\n };\r\n \r\n export default OrderCreate;\r\n"
                }
            ],
            "date": 1739608563877,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MenuList_Order from './assets/MenuList_Order';\r\nimport MenuItemSelected from './assets/MenuItemSelected';\r\nimport CartSummary from './assets/CartSummary';\r\nimport './OrderCreate.css';\r\n\r\n{/* BUGS\r\n    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n*/}\r\n\r\nconst OrderCreate = () => {\r\n    const [data, setData] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [selectedSize, setSelectedSize] = useState('');\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [selectedOptions, setSelectedOptions] = useState({});\r\n    const [note, setNote] = useState('');\r\n\r\n    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n\r\n    // API: Fetch data from database\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/foods')\r\n            .then(res => { setData(res.data) })\r\n            .catch(err => console.error('Error fetching :', err));\r\n        axios.get('http://localhost:5000/api/add_menus/category')\r\n            .then(res => { setCategory(res.data) })\r\n            .catch(err => console.error('Error fetching :', err));\r\n        axios.get('http://localhost:5000/api/ingredients')\r\n            .then(res => { setIngredientRemain(res.data)\r\n                console.log(\"Ingredient Remain : \", res.data)\r\n            })\r\n            .catch(err => console.error('Error fetching :', err));\r\n    }, []);\r\n\r\n    //API: Add New Order\r\n    const handleSaveData = async (orderData) => {\r\n        try {\r\n            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n            console.log('Order saved:', response.data);\r\n            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n        } catch (error) {\r\n            console.error('Error saving order:', error);\r\n        }\r\n    };\r\n\r\n    // Function: Handle Menu Click & Set default for every option that exists.\r\n    const handleMenuClick = (item) => {\r\n        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n    };\r\n\r\n    // Fuction: Change size in MenuItemSelected.jsx\r\n    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n\r\n    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n\r\n    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n    const handleConfirmAdd = () => {\r\n        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n\r\n        const newItem = {\r\n            //id: selectedItem._id,\r\n            name: selectedItem.name,\r\n            size: selectedSize,\r\n            price: selectedSizeData.price,\r\n            quantity: quantity,\r\n            note: note,\r\n            selectedOptions: selectedOptions,\r\n        };\r\n        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n\r\n        setCartItems([...cartItems, newItem]);\r\n\r\n        setSelectedItem(null);\r\n        setQuantity(1);\r\n        setSelectedSize('')\r\n        setSelectedOptions({});\r\n        setNote('');\r\n        \r\n    };\r\n\r\n\r\n    // Function: Remove Item (from cart)\r\n    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n\r\n    // Function: Edit Item (in cart)\r\n    const handleEditItem = (indexToEdit) => {\r\n        const itemToEdit = cartItems[indexToEdit];\r\n    \r\n        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n    \r\n        setSelectedItem({\r\n            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n            size: itemToEdit.size,\r\n            price: itemToEdit.price,\r\n            quantity: itemToEdit.quantity,\r\n            note: itemToEdit.note,\r\n            selectedOptions: itemToEdit.selectedOptions || {},\r\n        });\r\n    \r\n        setSelectedSize(itemToEdit.size);\r\n        setQuantity(itemToEdit.quantity);\r\n        setNote(itemToEdit.note);\r\n        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n    \r\n        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n    };\r\n\r\n    // Function: Calculate total price of item(s) in cart.\r\n    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <MenuList_Order\r\n                data={data}\r\n                category={category}\r\n                onMenuClick={handleMenuClick}\r\n                selectedItem={selectedItem}\r\n            />\r\n            <div className='right-box fr-18'>\r\n                {selectedItem ? (\r\n                    <MenuItemSelected\r\n                        selectedItem={selectedItem}\r\n                        selectedSize={selectedSize}\r\n                        quantity={quantity}\r\n                        note={note}\r\n                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n                        handleSizeChange={handleSizeChange}\r\n                        handleQuantityIncrease={handleQuantityIncrease}\r\n                        handleQuantityDecrease={handleQuantityDecrease}\r\n                        handleConfirmAdd={handleConfirmAdd}\r\n                        setNote={setNote}\r\n                    />\r\n                ) : (\r\n                    <CartSummary\r\n                        cartItems={cartItems}\r\n                        totalPrice={totalPrice}\r\n                        handleEditItem={handleEditItem}\r\n                        handleRemoveItem={handleRemoveItem}\r\n                        onSave={handleSaveData}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderCreate;\r\n"
        }
    ]
}