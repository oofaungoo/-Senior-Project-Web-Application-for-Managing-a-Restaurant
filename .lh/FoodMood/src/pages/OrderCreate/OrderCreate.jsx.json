{
    "sourceFile": "FoodMood/src/pages/OrderCreate/OrderCreate.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 132,
            "patches": [
                {
                    "date": 1739608563877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739615477830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,8 +140,9 @@\n                         handleQuantityIncrease={handleQuantityIncrease}\r\n                         handleQuantityDecrease={handleQuantityDecrease}\r\n                         handleConfirmAdd={handleConfirmAdd}\r\n                         setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n                     />\r\n                 ) : (\r\n                     <CartSummary\r\n                         cartItems={cartItems}\r\n"
                },
                {
                    "date": 1739620344677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,18 @@\n     // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+        setIngredientRemain(ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        ))\r\n+        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739620694239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,8 +75,9 @@\n             return acc\r\n         }\r\n         ))\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n+        \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739620746211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,10 @@\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            console.log('Order saved:', response.data);\r\n+            \r\n+            //console.log('Order saved:', response.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n@@ -75,9 +76,9 @@\n             return acc\r\n         }\r\n         ))\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n-        \r\n+\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739620752314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,12 +39,12 @@\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n             \r\n             //console.log('Order saved:', response.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+            //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1739620929692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,8 @@\n         setNote('');\r\n         \r\n     };\r\n \r\n-\r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n     // Function: Edit Item (in cart)\r\n"
                },
                {
                    "date": 1739620949477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,9 @@\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", s)\r\n             //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n             \r\n             //console.log('Order saved:', response.data);\r\n             //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739620954842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", s)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n             \r\n             //console.log('Order saved:', response.data);\r\n             //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739621027616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,12 +40,14 @@\n     const handleSaveData = async (orderData) => {\r\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            //const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response2 = await axios.put('http://localhost:5000/api/ingredients', ingredientRemain);\r\n             \r\n-            //console.log('Order saved:', response.data);\r\n-            //setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+            console.log('Order saved:', response.data);\r\n+            console.log('Ingredient Remain saved:', response2.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1739621221311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.put('http://localhost:5000/api/ingredients', ingredientRemain);\r\n+            const response2 = await axios.put('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n             \r\n             console.log('Order saved:', response.data);\r\n             console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739621473768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     const [selectedOptions, setSelectedOptions] = useState({});\r\n     const [note, setNote] = useState('');\r\n \r\n     const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n \r\n     // API: Fetch data from database\r\n     useEffect(() => {\r\n         axios.get('http://localhost:5000/api/foods')\r\n@@ -41,9 +42,9 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.put('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n             \r\n             console.log('Order saved:', response.data);\r\n             console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n"
                },
                {
                    "date": 1739621812662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n             .then(res => { setCategory(res.data) })\r\n             .catch(err => console.error('Error fetching :', err));\r\n         axios.get('http://localhost:5000/api/ingredients')\r\n             .then(res => { setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n                 console.log(\"Ingredient Remain : \", res.data)\r\n             })\r\n             .catch(err => console.error('Error fetching :', err));\r\n     }, []);\r\n@@ -71,8 +72,10 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+        const remainChange = ingredientChange.filter((acc,index) => ingredientRemain[index].remain != acc.remain)\r\n+        console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n                 acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n"
                },
                {
                    "date": 1739621934626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,10 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.filter((acc,index) => ingredientRemain[index].remain != acc.remain)\r\n+        const remainChange = ingredientChange.filter((acc, index) => ingredientRemain[index] !== acc);\r\n+\r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n"
                },
                {
                    "date": 1739622019467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.filter((acc, index) => ingredientRemain[index] !== acc);\r\n+        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index] !== acc);\r\n \r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n"
                },
                {
                    "date": 1739622051551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index] !== acc);\r\n+        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index].remain !== acc.remain);\r\n \r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n"
                },
                {
                    "date": 1739622089667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,12 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.find((acc, index) => ingredientRemain[index].remain !== acc.remain);\r\n+        const remainChange = ingredientChange.filter((acc, index) => \r\n+            ingredientRemain[index]?.remain !== acc.remain\r\n+        );\r\n+        \r\n \r\n         console.log(\"Ingredient Change : \", remainChange)\r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n"
                },
                {
                    "date": 1739622144820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,184 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import MenuList_Order from './assets/MenuList_Order';\r\n+import MenuItemSelected from './assets/MenuItemSelected';\r\n+import CartSummary from './assets/CartSummary';\r\n+import './OrderCreate.css';\r\n+\r\n+{/* BUGS\r\n+    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n+*/}\r\n+\r\n+const OrderCreate = () => {\r\n+    const [data, setData] = useState([]);\r\n+    const [category, setCategory] = useState([]);\r\n+    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n+    const [selectedItem, setSelectedItem] = useState(null);\r\n+    const [selectedSize, setSelectedSize] = useState('');\r\n+    const [quantity, setQuantity] = useState(1);\r\n+    const [selectedOptions, setSelectedOptions] = useState({});\r\n+    const [note, setNote] = useState('');\r\n+\r\n+    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n+\r\n+    // API: Fetch data from database\r\n+    useEffect(() => {\r\n+        axios.get('http://localhost:5000/api/foods')\r\n+            .then(res => { setData(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/add_menus/category')\r\n+            .then(res => { setCategory(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => { setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n+                console.log(\"Ingredient Remain : \", res.data)\r\n+            })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+    }, []);\r\n+\r\n+    //API: Add New Order\r\n+    const handleSaveData = async (orderData) => {\r\n+        try {\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            \r\n+            console.log('Order saved:', response.data);\r\n+            console.log('Ingredient Remain saved:', response2.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+        } catch (error) {\r\n+            console.error('Error saving order:', error);\r\n+        }\r\n+    };\r\n+\r\n+    // Function: Handle Menu Click & Set default for every option that exists.\r\n+    const handleMenuClick = (item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n+        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n+        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n+    };\r\n+\r\n+    // Fuction: Change size in MenuItemSelected.jsx\r\n+    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n+\r\n+    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n+    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n+    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n+\r\n+    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n+    const handleConfirmAdd = () => {\r\n+        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n+\r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        console.log(\"ingredientChange : \", ingredientChange)\r\n+        const remainChange = ingredientChange.filter((acc, index) => \r\n+            ingredientRemain[index]?.remain !== acc.remain\r\n+        );\r\n+        \r\n+\r\n+        console.log(\"Ingredient Change : \", remainChange)\r\n+        setIngredientRemain(ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        ))\r\n+        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n+\r\n+        const newItem = {\r\n+            //id: selectedItem._id,\r\n+            name: selectedItem.name,\r\n+            size: selectedSize,\r\n+            price: selectedSizeData.price,\r\n+            quantity: quantity,\r\n+            note: note,\r\n+            selectedOptions: selectedOptions,\r\n+        };\r\n+        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n+\r\n+        setCartItems([...cartItems, newItem]);\r\n+\r\n+        setSelectedItem(null);\r\n+        setQuantity(1);\r\n+        setSelectedSize('')\r\n+        setSelectedOptions({});\r\n+        setNote('');\r\n+        \r\n+    };\r\n+\r\n+    // Function: Remove Item (from cart)\r\n+    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n+\r\n+    // Function: Edit Item (in cart)\r\n+    const handleEditItem = (indexToEdit) => {\r\n+        const itemToEdit = cartItems[indexToEdit];\r\n+    \r\n+        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n+        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n+    \r\n+        setSelectedItem({\r\n+            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n+            size: itemToEdit.size,\r\n+            price: itemToEdit.price,\r\n+            quantity: itemToEdit.quantity,\r\n+            note: itemToEdit.note,\r\n+            selectedOptions: itemToEdit.selectedOptions || {},\r\n+        });\r\n+    \r\n+        setSelectedSize(itemToEdit.size);\r\n+        setQuantity(itemToEdit.quantity);\r\n+        setNote(itemToEdit.note);\r\n+        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n+    \r\n+        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n+        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n+    };\r\n+\r\n+    // Function: Calculate total price of item(s) in cart.\r\n+    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <MenuList_Order\r\n+                data={data}\r\n+                category={category}\r\n+                onMenuClick={handleMenuClick}\r\n+                selectedItem={selectedItem}\r\n+            />\r\n+            <div className='right-box fr-18'>\r\n+                {selectedItem ? (\r\n+                    <MenuItemSelected\r\n+                        selectedItem={selectedItem}\r\n+                        selectedSize={selectedSize}\r\n+                        quantity={quantity}\r\n+                        note={note}\r\n+                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                        handleSizeChange={handleSizeChange}\r\n+                        handleQuantityIncrease={handleQuantityIncrease}\r\n+                        handleQuantityDecrease={handleQuantityDecrease}\r\n+                        handleConfirmAdd={handleConfirmAdd}\r\n+                        setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n+                    />\r\n+                ) : (\r\n+                    <CartSummary\r\n+                        cartItems={cartItems}\r\n+                        totalPrice={totalPrice}\r\n+                        handleEditItem={handleEditItem}\r\n+                        handleRemoveItem={handleRemoveItem}\r\n+                        onSave={handleSaveData}\r\n+                    />\r\n+                )}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622332191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,14 +74,9 @@\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n-        const remainChange = ingredientChange.filter((acc, index) => \r\n-            ingredientRemain[index]?.remain !== acc.remain\r\n-        );\r\n-        \r\n-\r\n-        console.log(\"Ingredient Change : \", remainChange)\r\n+      \r\n         setIngredientRemain(ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n                 acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n@@ -181,186 +176,4 @@\n     );\r\n };\r\n \r\n export default OrderCreate;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import MenuList_Order from './assets/MenuList_Order';\r\n-import MenuItemSelected from './assets/MenuItemSelected';\r\n-import CartSummary from './assets/CartSummary';\r\n-import './OrderCreate.css';\r\n-\r\n-{/* BUGS\r\n-    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n-*/}\r\n-\r\n-const OrderCreate = () => {\r\n-    const [data, setData] = useState([]);\r\n-    const [category, setCategory] = useState([]);\r\n-    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n-    const [selectedItem, setSelectedItem] = useState(null);\r\n-    const [selectedSize, setSelectedSize] = useState('');\r\n-    const [quantity, setQuantity] = useState(1);\r\n-    const [selectedOptions, setSelectedOptions] = useState({});\r\n-    const [note, setNote] = useState('');\r\n-\r\n-    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n-    const [ingredientChange, setIngredientChange] = useState([]);\r\n-\r\n-    // API: Fetch data from database\r\n-    useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/foods')\r\n-            .then(res => { setData(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/add_menus/category')\r\n-            .then(res => { setCategory(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => { setIngredientRemain(res.data)\r\n-                setIngredientChange(res.data)\r\n-                console.log(\"Ingredient Remain : \", res.data)\r\n-            })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-    }, []);\r\n-\r\n-    //API: Add New Order\r\n-    const handleSaveData = async (orderData) => {\r\n-        try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n-            \r\n-            console.log('Order saved:', response.data);\r\n-            console.log('Ingredient Remain saved:', response2.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n-        } catch (error) {\r\n-            console.error('Error saving order:', error);\r\n-        }\r\n-    };\r\n-\r\n-    // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n-        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n-        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n-    };\r\n-\r\n-    // Fuction: Change size in MenuItemSelected.jsx\r\n-    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n-\r\n-    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n-    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n-    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n-\r\n-    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n-    const handleConfirmAdd = () => {\r\n-        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-\r\n-        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-        const remainChange = ingredientChange.filter((acc, index) => \r\n-            ingredientRemain[index]?.remain !== acc.remain\r\n-        );\r\n-        \r\n-\r\n-        console.log(\"Ingredient Change : \", remainChange)\r\n-        setIngredientRemain(ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        ))\r\n-        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n-\r\n-        const newItem = {\r\n-            //id: selectedItem._id,\r\n-            name: selectedItem.name,\r\n-            size: selectedSize,\r\n-            price: selectedSizeData.price,\r\n-            quantity: quantity,\r\n-            note: note,\r\n-            selectedOptions: selectedOptions,\r\n-        };\r\n-        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n-\r\n-        setCartItems([...cartItems, newItem]);\r\n-\r\n-        setSelectedItem(null);\r\n-        setQuantity(1);\r\n-        setSelectedSize('')\r\n-        setSelectedOptions({});\r\n-        setNote('');\r\n-        \r\n-    };\r\n-\r\n-    // Function: Remove Item (from cart)\r\n-    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n-\r\n-    // Function: Edit Item (in cart)\r\n-    const handleEditItem = (indexToEdit) => {\r\n-        const itemToEdit = cartItems[indexToEdit];\r\n-    \r\n-        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n-        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-    \r\n-        setSelectedItem({\r\n-            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n-            size: itemToEdit.size,\r\n-            price: itemToEdit.price,\r\n-            quantity: itemToEdit.quantity,\r\n-            note: itemToEdit.note,\r\n-            selectedOptions: itemToEdit.selectedOptions || {},\r\n-        });\r\n-    \r\n-        setSelectedSize(itemToEdit.size);\r\n-        setQuantity(itemToEdit.quantity);\r\n-        setNote(itemToEdit.note);\r\n-        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-    \r\n-        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n-        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n-    };\r\n-\r\n-    // Function: Calculate total price of item(s) in cart.\r\n-    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <MenuList_Order\r\n-                data={data}\r\n-                category={category}\r\n-                onMenuClick={handleMenuClick}\r\n-                selectedItem={selectedItem}\r\n-            />\r\n-            <div className='right-box fr-18'>\r\n-                {selectedItem ? (\r\n-                    <MenuItemSelected\r\n-                        selectedItem={selectedItem}\r\n-                        selectedSize={selectedSize}\r\n-                        quantity={quantity}\r\n-                        note={note}\r\n-                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n-                        handleSizeChange={handleSizeChange}\r\n-                        handleQuantityIncrease={handleQuantityIncrease}\r\n-                        handleQuantityDecrease={handleQuantityDecrease}\r\n-                        handleConfirmAdd={handleConfirmAdd}\r\n-                        setNote={setNote}\r\n-                        ingredientRemain={ingredientRemain}\r\n-                    />\r\n-                ) : (\r\n-                    <CartSummary\r\n-                        cartItems={cartItems}\r\n-                        totalPrice={totalPrice}\r\n-                        handleEditItem={handleEditItem}\r\n-                        handleRemoveItem={handleRemoveItem}\r\n-                        onSave={handleSaveData}\r\n-                    />\r\n-                )}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622431028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,17 +74,8 @@\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n-      \r\n-        setIngredientRemain(ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        ))\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n"
                },
                {
                    "date": 1739622523686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,10 +72,20 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+      \r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        )\r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n+\r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n"
                },
                {
                    "date": 1739622538803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n             }\r\n             return acc\r\n         }\r\n         )\r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        console.log(\"ingredientRemain : \", ingredientProcess)\r\n         console.log(\"ingredientChange : \", ingredientChange)\r\n \r\n         console.log(\"Ingredient Remain : \", ingredientRemain)\r\n \r\n"
                },
                {
                    "date": 1739622610580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,21 +73,18 @@\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n       \r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n             if(ingredient){\r\n                 acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n             }\r\n             return acc\r\n         }\r\n         )\r\n-        console.log(\"ingredientRemain : \", ingredientProcess)\r\n-        console.log(\"ingredientChange : \", ingredientChange)\r\n \r\n-        console.log(\"Ingredient Remain : \", ingredientRemain)\r\n-\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739622620002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,178 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import MenuList_Order from './assets/MenuList_Order';\r\n+import MenuItemSelected from './assets/MenuItemSelected';\r\n+import CartSummary from './assets/CartSummary';\r\n+import './OrderCreate.css';\r\n+\r\n+{/* BUGS\r\n+    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n+*/}\r\n+\r\n+const OrderCreate = () => {\r\n+    const [data, setData] = useState([]);\r\n+    const [category, setCategory] = useState([]);\r\n+    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n+    const [selectedItem, setSelectedItem] = useState(null);\r\n+    const [selectedSize, setSelectedSize] = useState('');\r\n+    const [quantity, setQuantity] = useState(1);\r\n+    const [selectedOptions, setSelectedOptions] = useState({});\r\n+    const [note, setNote] = useState('');\r\n+\r\n+    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n+\r\n+    // API: Fetch data from database\r\n+    useEffect(() => {\r\n+        axios.get('http://localhost:5000/api/foods')\r\n+            .then(res => { setData(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/add_menus/category')\r\n+            .then(res => { setCategory(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => { setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n+                console.log(\"Ingredient Remain : \", res.data)\r\n+            })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+    }, []);\r\n+\r\n+    //API: Add New Order\r\n+    const handleSaveData = async (orderData) => {\r\n+        try {\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            \r\n+            console.log('Order saved:', response.data);\r\n+            console.log('Ingredient Remain saved:', response2.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+        } catch (error) {\r\n+            console.error('Error saving order:', error);\r\n+        }\r\n+    };\r\n+\r\n+    // Function: Handle Menu Click & Set default for every option that exists.\r\n+    const handleMenuClick = (item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n+        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n+        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n+    };\r\n+\r\n+    // Fuction: Change size in MenuItemSelected.jsx\r\n+    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n+\r\n+    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n+    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n+    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n+\r\n+    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n+    const handleConfirmAdd = () => {\r\n+        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n+\r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+      \r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n+            if(ingredient){\r\n+                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n+            }\r\n+            return acc\r\n+        }\r\n+        )\r\n+        console.log(\"ingredientProcess : \", ingredientProcess)\r\n+\r\n+        const newItem = {\r\n+            //id: selectedItem._id,\r\n+            name: selectedItem.name,\r\n+            size: selectedSize,\r\n+            price: selectedSizeData.price,\r\n+            quantity: quantity,\r\n+            note: note,\r\n+            selectedOptions: selectedOptions,\r\n+        };\r\n+        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n+\r\n+        setCartItems([...cartItems, newItem]);\r\n+\r\n+        setSelectedItem(null);\r\n+        setQuantity(1);\r\n+        setSelectedSize('')\r\n+        setSelectedOptions({});\r\n+        setNote('');\r\n+        \r\n+    };\r\n+\r\n+    // Function: Remove Item (from cart)\r\n+    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n+\r\n+    // Function: Edit Item (in cart)\r\n+    const handleEditItem = (indexToEdit) => {\r\n+        const itemToEdit = cartItems[indexToEdit];\r\n+    \r\n+        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n+        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n+    \r\n+        setSelectedItem({\r\n+            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n+            size: itemToEdit.size,\r\n+            price: itemToEdit.price,\r\n+            quantity: itemToEdit.quantity,\r\n+            note: itemToEdit.note,\r\n+            selectedOptions: itemToEdit.selectedOptions || {},\r\n+        });\r\n+    \r\n+        setSelectedSize(itemToEdit.size);\r\n+        setQuantity(itemToEdit.quantity);\r\n+        setNote(itemToEdit.note);\r\n+        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n+    \r\n+        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n+        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n+    };\r\n+\r\n+    // Function: Calculate total price of item(s) in cart.\r\n+    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n+\r\n+    return (\r\n+        <div className='container'>\r\n+            <MenuList_Order\r\n+                data={data}\r\n+                category={category}\r\n+                onMenuClick={handleMenuClick}\r\n+                selectedItem={selectedItem}\r\n+            />\r\n+            <div className='right-box fr-18'>\r\n+                {selectedItem ? (\r\n+                    <MenuItemSelected\r\n+                        selectedItem={selectedItem}\r\n+                        selectedSize={selectedSize}\r\n+                        quantity={quantity}\r\n+                        note={note}\r\n+                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                        handleSizeChange={handleSizeChange}\r\n+                        handleQuantityIncrease={handleQuantityIncrease}\r\n+                        handleQuantityDecrease={handleQuantityDecrease}\r\n+                        handleConfirmAdd={handleConfirmAdd}\r\n+                        setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n+                    />\r\n+                ) : (\r\n+                    <CartSummary\r\n+                        cartItems={cartItems}\r\n+                        totalPrice={totalPrice}\r\n+                        handleEditItem={handleEditItem}\r\n+                        handleRemoveItem={handleRemoveItem}\r\n+                        onSave={handleSaveData}\r\n+                    />\r\n+                )}\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622638461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,16 +74,8 @@\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n       \r\n         console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        const ingredientProcess = ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        )\r\n         console.log(\"ingredientProcess : \", ingredientProcess)\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n@@ -175,181 +167,4 @@\n     );\r\n };\r\n \r\n export default OrderCreate;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import MenuList_Order from './assets/MenuList_Order';\r\n-import MenuItemSelected from './assets/MenuItemSelected';\r\n-import CartSummary from './assets/CartSummary';\r\n-import './OrderCreate.css';\r\n-\r\n-{/* BUGS\r\n-    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n-*/}\r\n-\r\n-const OrderCreate = () => {\r\n-    const [data, setData] = useState([]);\r\n-    const [category, setCategory] = useState([]);\r\n-    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n-    const [selectedItem, setSelectedItem] = useState(null);\r\n-    const [selectedSize, setSelectedSize] = useState('');\r\n-    const [quantity, setQuantity] = useState(1);\r\n-    const [selectedOptions, setSelectedOptions] = useState({});\r\n-    const [note, setNote] = useState('');\r\n-\r\n-    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n-    const [ingredientChange, setIngredientChange] = useState([]);\r\n-\r\n-    // API: Fetch data from database\r\n-    useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/foods')\r\n-            .then(res => { setData(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/add_menus/category')\r\n-            .then(res => { setCategory(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => { setIngredientRemain(res.data)\r\n-                setIngredientChange(res.data)\r\n-                console.log(\"Ingredient Remain : \", res.data)\r\n-            })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-    }, []);\r\n-\r\n-    //API: Add New Order\r\n-    const handleSaveData = async (orderData) => {\r\n-        try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n-            \r\n-            console.log('Order saved:', response.data);\r\n-            console.log('Ingredient Remain saved:', response2.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n-        } catch (error) {\r\n-            console.error('Error saving order:', error);\r\n-        }\r\n-    };\r\n-\r\n-    // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n-        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n-        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n-    };\r\n-\r\n-    // Fuction: Change size in MenuItemSelected.jsx\r\n-    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n-\r\n-    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n-    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n-    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n-\r\n-    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n-    const handleConfirmAdd = () => {\r\n-        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-\r\n-        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-      \r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        const ingredientProcess = ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name)\r\n-            if(ingredient){\r\n-                acc.remain = acc.remain - ingredient.newIngredientQty*quantity\r\n-            }\r\n-            return acc\r\n-        }\r\n-        )\r\n-\r\n-        const newItem = {\r\n-            //id: selectedItem._id,\r\n-            name: selectedItem.name,\r\n-            size: selectedSize,\r\n-            price: selectedSizeData.price,\r\n-            quantity: quantity,\r\n-            note: note,\r\n-            selectedOptions: selectedOptions,\r\n-        };\r\n-        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n-\r\n-        setCartItems([...cartItems, newItem]);\r\n-\r\n-        setSelectedItem(null);\r\n-        setQuantity(1);\r\n-        setSelectedSize('')\r\n-        setSelectedOptions({});\r\n-        setNote('');\r\n-        \r\n-    };\r\n-\r\n-    // Function: Remove Item (from cart)\r\n-    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n-\r\n-    // Function: Edit Item (in cart)\r\n-    const handleEditItem = (indexToEdit) => {\r\n-        const itemToEdit = cartItems[indexToEdit];\r\n-    \r\n-        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n-        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-    \r\n-        setSelectedItem({\r\n-            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n-            size: itemToEdit.size,\r\n-            price: itemToEdit.price,\r\n-            quantity: itemToEdit.quantity,\r\n-            note: itemToEdit.note,\r\n-            selectedOptions: itemToEdit.selectedOptions || {},\r\n-        });\r\n-    \r\n-        setSelectedSize(itemToEdit.size);\r\n-        setQuantity(itemToEdit.quantity);\r\n-        setNote(itemToEdit.note);\r\n-        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-    \r\n-        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n-        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n-    };\r\n-\r\n-    // Function: Calculate total price of item(s) in cart.\r\n-    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n-\r\n-    return (\r\n-        <div className='container'>\r\n-            <MenuList_Order\r\n-                data={data}\r\n-                category={category}\r\n-                onMenuClick={handleMenuClick}\r\n-                selectedItem={selectedItem}\r\n-            />\r\n-            <div className='right-box fr-18'>\r\n-                {selectedItem ? (\r\n-                    <MenuItemSelected\r\n-                        selectedItem={selectedItem}\r\n-                        selectedSize={selectedSize}\r\n-                        quantity={quantity}\r\n-                        note={note}\r\n-                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n-                        handleSizeChange={handleSizeChange}\r\n-                        handleQuantityIncrease={handleQuantityIncrease}\r\n-                        handleQuantityDecrease={handleQuantityDecrease}\r\n-                        handleConfirmAdd={handleConfirmAdd}\r\n-                        setNote={setNote}\r\n-                        ingredientRemain={ingredientRemain}\r\n-                    />\r\n-                ) : (\r\n-                    <CartSummary\r\n-                        cartItems={cartItems}\r\n-                        totalPrice={totalPrice}\r\n-                        handleEditItem={handleEditItem}\r\n-                        handleRemoveItem={handleRemoveItem}\r\n-                        onSave={handleSaveData}\r\n-                    />\r\n-                )}\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default OrderCreate;\r\n"
                },
                {
                    "date": 1739622710339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,11 +73,24 @@\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n       \r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        console.log(\"ingredientProcess : \", ingredientProcess)\r\n+        console.log(\"ingredientRemain : \", ingredientRemain);\r\n \r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n+            if (ingredient) {\r\n+                return {\r\n+                    ...acc,\r\n+                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n+                };\r\n+            }\r\n+            return acc; // Keep the original if no change\r\n+        });\r\n+        \r\n+        console.log(\"ingredientProcess : \", ingredientProcess);\r\n+        \r\n+\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739622863196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,11 +85,13 @@\n                 };\r\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n-        \r\n         console.log(\"ingredientProcess : \", ingredientProcess);\r\n         \r\n+        const IngredientChangefilter = ingredientProcess.filter((acc,index) => acc.remain != ingredientChange[index].remain);\r\n+        \r\n+        console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n \r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n"
                },
                {
                    "date": 1739622939842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,14 +85,14 @@\n                 };\r\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n-        console.log(\"ingredientProcess : \", ingredientProcess);\r\n         \r\n         const IngredientChangefilter = ingredientProcess.filter((acc,index) => acc.remain != ingredientChange[index].remain);\r\n         \r\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n-\r\n+        \r\n+        setIngredientChange(IngredientChangefilter);\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n"
                },
                {
                    "date": 1739622965938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,11 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            const response2 = await axios.post('http://localhost:5000/api/ingredients', {data:ingredientRemain});\r\n+            ingredientChange.map(async (acc) => {\r\n+                const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n+            });\r\n             \r\n             console.log('Order saved:', response.data);\r\n             console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n@@ -89,9 +91,9 @@\n         \r\n         const IngredientChangefilter = ingredientProcess.filter((acc,index) => acc.remain != ingredientChange[index].remain);\r\n         \r\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n-        \r\n+\r\n         setIngredientChange(IngredientChangefilter);\r\n         const newItem = {\r\n             //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n"
                },
                {
                    "date": 1739622971789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+            \r\n             ingredientChange.map(async (acc) => {\r\n                 const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n             });\r\n             \r\n"
                },
                {
                    "date": 1739622980755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,15 +43,14 @@\n         try {\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n             console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-            \r\n+\r\n             ingredientChange.map(async (acc) => {\r\n                 const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n             });\r\n             \r\n             console.log('Order saved:', response.data);\r\n-            console.log('Ingredient Remain saved:', response2.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n         }\r\n"
                },
                {
                    "date": 1739623044845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,8 @@\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n \r\n-{/* BUGS\r\n-    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n-*/}\r\n-\r\n const OrderCreate = () => {\r\n     const [data, setData] = useState([]);\r\n     const [category, setCategory] = useState([]);\r\n     const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n"
                },
                {
                    "date": 1740378821236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,9 +142,9 @@\n     // Function: Calculate total price of item(s) in cart.\r\n     const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n \r\n     return (\r\n-        <div className='container'>\r\n+        <>\r\n             <MenuList_Order\r\n                 data={data}\r\n                 category={category}\r\n                 onMenuClick={handleMenuClick}\r\n@@ -175,9 +175,9 @@\n                         onSave={handleSaveData}\r\n                     />\r\n                 )}\r\n             </div>\r\n-        </div>\r\n+        </>\r\n     );\r\n };\r\n \r\n export default OrderCreate;\r\n"
                },
                {
                    "date": 1740581768528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,11 @@\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n \r\n const OrderCreate = () => {\r\n+    const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n+    const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n+\r\n     const [data, setData] = useState([]);\r\n     const [category, setCategory] = useState([]);\r\n     const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n     const [selectedItem, setSelectedItem] = useState(null);\r\n@@ -142,8 +145,9 @@\n     // Function: Calculate total price of item(s) in cart.\r\n     const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n \r\n     return (\r\n+        \r\n         <>\r\n             <MenuList_Order\r\n                 data={data}\r\n                 category={category}\r\n"
                },
                {
                    "date": 1740581788988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,10 @@\n         axios.get('http://localhost:5000/api/add_menus/category')\r\n             .then(res => { setCategory(res.data) })\r\n             .catch(err => console.error('Error fetching :', err));\r\n         axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => { setIngredientRemain(res.data)\r\n+            .then(res => {\r\n+                setIngredientRemain(res.data)\r\n                 setIngredientChange(res.data)\r\n                 console.log(\"Ingredient Remain : \", res.data)\r\n             })\r\n             .catch(err => console.error('Error fetching :', err));\r\n@@ -46,9 +47,9 @@\n \r\n             ingredientChange.map(async (acc) => {\r\n                 const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n             });\r\n-            \r\n+\r\n             console.log('Order saved:', response.data);\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n@@ -73,9 +74,9 @@\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-      \r\n+\r\n         console.log(\"ingredientRemain : \", ingredientRemain);\r\n \r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n@@ -86,11 +87,11 @@\n                 };\r\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n-        \r\n-        const IngredientChangefilter = ingredientProcess.filter((acc,index) => acc.remain != ingredientChange[index].remain);\r\n-        \r\n+\r\n+        const IngredientChangefilter = ingredientProcess.filter((acc, index) => acc.remain != ingredientChange[index].remain);\r\n+\r\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n \r\n         setIngredientChange(IngredientChangefilter);\r\n         const newItem = {\r\n@@ -110,51 +111,66 @@\n         setQuantity(1);\r\n         setSelectedSize('')\r\n         setSelectedOptions({});\r\n         setNote('');\r\n-        \r\n+\r\n     };\r\n \r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n     // Function: Edit Item (in cart)\r\n     const handleEditItem = (indexToEdit) => {\r\n         const itemToEdit = cartItems[indexToEdit];\r\n-    \r\n+\r\n         // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n         const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-    \r\n+\r\n         setSelectedItem({\r\n             ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n             size: itemToEdit.size,\r\n             price: itemToEdit.price,\r\n             quantity: itemToEdit.quantity,\r\n             note: itemToEdit.note,\r\n             selectedOptions: itemToEdit.selectedOptions || {},\r\n         });\r\n-    \r\n+\r\n         setSelectedSize(itemToEdit.size);\r\n         setQuantity(itemToEdit.quantity);\r\n         setNote(itemToEdit.note);\r\n         setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-    \r\n+\r\n         // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n         setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n     };\r\n \r\n     // Function: Calculate total price of item(s) in cart.\r\n     const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n \r\n     return (\r\n-        \r\n+\r\n         <>\r\n-            <MenuList_Order\r\n-                data={data}\r\n-                category={category}\r\n-                onMenuClick={handleMenuClick}\r\n-                selectedItem={selectedItem}\r\n-            />\r\n+            {/* Box ของ MenuList */}\r\n+            <Box\r\n+                sx={{\r\n+                    backgroundColor: \"#fff\",\r\n+                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n+                    height: \"100vh\",\r\n+                    padding: \"20px\",\r\n+                    borderRadius: \"8px\",\r\n+                    overflowY: \"auto\",\r\n+                    marginRight: \"10px\",\r\n+                }}\r\n+            >\r\n+                <MenuList_Order\r\n+                    data={data}\r\n+                    category={category}\r\n+                    onMenuClick={handleMenuClick}\r\n+                    selectedItem={selectedItem}\r\n+                />\r\n+            </Box>\r\n+\r\n+\r\n             <div className='right-box fr-18'>\r\n                 {selectedItem ? (\r\n                     <MenuItemSelected\r\n                         selectedItem={selectedItem}\r\n"
                },
                {
                    "date": 1740581807362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n+import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n import MenuList_Order from './assets/MenuList_Order';\r\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n"
                },
                {
                    "date": 1740581816819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,8 @@\n                     selectedItem={selectedItem}\r\n                 />\r\n             </Box>\r\n \r\n-\r\n             <div className='right-box fr-18'>\r\n                 {selectedItem ? (\r\n                     <MenuItemSelected\r\n                         selectedItem={selectedItem}\r\n"
                },
                {
                    "date": 1740582029530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,8 @@\n                 <MenuList_Order\r\n                     data={data}\r\n                     category={category}\r\n                     onMenuClick={handleMenuClick}\r\n-                    selectedItem={selectedItem}\r\n                 />\r\n             </Box>\r\n \r\n             <div className='right-box fr-18'>\r\n"
                },
                {
                    "date": 1740582120220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,34 +168,98 @@\n                     onMenuClick={handleMenuClick}\r\n                 />\r\n             </Box>\r\n \r\n-            <div className='right-box fr-18'>\r\n-                {selectedItem ? (\r\n-                    <MenuItemSelected\r\n-                        selectedItem={selectedItem}\r\n-                        selectedSize={selectedSize}\r\n-                        quantity={quantity}\r\n-                        note={note}\r\n-                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n-                        handleSizeChange={handleSizeChange}\r\n-                        handleQuantityIncrease={handleQuantityIncrease}\r\n-                        handleQuantityDecrease={handleQuantityDecrease}\r\n-                        handleConfirmAdd={handleConfirmAdd}\r\n-                        setNote={setNote}\r\n-                        ingredientRemain={ingredientRemain}\r\n-                    />\r\n-                ) : (\r\n-                    <CartSummary\r\n-                        cartItems={cartItems}\r\n-                        totalPrice={totalPrice}\r\n-                        handleEditItem={handleEditItem}\r\n-                        handleRemoveItem={handleRemoveItem}\r\n-                        onSave={handleSaveData}\r\n-                    />\r\n-                )}\r\n-            </div>\r\n+            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n+            {!isMobile && (showEditData || showItemDetail) && (\r\n+                <Box\r\n+                    sx={{\r\n+                        backgroundColor: \"#fff\",\r\n+                        width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n+                        height: \"100vh\",\r\n+                        padding: \"20px\",\r\n+                        borderRadius: \"8px\",\r\n+                        overflowY: \"auto\",\r\n+                        display: \"flex\",\r\n+                        flexDirection: \"column\",\r\n+                    }}\r\n+                >\r\n+                    {selectedItem ? (\r\n+                        <MenuItemSelected\r\n+                            selectedItem={selectedItem}\r\n+                            selectedSize={selectedSize}\r\n+                            quantity={quantity}\r\n+                            note={note}\r\n+                            selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                            setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                            handleSizeChange={handleSizeChange}\r\n+                            handleQuantityIncrease={handleQuantityIncrease}\r\n+                            handleQuantityDecrease={handleQuantityDecrease}\r\n+                            handleConfirmAdd={handleConfirmAdd}\r\n+                            setNote={setNote}\r\n+                            ingredientRemain={ingredientRemain}\r\n+                        />\r\n+                    ) : (\r\n+                        <CartSummary\r\n+                            cartItems={cartItems}\r\n+                            totalPrice={totalPrice}\r\n+                            handleEditItem={handleEditItem}\r\n+                            handleRemoveItem={handleRemoveItem}\r\n+                            onSave={handleSaveData}\r\n+                        />\r\n+                    )}\r\n+                </Box>\r\n+            )}\r\n+\r\n+            {/* Mobile - ใช้ Modal */}\r\n+            {isMobile && (\r\n+                <Modal\r\n+                    open={showEditData || showItemDetail}\r\n+                    onClose={() => {\r\n+                        setShowEditData(false);\r\n+                        setShowItemDetail(false);\r\n+                    }}\r\n+                >\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        {selectedItem ? (\r\n+                            <MenuItemSelected\r\n+                                selectedItem={selectedItem}\r\n+                                selectedSize={selectedSize}\r\n+                                quantity={quantity}\r\n+                                note={note}\r\n+                                selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                                setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                                handleSizeChange={handleSizeChange}\r\n+                                handleQuantityIncrease={handleQuantityIncrease}\r\n+                                handleQuantityDecrease={handleQuantityDecrease}\r\n+                                handleConfirmAdd={handleConfirmAdd}\r\n+                                setNote={setNote}\r\n+                                ingredientRemain={ingredientRemain}\r\n+                            />\r\n+                        ) : (\r\n+                            <CartSummary\r\n+                                cartItems={cartItems}\r\n+                                totalPrice={totalPrice}\r\n+                                handleEditItem={handleEditItem}\r\n+                                handleRemoveItem={handleRemoveItem}\r\n+                                onSave={handleSaveData}\r\n+                            />\r\n+                        )}\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n         </>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740582144817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                 />\r\n             </Box>\r\n \r\n             {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n-            {!isMobile && (showEditData || showItemDetail) && (\r\n+            {!isMobile (\r\n                 <Box\r\n                     sx={{\r\n                         backgroundColor: \"#fff\",\r\n                         width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n"
                },
                {
                    "date": 1740582156608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                 />\r\n             </Box>\r\n \r\n             {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n-            {!isMobile (\r\n+            {!isMobile && (showEditData || showItemDetail) && (\r\n                 <Box\r\n                     sx={{\r\n                         backgroundColor: \"#fff\",\r\n                         width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n"
                },
                {
                    "date": 1740582168112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                 />\r\n             </Box>\r\n \r\n             {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n-            {!isMobile && (showEditData || showItemDetail) && (\r\n+            {!isMobile && (\r\n                 <Box\r\n                     sx={{\r\n                         backgroundColor: \"#fff\",\r\n                         width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n"
                },
                {
                    "date": 1740582191137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,12 +212,10 @@\n \r\n             {/* Mobile - ใช้ Modal */}\r\n             {isMobile && (\r\n                 <Modal\r\n-                    open={showEditData || showItemDetail}\r\n                     onClose={() => {\r\n-                        setShowEditData(false);\r\n-                        setShowItemDetail(false);\r\n+\r\n                     }}\r\n                 >\r\n                     <Box\r\n                         sx={{\r\n"
                },
                {
                    "date": 1740582272453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,10 +235,10 @@\n                                 selectedItem={selectedItem}\r\n                                 selectedSize={selectedSize}\r\n                                 quantity={quantity}\r\n                                 note={note}\r\n-                                selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                                setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                                selectedOptions={selectedOptions}\r\n+                                setSelectedOptions={setSelectedOptions}s\r\n                                 handleSizeChange={handleSizeChange}\r\n                                 handleQuantityIncrease={handleQuantityIncrease}\r\n                                 handleQuantityDecrease={handleQuantityDecrease}\r\n                                 handleConfirmAdd={handleConfirmAdd}\r\n"
                },
                {
                    "date": 1740582280112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,9 +173,9 @@\n             {!isMobile && (\r\n                 <Box\r\n                     sx={{\r\n                         backgroundColor: \"#fff\",\r\n-                        width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n+                        width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 35%, Desktop = 25%\r\n                         height: \"100vh\",\r\n                         padding: \"20px\",\r\n                         borderRadius: \"8px\",\r\n                         overflowY: \"auto\",\r\n@@ -188,10 +188,10 @@\n                             selectedItem={selectedItem}\r\n                             selectedSize={selectedSize}\r\n                             quantity={quantity}\r\n                             note={note}\r\n-                            selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                            setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                            selectedOptions={selectedOptions}\r\n+                            setSelectedOptions={setSelectedOptions}\r\n                             handleSizeChange={handleSizeChange}\r\n                             handleQuantityIncrease={handleQuantityIncrease}\r\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n"
                },
                {
                    "date": 1740582394870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,10 @@\n const OrderCreate = () => {\r\n     const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n     const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n \r\n+    const [showSelectedMenu, setShowSelectedMenu] = useState(false);\r\n+\r\n     const [data, setData] = useState([]);\r\n     const [category, setCategory] = useState([]);\r\n     const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n     const [selectedItem, setSelectedItem] = useState(null);\r\n@@ -173,9 +175,9 @@\n             {!isMobile && (\r\n                 <Box\r\n                     sx={{\r\n                         backgroundColor: \"#fff\",\r\n-                        width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 35%, Desktop = 25%\r\n+                        width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n                         height: \"100vh\",\r\n                         padding: \"20px\",\r\n                         borderRadius: \"8px\",\r\n                         overflowY: \"auto\",\r\n@@ -188,10 +190,10 @@\n                             selectedItem={selectedItem}\r\n                             selectedSize={selectedSize}\r\n                             quantity={quantity}\r\n                             note={note}\r\n-                            selectedOptions={selectedOptions}\r\n-                            setSelectedOptions={setSelectedOptions}\r\n+                            selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                            setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n                             handleSizeChange={handleSizeChange}\r\n                             handleQuantityIncrease={handleQuantityIncrease}\r\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n@@ -212,10 +214,11 @@\n \r\n             {/* Mobile - ใช้ Modal */}\r\n             {isMobile && (\r\n                 <Modal\r\n+                    open={showSelectedMenu}\r\n                     onClose={() => {\r\n-\r\n+                        setShowSelectedMenu(false);\r\n                     }}\r\n                 >\r\n                     <Box\r\n                         sx={{\r\n@@ -235,10 +238,10 @@\n                                 selectedItem={selectedItem}\r\n                                 selectedSize={selectedSize}\r\n                                 quantity={quantity}\r\n                                 note={note}\r\n-                                selectedOptions={selectedOptions}\r\n-                                setSelectedOptions={setSelectedOptions}s\r\n+                                selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                                setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n                                 handleSizeChange={handleSizeChange}\r\n                                 handleQuantityIncrease={handleQuantityIncrease}\r\n                                 handleQuantityDecrease={handleQuantityDecrease}\r\n                                 handleConfirmAdd={handleConfirmAdd}\r\n"
                },
                {
                    "date": 1740582468352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -216,8 +216,9 @@\n             {isMobile && (\r\n                 <Modal\r\n                     open={showSelectedMenu}\r\n                     onClose={() => {\r\n+                        console.log(\"Closing modal...\");\r\n                         setShowSelectedMenu(false);\r\n                     }}\r\n                 >\r\n                     <Box\r\n"
                },
                {
                    "date": 1740582519545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,22 +234,25 @@\n                             flexDirection: \"column\",\r\n                         }}\r\n                     >\r\n                         {selectedItem ? (\r\n-                            <MenuItemSelected\r\n-                                selectedItem={selectedItem}\r\n-                                selectedSize={selectedSize}\r\n-                                quantity={quantity}\r\n-                                note={note}\r\n-                                selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                                setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n-                                handleSizeChange={handleSizeChange}\r\n-                                handleQuantityIncrease={handleQuantityIncrease}\r\n-                                handleQuantityDecrease={handleQuantityDecrease}\r\n-                                handleConfirmAdd={handleConfirmAdd}\r\n-                                setNote={setNote}\r\n-                                ingredientRemain={ingredientRemain}\r\n-                            />\r\n+                            <>\r\n+                                {console.log(\"Selected Item inside Modal:\", selectedItem)}\r\n+                                <MenuItemSelected\r\n+                                    selectedItem={selectedItem}\r\n+                                    selectedSize={selectedSize}\r\n+                                    quantity={quantity}\r\n+                                    note={note}\r\n+                                    selectedOptions={selectedOptions}\r\n+                                    setSelectedOptions={setSelectedOptions}\r\n+                                    handleSizeChange={handleSizeChange}\r\n+                                    handleQuantityIncrease={handleQuantityIncrease}\r\n+                                    handleQuantityDecrease={handleQuantityDecrease}\r\n+                                    handleConfirmAdd={handleConfirmAdd}\r\n+                                    setNote={setNote}\r\n+                                    ingredientRemain={ingredientRemain}\r\n+                                />\r\n+                            </>\r\n                         ) : (\r\n                             <CartSummary\r\n                                 cartItems={cartItems}\r\n                                 totalPrice={totalPrice}\r\n"
                },
                {
                    "date": 1740582537990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,25 +234,22 @@\n                             flexDirection: \"column\",\r\n                         }}\r\n                     >\r\n                         {selectedItem ? (\r\n-                            <>\r\n-                                {console.log(\"Selected Item inside Modal:\", selectedItem)}\r\n-                                <MenuItemSelected\r\n-                                    selectedItem={selectedItem}\r\n-                                    selectedSize={selectedSize}\r\n-                                    quantity={quantity}\r\n-                                    note={note}\r\n-                                    selectedOptions={selectedOptions}\r\n-                                    setSelectedOptions={setSelectedOptions}\r\n-                                    handleSizeChange={handleSizeChange}\r\n-                                    handleQuantityIncrease={handleQuantityIncrease}\r\n-                                    handleQuantityDecrease={handleQuantityDecrease}\r\n-                                    handleConfirmAdd={handleConfirmAdd}\r\n-                                    setNote={setNote}\r\n-                                    ingredientRemain={ingredientRemain}\r\n-                                />\r\n-                            </>\r\n+                            <MenuItemSelected\r\n+                                selectedItem={selectedItem}\r\n+                                selectedSize={selectedSize}\r\n+                                quantity={quantity}\r\n+                                note={note}\r\n+                                selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n+                                setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                                handleSizeChange={handleSizeChange}\r\n+                                handleQuantityIncrease={handleQuantityIncrease}\r\n+                                handleQuantityDecrease={handleQuantityDecrease}\r\n+                                handleConfirmAdd={handleConfirmAdd}\r\n+                                setNote={setNote}\r\n+                                ingredientRemain={ingredientRemain}\r\n+                            />\r\n                         ) : (\r\n                             <CartSummary\r\n                                 cartItems={cartItems}\r\n                                 totalPrice={totalPrice}\r\n"
                },
                {
                    "date": 1740582686619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,12 +60,15 @@\n     };\r\n \r\n     // Function: Handle Menu Click & Set default for every option that exists.\r\n     const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n-        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n+        console.log(item)\r\n+        setShowItemDetail(true);\r\n+        setSelectedItem(item);\r\n+        setShowEditData(false);\r\n         setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n     };\r\n+    \r\n \r\n     // Fuction: Change size in MenuItemSelected.jsx\r\n     const handleSizeChange = (size) => { setSelectedSize(size); };\r\n \r\n"
                },
                {
                    "date": 1740582697487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,12 +63,10 @@\n     const handleMenuClick = (item) => {\r\n         console.log(item)\r\n         setShowItemDetail(true);\r\n         setSelectedItem(item);\r\n-        setShowEditData(false);\r\n         setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n     };\r\n-    \r\n \r\n     // Fuction: Change size in MenuItemSelected.jsx\r\n     const handleSizeChange = (size) => { setSelectedSize(size); };\r\n \r\n"
                },
                {
                    "date": 1740582729694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,12 +60,15 @@\n     };\r\n \r\n     // Function: Handle Menu Click & Set default for every option that exists.\r\n     const handleMenuClick = (item) => {\r\n-        console.log(item)\r\n-        setShowItemDetail(true);\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n         setSelectedItem(item);\r\n-        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n+        setSelectedSize(item.sizePrices[0].size);\r\n+        \r\n+        if (isMobile) {\r\n+            setShowSelectedMenu(true);\r\n+        }\r\n     };\r\n \r\n     // Fuction: Change size in MenuItemSelected.jsx\r\n     const handleSizeChange = (size) => { setSelectedSize(size); };\r\n"
                },
                {
                    "date": 1740582920155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,8 +202,9 @@\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n                             setNote={setNote}\r\n                             ingredientRemain={ingredientRemain}\r\n+                            onClose={()=>setSelectedItem(false)}\r\n                         />\r\n                     ) : (\r\n                         <CartSummary\r\n                             cartItems={cartItems}\r\n"
                },
                {
                    "date": 1740582931050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,8 +252,9 @@\n                                 handleQuantityDecrease={handleQuantityDecrease}\r\n                                 handleConfirmAdd={handleConfirmAdd}\r\n                                 setNote={setNote}\r\n                                 ingredientRemain={ingredientRemain}\r\n+                                onClose={()=>setSelectedItem(false)}\r\n                             />\r\n                         ) : (\r\n                             <CartSummary\r\n                                 cartItems={cartItems}\r\n"
                },
                {
                    "date": 1740582988031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n                             setNote={setNote}\r\n                             ingredientRemain={ingredientRemain}\r\n-                            onClose={()=>setSelectedItem(false)}\r\n+                            onClose={()=>setShowSelectedMenu(true)}\r\n                         />\r\n                     ) : (\r\n                         <CartSummary\r\n                             cartItems={cartItems}\r\n"
                },
                {
                    "date": 1740583007041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,9 +202,9 @@\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n                             setNote={setNote}\r\n                             ingredientRemain={ingredientRemain}\r\n-                            onClose={()=>setShowSelectedMenu(true)}\r\n+                            onClose={()=>setSelectedItem(false)}\r\n                         />\r\n                     ) : (\r\n                         <CartSummary\r\n                             cartItems={cartItems}\r\n"
                },
                {
                    "date": 1740583439936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,20 +226,21 @@\n                         setShowSelectedMenu(false);\r\n                     }}\r\n                 >\r\n                     <Box\r\n-                        sx={{\r\n-                            backgroundColor: \"#fff\",\r\n-                            padding: \"15px\",\r\n-                            borderRadius: \"8px\",\r\n-                            maxWidth: \"90vw\",\r\n-                            height: \"80vh\",\r\n-                            margin: \"10vh auto\",\r\n-                            overflowY: \"auto\",\r\n-                            display: \"flex\",\r\n-                            flexDirection: \"column\",\r\n-                        }}\r\n-                    >\r\n+        sx={{\r\n+            position: \"fixed\",\r\n+            bottom: 0,\r\n+            left: 0,\r\n+            width: \"100%\",\r\n+            backgroundColor: \"#fff\",\r\n+            padding: \"10px\",\r\n+            boxShadow: \"0px -2px 10px rgba(0, 0, 0, 0.1)\",\r\n+            zIndex: 1000,\r\n+        }}\r\n+    >\r\n+        <CartSummary />\r\n+    </Box>\r\n                         {selectedItem ? (\r\n                             <MenuItemSelected\r\n                                 selectedItem={selectedItem}\r\n                                 selectedSize={selectedSize}\r\n"
                },
                {
                    "date": 1740583623744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n const OrderCreate = () => {\r\n     const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n     const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n \r\n-    const [showSelectedMenu, setShowSelectedMenu] = useState(false);\r\n+    const [showSelectedMenu, setShowSelectedMenu] = useState(false);    //ใช้สำหรับ Mobile\r\n+    const [showCartModal, setShowCartModal] = useState(false);          //ใช้สำหรับ Mobile\r\n \r\n     const [data, setData] = useState([]);\r\n     const [category, setCategory] = useState([]);\r\n     const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n@@ -226,21 +227,20 @@\n                         setShowSelectedMenu(false);\r\n                     }}\r\n                 >\r\n                     <Box\r\n-        sx={{\r\n-            position: \"fixed\",\r\n-            bottom: 0,\r\n-            left: 0,\r\n-            width: \"100%\",\r\n-            backgroundColor: \"#fff\",\r\n-            padding: \"10px\",\r\n-            boxShadow: \"0px -2px 10px rgba(0, 0, 0, 0.1)\",\r\n-            zIndex: 1000,\r\n-        }}\r\n-    >\r\n-        <CartSummary />\r\n-    </Box>\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n                         {selectedItem ? (\r\n                             <MenuItemSelected\r\n                                 selectedItem={selectedItem}\r\n                                 selectedSize={selectedSize}\r\n"
                },
                {
                    "date": 1740583655338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -154,38 +154,84 @@\n     // Function: Calculate total price of item(s) in cart.\r\n     const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n \r\n     return (\r\n+    <>\r\n+        {/* Box ของ MenuList */}\r\n+        <Box\r\n+            sx={{\r\n+                backgroundColor: \"#fff\",\r\n+                width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n+                height: \"100vh\",\r\n+                padding: \"20px\",\r\n+                borderRadius: \"8px\",\r\n+                overflowY: \"auto\",\r\n+                marginRight: \"10px\",\r\n+            }}\r\n+        >\r\n+            <MenuList_Order\r\n+                data={data}\r\n+                category={category}\r\n+                onMenuClick={handleMenuClick}\r\n+            />\r\n+        </Box>\r\n \r\n-        <>\r\n-            {/* Box ของ MenuList */}\r\n+        {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n+        {!isMobile && (\r\n             <Box\r\n                 sx={{\r\n                     backgroundColor: \"#fff\",\r\n-                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n+                    width: isTablet ? \"35%\" : \"25%\",\r\n                     height: \"100vh\",\r\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n-                    marginRight: \"10px\",\r\n+                    display: \"flex\",\r\n+                    flexDirection: \"column\",\r\n                 }}\r\n             >\r\n-                <MenuList_Order\r\n-                    data={data}\r\n-                    category={category}\r\n-                    onMenuClick={handleMenuClick}\r\n-                />\r\n+                {selectedItem ? (\r\n+                    <MenuItemSelected\r\n+                        selectedItem={selectedItem}\r\n+                        selectedSize={selectedSize}\r\n+                        quantity={quantity}\r\n+                        note={note}\r\n+                        selectedOptions={selectedOptions}\r\n+                        setSelectedOptions={setSelectedOptions}\r\n+                        handleSizeChange={handleSizeChange}\r\n+                        handleQuantityIncrease={handleQuantityIncrease}\r\n+                        handleQuantityDecrease={handleQuantityDecrease}\r\n+                        handleConfirmAdd={handleConfirmAdd}\r\n+                        setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n+                        onClose={() => setSelectedItem(false)}\r\n+                    />\r\n+                ) : (\r\n+                    <CartSummary\r\n+                        cartItems={cartItems}\r\n+                        totalPrice={totalPrice}\r\n+                        handleEditItem={handleEditItem}\r\n+                        handleRemoveItem={handleRemoveItem}\r\n+                        onSave={handleSaveData}\r\n+                    />\r\n+                )}\r\n             </Box>\r\n+        )}\r\n \r\n-            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n-            {!isMobile && (\r\n+        {/* Mobile - ใช้ Modal สำหรับ Selected Menu */}\r\n+        {isMobile && (\r\n+            <Modal\r\n+                open={showSelectedMenu}\r\n+                onClose={() => setShowSelectedMenu(false)}\r\n+            >\r\n                 <Box\r\n                     sx={{\r\n                         backgroundColor: \"#fff\",\r\n-                        width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n-                        height: \"100vh\",\r\n-                        padding: \"20px\",\r\n+                        padding: \"15px\",\r\n                         borderRadius: \"8px\",\r\n+                        maxWidth: \"90vw\",\r\n+                        height: \"80vh\",\r\n+                        margin: \"10vh auto\",\r\n                         overflowY: \"auto\",\r\n                         display: \"flex\",\r\n                         flexDirection: \"column\",\r\n                     }}\r\n@@ -195,81 +241,70 @@\n                             selectedItem={selectedItem}\r\n                             selectedSize={selectedSize}\r\n                             quantity={quantity}\r\n                             note={note}\r\n-                            selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                            setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n+                            selectedOptions={selectedOptions}\r\n+                            setSelectedOptions={setSelectedOptions}\r\n                             handleSizeChange={handleSizeChange}\r\n                             handleQuantityIncrease={handleQuantityIncrease}\r\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n                             setNote={setNote}\r\n                             ingredientRemain={ingredientRemain}\r\n-                            onClose={()=>setSelectedItem(false)}\r\n+                            onClose={() => setSelectedItem(null)}\r\n                         />\r\n-                    ) : (\r\n-                        <CartSummary\r\n-                            cartItems={cartItems}\r\n-                            totalPrice={totalPrice}\r\n-                            handleEditItem={handleEditItem}\r\n-                            handleRemoveItem={handleRemoveItem}\r\n-                            onSave={handleSaveData}\r\n-                        />\r\n-                    )}\r\n+                    ) : null}\r\n                 </Box>\r\n-            )}\r\n+            </Modal>\r\n+        )}\r\n \r\n-            {/* Mobile - ใช้ Modal */}\r\n-            {isMobile && (\r\n-                <Modal\r\n-                    open={showSelectedMenu}\r\n-                    onClose={() => {\r\n-                        console.log(\"Closing modal...\");\r\n-                        setShowSelectedMenu(false);\r\n+        {/* Mobile - กล่อง \"ตะกร้าของฉัน\" */}\r\n+        {isMobile && (\r\n+            <Box\r\n+                sx={{\r\n+                    position: \"fixed\",\r\n+                    bottom: 0,\r\n+                    left: 0,\r\n+                    width: \"100%\",\r\n+                    backgroundColor: \"#007bff\",\r\n+                    color: \"#fff\",\r\n+                    textAlign: \"center\",\r\n+                    padding: \"15px\",\r\n+                    fontSize: \"18px\",\r\n+                    cursor: \"pointer\",\r\n+                }}\r\n+                onClick={() => setShowCartModal(true)}\r\n+            >\r\n+                🛒 ตะกร้าของฉัน ({cartItems.length} รายการ)\r\n+            </Box>\r\n+        )}\r\n+\r\n+        {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n+        {isMobile && (\r\n+            <Modal open={showCartModal} onClose={() => setShowCartModal(false)}>\r\n+                <Box\r\n+                    sx={{\r\n+                        backgroundColor: \"#fff\",\r\n+                        padding: \"15px\",\r\n+                        borderRadius: \"8px\",\r\n+                        maxWidth: \"90vw\",\r\n+                        height: \"80vh\",\r\n+                        margin: \"10vh auto\",\r\n+                        overflowY: \"auto\",\r\n+                        display: \"flex\",\r\n+                        flexDirection: \"column\",\r\n                     }}\r\n                 >\r\n-                    <Box\r\n-                        sx={{\r\n-                            backgroundColor: \"#fff\",\r\n-                            padding: \"15px\",\r\n-                            borderRadius: \"8px\",\r\n-                            maxWidth: \"90vw\",\r\n-                            height: \"80vh\",\r\n-                            margin: \"10vh auto\",\r\n-                            overflowY: \"auto\",\r\n-                            display: \"flex\",\r\n-                            flexDirection: \"column\",\r\n-                        }}\r\n-                    >\r\n-                        {selectedItem ? (\r\n-                            <MenuItemSelected\r\n-                                selectedItem={selectedItem}\r\n-                                selectedSize={selectedSize}\r\n-                                quantity={quantity}\r\n-                                note={note}\r\n-                                selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n-                                setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n-                                handleSizeChange={handleSizeChange}\r\n-                                handleQuantityIncrease={handleQuantityIncrease}\r\n-                                handleQuantityDecrease={handleQuantityDecrease}\r\n-                                handleConfirmAdd={handleConfirmAdd}\r\n-                                setNote={setNote}\r\n-                                ingredientRemain={ingredientRemain}\r\n-                                onClose={()=>setSelectedItem(false)}\r\n-                            />\r\n-                        ) : (\r\n-                            <CartSummary\r\n-                                cartItems={cartItems}\r\n-                                totalPrice={totalPrice}\r\n-                                handleEditItem={handleEditItem}\r\n-                                handleRemoveItem={handleRemoveItem}\r\n-                                onSave={handleSaveData}\r\n-                            />\r\n-                        )}\r\n-                    </Box>\r\n-                </Modal>\r\n-            )}\r\n-        </>\r\n-    );\r\n-};\r\n+                    <CartSummary\r\n+                        cartItems={cartItems}\r\n+                        totalPrice={totalPrice}\r\n+                        handleEditItem={handleEditItem}\r\n+                        handleRemoveItem={handleRemoveItem}\r\n+                        onSave={handleSaveData}\r\n+                    />\r\n+                </Box>\r\n+            </Modal>\r\n+        )}\r\n+    </>\r\n+);\r\n \r\n export default OrderCreate;\r\n"
                },
                {
                    "date": 1740583661861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n     const handleMenuClick = (item) => {\r\n         console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n         setSelectedItem(item);\r\n         setSelectedSize(item.sizePrices[0].size);\r\n-        \r\n+\r\n         if (isMobile) {\r\n             setShowSelectedMenu(true);\r\n         }\r\n     };\r\n@@ -154,84 +154,37 @@\n     // Function: Calculate total price of item(s) in cart.\r\n     const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n \r\n     return (\r\n-    <>\r\n-        {/* Box ของ MenuList */}\r\n-        <Box\r\n-            sx={{\r\n-                backgroundColor: \"#fff\",\r\n-                width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n-                height: \"100vh\",\r\n-                padding: \"20px\",\r\n-                borderRadius: \"8px\",\r\n-                overflowY: \"auto\",\r\n-                marginRight: \"10px\",\r\n-            }}\r\n-        >\r\n-            <MenuList_Order\r\n-                data={data}\r\n-                category={category}\r\n-                onMenuClick={handleMenuClick}\r\n-            />\r\n-        </Box>\r\n-\r\n-        {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n-        {!isMobile && (\r\n+        <>\r\n+            {/* Box ของ MenuList */}\r\n             <Box\r\n                 sx={{\r\n                     backgroundColor: \"#fff\",\r\n-                    width: isTablet ? \"35%\" : \"25%\",\r\n+                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n                     height: \"100vh\",\r\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n-                    display: \"flex\",\r\n-                    flexDirection: \"column\",\r\n+                    marginRight: \"10px\",\r\n                 }}\r\n             >\r\n-                {selectedItem ? (\r\n-                    <MenuItemSelected\r\n-                        selectedItem={selectedItem}\r\n-                        selectedSize={selectedSize}\r\n-                        quantity={quantity}\r\n-                        note={note}\r\n-                        selectedOptions={selectedOptions}\r\n-                        setSelectedOptions={setSelectedOptions}\r\n-                        handleSizeChange={handleSizeChange}\r\n-                        handleQuantityIncrease={handleQuantityIncrease}\r\n-                        handleQuantityDecrease={handleQuantityDecrease}\r\n-                        handleConfirmAdd={handleConfirmAdd}\r\n-                        setNote={setNote}\r\n-                        ingredientRemain={ingredientRemain}\r\n-                        onClose={() => setSelectedItem(false)}\r\n-                    />\r\n-                ) : (\r\n-                    <CartSummary\r\n-                        cartItems={cartItems}\r\n-                        totalPrice={totalPrice}\r\n-                        handleEditItem={handleEditItem}\r\n-                        handleRemoveItem={handleRemoveItem}\r\n-                        onSave={handleSaveData}\r\n-                    />\r\n-                )}\r\n+                <MenuList_Order\r\n+                    data={data}\r\n+                    category={category}\r\n+                    onMenuClick={handleMenuClick}\r\n+                />\r\n             </Box>\r\n-        )}\r\n \r\n-        {/* Mobile - ใช้ Modal สำหรับ Selected Menu */}\r\n-        {isMobile && (\r\n-            <Modal\r\n-                open={showSelectedMenu}\r\n-                onClose={() => setShowSelectedMenu(false)}\r\n-            >\r\n+            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n+            {!isMobile && (\r\n                 <Box\r\n                     sx={{\r\n                         backgroundColor: \"#fff\",\r\n-                        padding: \"15px\",\r\n+                        width: isTablet ? \"35%\" : \"25%\",\r\n+                        height: \"100vh\",\r\n+                        padding: \"20px\",\r\n                         borderRadius: \"8px\",\r\n-                        maxWidth: \"90vw\",\r\n-                        height: \"80vh\",\r\n-                        margin: \"10vh auto\",\r\n                         overflowY: \"auto\",\r\n                         display: \"flex\",\r\n                         flexDirection: \"column\",\r\n                     }}\r\n@@ -249,62 +202,110 @@\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n                             setNote={setNote}\r\n                             ingredientRemain={ingredientRemain}\r\n-                            onClose={() => setSelectedItem(null)}\r\n+                            onClose={() => setSelectedItem(false)}\r\n                         />\r\n-                    ) : null}\r\n+                    ) : (\r\n+                        <CartSummary\r\n+                            cartItems={cartItems}\r\n+                            totalPrice={totalPrice}\r\n+                            handleEditItem={handleEditItem}\r\n+                            handleRemoveItem={handleRemoveItem}\r\n+                            onSave={handleSaveData}\r\n+                        />\r\n+                    )}\r\n                 </Box>\r\n-            </Modal>\r\n-        )}\r\n+            )}\r\n \r\n-        {/* Mobile - กล่อง \"ตะกร้าของฉัน\" */}\r\n-        {isMobile && (\r\n-            <Box\r\n-                sx={{\r\n-                    position: \"fixed\",\r\n-                    bottom: 0,\r\n-                    left: 0,\r\n-                    width: \"100%\",\r\n-                    backgroundColor: \"#007bff\",\r\n-                    color: \"#fff\",\r\n-                    textAlign: \"center\",\r\n-                    padding: \"15px\",\r\n-                    fontSize: \"18px\",\r\n-                    cursor: \"pointer\",\r\n-                }}\r\n-                onClick={() => setShowCartModal(true)}\r\n-            >\r\n-                🛒 ตะกร้าของฉัน ({cartItems.length} รายการ)\r\n-            </Box>\r\n-        )}\r\n+            {/* Mobile - ใช้ Modal สำหรับ Selected Menu */}\r\n+            {isMobile && (\r\n+                <Modal\r\n+                    open={showSelectedMenu}\r\n+                    onClose={() => setShowSelectedMenu(false)}\r\n+                >\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        {selectedItem ? (\r\n+                            <MenuItemSelected\r\n+                                selectedItem={selectedItem}\r\n+                                selectedSize={selectedSize}\r\n+                                quantity={quantity}\r\n+                                note={note}\r\n+                                selectedOptions={selectedOptions}\r\n+                                setSelectedOptions={setSelectedOptions}\r\n+                                handleSizeChange={handleSizeChange}\r\n+                                handleQuantityIncrease={handleQuantityIncrease}\r\n+                                handleQuantityDecrease={handleQuantityDecrease}\r\n+                                handleConfirmAdd={handleConfirmAdd}\r\n+                                setNote={setNote}\r\n+                                ingredientRemain={ingredientRemain}\r\n+                                onClose={() => setSelectedItem(null)}\r\n+                            />\r\n+                        ) : null}\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n \r\n-        {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n-        {isMobile && (\r\n-            <Modal open={showCartModal} onClose={() => setShowCartModal(false)}>\r\n+            {/* Mobile - กล่อง \"ตะกร้าของฉัน\" */}\r\n+            {isMobile && (\r\n                 <Box\r\n                     sx={{\r\n-                        backgroundColor: \"#fff\",\r\n+                        position: \"fixed\",\r\n+                        bottom: 0,\r\n+                        left: 0,\r\n+                        width: \"100%\",\r\n+                        backgroundColor: \"#007bff\",\r\n+                        color: \"#fff\",\r\n+                        textAlign: \"center\",\r\n                         padding: \"15px\",\r\n-                        borderRadius: \"8px\",\r\n-                        maxWidth: \"90vw\",\r\n-                        height: \"80vh\",\r\n-                        margin: \"10vh auto\",\r\n-                        overflowY: \"auto\",\r\n-                        display: \"flex\",\r\n-                        flexDirection: \"column\",\r\n+                        fontSize: \"18px\",\r\n+                        cursor: \"pointer\",\r\n                     }}\r\n+                    onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <CartSummary\r\n-                        cartItems={cartItems}\r\n-                        totalPrice={totalPrice}\r\n-                        handleEditItem={handleEditItem}\r\n-                        handleRemoveItem={handleRemoveItem}\r\n-                        onSave={handleSaveData}\r\n-                    />\r\n+                    🛒 ตะกร้าของฉัน ({cartItems.length} รายการ)\r\n                 </Box>\r\n-            </Modal>\r\n-        )}\r\n-    </>\r\n-);\r\n+            )}\r\n \r\n+            {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n+            {isMobile && (\r\n+                <Modal open={showCartModal} onClose={() => setShowCartModal(false)}>\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        <CartSummary\r\n+                            cartItems={cartItems}\r\n+                            totalPrice={totalPrice}\r\n+                            handleEditItem={handleEditItem}\r\n+                            handleRemoveItem={handleRemoveItem}\r\n+                            onSave={handleSaveData}\r\n+                        />\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n export default OrderCreate;\r\n"
                },
                {
                    "date": 1740583735926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -264,9 +264,9 @@\n                         position: \"fixed\",\r\n                         bottom: 0,\r\n                         left: 0,\r\n                         width: \"100%\",\r\n-                        backgroundColor: \"#007bff\",\r\n+                        backgroundColor: \"#64A2FF\",\r\n                         color: \"#fff\",\r\n                         textAlign: \"center\",\r\n                         padding: \"15px\",\r\n                         fontSize: \"18px\",\r\n"
                },
                {
                    "date": 1740583782218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n+import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n import MenuList_Order from './assets/MenuList_Order';\r\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n@@ -273,9 +274,9 @@\n                         cursor: \"pointer\",\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    🛒 ตะกร้าของฉัน ({cartItems.length} รายการ)\r\n+                    <ShoppingCartIcon /> ตะกร้าของฉัน ({cartItems.length} รายการ)\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740583793627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,9 +274,9 @@\n                         cursor: \"pointer\",\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <ShoppingCartIcon /> ตะกร้าของฉัน ({cartItems.length} รายการ)\r\n+                    <ShoppingCartIcon /> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740583814121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,9 +274,9 @@\n                         cursor: \"pointer\",\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <ShoppingCartIcon /> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                    <ShoppingCartIcon style={{justifyContent:\"center\"}}/> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740583827238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,312 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n+import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n+import MenuList_Order from './assets/MenuList_Order';\r\n+import MenuItemSelected from './assets/MenuItemSelected';\r\n+import CartSummary from './assets/CartSummary';\r\n+import './OrderCreate.css';\r\n+\r\n+const OrderCreate = () => {\r\n+    const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n+    const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n+\r\n+    const [showSelectedMenu, setShowSelectedMenu] = useState(false);    //ใช้สำหรับ Mobile\r\n+    const [showCartModal, setShowCartModal] = useState(false);          //ใช้สำหรับ Mobile\r\n+\r\n+    const [data, setData] = useState([]);\r\n+    const [category, setCategory] = useState([]);\r\n+    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n+    const [selectedItem, setSelectedItem] = useState(null);\r\n+    const [selectedSize, setSelectedSize] = useState('');\r\n+    const [quantity, setQuantity] = useState(1);\r\n+    const [selectedOptions, setSelectedOptions] = useState({});\r\n+    const [note, setNote] = useState('');\r\n+\r\n+    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n+\r\n+    // API: Fetch data from database\r\n+    useEffect(() => {\r\n+        axios.get('http://localhost:5000/api/foods')\r\n+            .then(res => { setData(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/add_menus/category')\r\n+            .then(res => { setCategory(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => {\r\n+                setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n+                console.log(\"Ingredient Remain : \", res.data)\r\n+            })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+    }, []);\r\n+\r\n+    //API: Add New Order\r\n+    const handleSaveData = async (orderData) => {\r\n+        try {\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+\r\n+            ingredientChange.map(async (acc) => {\r\n+                const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n+            });\r\n+\r\n+            console.log('Order saved:', response.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+        } catch (error) {\r\n+            console.error('Error saving order:', error);\r\n+        }\r\n+    };\r\n+\r\n+    // Function: Handle Menu Click & Set default for every option that exists.\r\n+    const handleMenuClick = (item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n+        setSelectedItem(item);\r\n+        setSelectedSize(item.sizePrices[0].size);\r\n+\r\n+        if (isMobile) {\r\n+            setShowSelectedMenu(true);\r\n+        }\r\n+    };\r\n+\r\n+    // Fuction: Change size in MenuItemSelected.jsx\r\n+    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n+\r\n+    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n+    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n+    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n+\r\n+    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n+    const handleConfirmAdd = () => {\r\n+        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n+\r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+\r\n+        console.log(\"ingredientRemain : \", ingredientRemain);\r\n+\r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n+            if (ingredient) {\r\n+                return {\r\n+                    ...acc,\r\n+                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n+                };\r\n+            }\r\n+            return acc; // Keep the original if no change\r\n+        });\r\n+\r\n+        const IngredientChangefilter = ingredientProcess.filter((acc, index) => acc.remain != ingredientChange[index].remain);\r\n+\r\n+        console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n+\r\n+        setIngredientChange(IngredientChangefilter);\r\n+        const newItem = {\r\n+            //id: selectedItem._id,\r\n+            name: selectedItem.name,\r\n+            size: selectedSize,\r\n+            price: selectedSizeData.price,\r\n+            quantity: quantity,\r\n+            note: note,\r\n+            selectedOptions: selectedOptions,\r\n+        };\r\n+        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n+\r\n+        setCartItems([...cartItems, newItem]);\r\n+\r\n+        setSelectedItem(null);\r\n+        setQuantity(1);\r\n+        setSelectedSize('')\r\n+        setSelectedOptions({});\r\n+        setNote('');\r\n+\r\n+    };\r\n+\r\n+    // Function: Remove Item (from cart)\r\n+    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n+\r\n+    // Function: Edit Item (in cart)\r\n+    const handleEditItem = (indexToEdit) => {\r\n+        const itemToEdit = cartItems[indexToEdit];\r\n+\r\n+        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n+        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n+\r\n+        setSelectedItem({\r\n+            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n+            size: itemToEdit.size,\r\n+            price: itemToEdit.price,\r\n+            quantity: itemToEdit.quantity,\r\n+            note: itemToEdit.note,\r\n+            selectedOptions: itemToEdit.selectedOptions || {},\r\n+        });\r\n+\r\n+        setSelectedSize(itemToEdit.size);\r\n+        setQuantity(itemToEdit.quantity);\r\n+        setNote(itemToEdit.note);\r\n+        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n+\r\n+        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n+        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n+    };\r\n+\r\n+    // Function: Calculate total price of item(s) in cart.\r\n+    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n+\r\n+    return (\r\n+        <>\r\n+            {/* Box ของ MenuList */}\r\n+            <Box\r\n+                sx={{\r\n+                    backgroundColor: \"#fff\",\r\n+                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n+                    height: \"100vh\",\r\n+                    padding: \"20px\",\r\n+                    borderRadius: \"8px\",\r\n+                    overflowY: \"auto\",\r\n+                    marginRight: \"10px\",\r\n+                }}\r\n+            >\r\n+                <MenuList_Order\r\n+                    data={data}\r\n+                    category={category}\r\n+                    onMenuClick={handleMenuClick}\r\n+                />\r\n+            </Box>\r\n+\r\n+            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n+            {!isMobile && (\r\n+                <Box\r\n+                    sx={{\r\n+                        backgroundColor: \"#fff\",\r\n+                        width: isTablet ? \"35%\" : \"25%\",\r\n+                        height: \"100vh\",\r\n+                        padding: \"20px\",\r\n+                        borderRadius: \"8px\",\r\n+                        overflowY: \"auto\",\r\n+                        display: \"flex\",\r\n+                        flexDirection: \"column\",\r\n+                    }}\r\n+                >\r\n+                    {selectedItem ? (\r\n+                        <MenuItemSelected\r\n+                            selectedItem={selectedItem}\r\n+                            selectedSize={selectedSize}\r\n+                            quantity={quantity}\r\n+                            note={note}\r\n+                            selectedOptions={selectedOptions}\r\n+                            setSelectedOptions={setSelectedOptions}\r\n+                            handleSizeChange={handleSizeChange}\r\n+                            handleQuantityIncrease={handleQuantityIncrease}\r\n+                            handleQuantityDecrease={handleQuantityDecrease}\r\n+                            handleConfirmAdd={handleConfirmAdd}\r\n+                            setNote={setNote}\r\n+                            ingredientRemain={ingredientRemain}\r\n+                            onClose={() => setSelectedItem(false)}\r\n+                        />\r\n+                    ) : (\r\n+                        <CartSummary\r\n+                            cartItems={cartItems}\r\n+                            totalPrice={totalPrice}\r\n+                            handleEditItem={handleEditItem}\r\n+                            handleRemoveItem={handleRemoveItem}\r\n+                            onSave={handleSaveData}\r\n+                        />\r\n+                    )}\r\n+                </Box>\r\n+            )}\r\n+\r\n+            {/* Mobile - ใช้ Modal สำหรับ Selected Menu */}\r\n+            {isMobile && (\r\n+                <Modal\r\n+                    open={showSelectedMenu}\r\n+                    onClose={() => setShowSelectedMenu(false)}\r\n+                >\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        {selectedItem ? (\r\n+                            <MenuItemSelected\r\n+                                selectedItem={selectedItem}\r\n+                                selectedSize={selectedSize}\r\n+                                quantity={quantity}\r\n+                                note={note}\r\n+                                selectedOptions={selectedOptions}\r\n+                                setSelectedOptions={setSelectedOptions}\r\n+                                handleSizeChange={handleSizeChange}\r\n+                                handleQuantityIncrease={handleQuantityIncrease}\r\n+                                handleQuantityDecrease={handleQuantityDecrease}\r\n+                                handleConfirmAdd={handleConfirmAdd}\r\n+                                setNote={setNote}\r\n+                                ingredientRemain={ingredientRemain}\r\n+                                onClose={() => setSelectedItem(null)}\r\n+                            />\r\n+                        ) : null}\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n+\r\n+            {/* Mobile - กล่อง \"ตะกร้าของฉัน\" */}\r\n+            {isMobile && (\r\n+                <Box\r\n+                    sx={{\r\n+                        position: \"fixed\",\r\n+                        bottom: 0,\r\n+                        left: 0,\r\n+                        width: \"100%\",\r\n+                        backgroundColor: \"#64A2FF\",\r\n+                        color: \"#fff\",\r\n+                        textAlign: \"center\",\r\n+                        padding: \"15px\",\r\n+                        fontSize: \"18px\",\r\n+                        cursor: \"pointer\",\r\n+                    }}\r\n+                    onClick={() => setShowCartModal(true)}\r\n+                >\r\n+                    <ShoppingCartIcon style={{justifyContent:\"center\", alignItems:\"center\"}}/> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                </Box>\r\n+            )}\r\n+\r\n+            {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n+            {isMobile && (\r\n+                <Modal open={showCartModal} onClose={() => setShowCartModal(false)}>\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        <CartSummary\r\n+                            cartItems={cartItems}\r\n+                            totalPrice={totalPrice}\r\n+                            handleEditItem={handleEditItem}\r\n+                            handleRemoveItem={handleRemoveItem}\r\n+                            onSave={handleSaveData}\r\n+                        />\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n+export default OrderCreate;\r\n"
                },
                {
                    "date": 1740583857336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,15 +268,16 @@\n                         width: \"100%\",\r\n                         backgroundColor: \"#64A2FF\",\r\n                         color: \"#fff\",\r\n                         textAlign: \"center\",\r\n+                        justifyContentL:\"center\",\r\n                         padding: \"15px\",\r\n                         fontSize: \"18px\",\r\n                         cursor: \"pointer\",\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n-                >\r\n-                    <ShoppingCartIcon style={{justifyContent:\"center\", alignItems:\"center\"}}/> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                >   \r\n+                    <ShoppingCartIcon /> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n@@ -309,316 +310,4 @@\n     );\r\n };\r\n \r\n export default OrderCreate;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n-import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n-import MenuList_Order from './assets/MenuList_Order';\r\n-import MenuItemSelected from './assets/MenuItemSelected';\r\n-import CartSummary from './assets/CartSummary';\r\n-import './OrderCreate.css';\r\n-\r\n-const OrderCreate = () => {\r\n-    const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n-    const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n-\r\n-    const [showSelectedMenu, setShowSelectedMenu] = useState(false);    //ใช้สำหรับ Mobile\r\n-    const [showCartModal, setShowCartModal] = useState(false);          //ใช้สำหรับ Mobile\r\n-\r\n-    const [data, setData] = useState([]);\r\n-    const [category, setCategory] = useState([]);\r\n-    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n-    const [selectedItem, setSelectedItem] = useState(null);\r\n-    const [selectedSize, setSelectedSize] = useState('');\r\n-    const [quantity, setQuantity] = useState(1);\r\n-    const [selectedOptions, setSelectedOptions] = useState({});\r\n-    const [note, setNote] = useState('');\r\n-\r\n-    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n-    const [ingredientChange, setIngredientChange] = useState([]);\r\n-\r\n-    // API: Fetch data from database\r\n-    useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/foods')\r\n-            .then(res => { setData(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/add_menus/category')\r\n-            .then(res => { setCategory(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => {\r\n-                setIngredientRemain(res.data)\r\n-                setIngredientChange(res.data)\r\n-                console.log(\"Ingredient Remain : \", res.data)\r\n-            })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-    }, []);\r\n-\r\n-    //API: Add New Order\r\n-    const handleSaveData = async (orderData) => {\r\n-        try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-\r\n-            ingredientChange.map(async (acc) => {\r\n-                const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n-            });\r\n-\r\n-            console.log('Order saved:', response.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n-        } catch (error) {\r\n-            console.error('Error saving order:', error);\r\n-        }\r\n-    };\r\n-\r\n-    // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n-        setSelectedItem(item);\r\n-        setSelectedSize(item.sizePrices[0].size);\r\n-\r\n-        if (isMobile) {\r\n-            setShowSelectedMenu(true);\r\n-        }\r\n-    };\r\n-\r\n-    // Fuction: Change size in MenuItemSelected.jsx\r\n-    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n-\r\n-    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n-    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n-    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n-\r\n-    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n-    const handleConfirmAdd = () => {\r\n-        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-\r\n-        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-\r\n-        console.log(\"ingredientRemain : \", ingredientRemain);\r\n-\r\n-        const ingredientProcess = ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n-            if (ingredient) {\r\n-                return {\r\n-                    ...acc,\r\n-                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n-                };\r\n-            }\r\n-            return acc; // Keep the original if no change\r\n-        });\r\n-\r\n-        const IngredientChangefilter = ingredientProcess.filter((acc, index) => acc.remain != ingredientChange[index].remain);\r\n-\r\n-        console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n-\r\n-        setIngredientChange(IngredientChangefilter);\r\n-        const newItem = {\r\n-            //id: selectedItem._id,\r\n-            name: selectedItem.name,\r\n-            size: selectedSize,\r\n-            price: selectedSizeData.price,\r\n-            quantity: quantity,\r\n-            note: note,\r\n-            selectedOptions: selectedOptions,\r\n-        };\r\n-        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n-\r\n-        setCartItems([...cartItems, newItem]);\r\n-\r\n-        setSelectedItem(null);\r\n-        setQuantity(1);\r\n-        setSelectedSize('')\r\n-        setSelectedOptions({});\r\n-        setNote('');\r\n-\r\n-    };\r\n-\r\n-    // Function: Remove Item (from cart)\r\n-    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n-\r\n-    // Function: Edit Item (in cart)\r\n-    const handleEditItem = (indexToEdit) => {\r\n-        const itemToEdit = cartItems[indexToEdit];\r\n-\r\n-        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n-        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-\r\n-        setSelectedItem({\r\n-            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n-            size: itemToEdit.size,\r\n-            price: itemToEdit.price,\r\n-            quantity: itemToEdit.quantity,\r\n-            note: itemToEdit.note,\r\n-            selectedOptions: itemToEdit.selectedOptions || {},\r\n-        });\r\n-\r\n-        setSelectedSize(itemToEdit.size);\r\n-        setQuantity(itemToEdit.quantity);\r\n-        setNote(itemToEdit.note);\r\n-        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-\r\n-        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n-        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n-    };\r\n-\r\n-    // Function: Calculate total price of item(s) in cart.\r\n-    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n-\r\n-    return (\r\n-        <>\r\n-            {/* Box ของ MenuList */}\r\n-            <Box\r\n-                sx={{\r\n-                    backgroundColor: \"#fff\",\r\n-                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n-                    height: \"100vh\",\r\n-                    padding: \"20px\",\r\n-                    borderRadius: \"8px\",\r\n-                    overflowY: \"auto\",\r\n-                    marginRight: \"10px\",\r\n-                }}\r\n-            >\r\n-                <MenuList_Order\r\n-                    data={data}\r\n-                    category={category}\r\n-                    onMenuClick={handleMenuClick}\r\n-                />\r\n-            </Box>\r\n-\r\n-            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n-            {!isMobile && (\r\n-                <Box\r\n-                    sx={{\r\n-                        backgroundColor: \"#fff\",\r\n-                        width: isTablet ? \"35%\" : \"25%\",\r\n-                        height: \"100vh\",\r\n-                        padding: \"20px\",\r\n-                        borderRadius: \"8px\",\r\n-                        overflowY: \"auto\",\r\n-                        display: \"flex\",\r\n-                        flexDirection: \"column\",\r\n-                    }}\r\n-                >\r\n-                    {selectedItem ? (\r\n-                        <MenuItemSelected\r\n-                            selectedItem={selectedItem}\r\n-                            selectedSize={selectedSize}\r\n-                            quantity={quantity}\r\n-                            note={note}\r\n-                            selectedOptions={selectedOptions}\r\n-                            setSelectedOptions={setSelectedOptions}\r\n-                            handleSizeChange={handleSizeChange}\r\n-                            handleQuantityIncrease={handleQuantityIncrease}\r\n-                            handleQuantityDecrease={handleQuantityDecrease}\r\n-                            handleConfirmAdd={handleConfirmAdd}\r\n-                            setNote={setNote}\r\n-                            ingredientRemain={ingredientRemain}\r\n-                            onClose={() => setSelectedItem(false)}\r\n-                        />\r\n-                    ) : (\r\n-                        <CartSummary\r\n-                            cartItems={cartItems}\r\n-                            totalPrice={totalPrice}\r\n-                            handleEditItem={handleEditItem}\r\n-                            handleRemoveItem={handleRemoveItem}\r\n-                            onSave={handleSaveData}\r\n-                        />\r\n-                    )}\r\n-                </Box>\r\n-            )}\r\n-\r\n-            {/* Mobile - ใช้ Modal สำหรับ Selected Menu */}\r\n-            {isMobile && (\r\n-                <Modal\r\n-                    open={showSelectedMenu}\r\n-                    onClose={() => setShowSelectedMenu(false)}\r\n-                >\r\n-                    <Box\r\n-                        sx={{\r\n-                            backgroundColor: \"#fff\",\r\n-                            padding: \"15px\",\r\n-                            borderRadius: \"8px\",\r\n-                            maxWidth: \"90vw\",\r\n-                            height: \"80vh\",\r\n-                            margin: \"10vh auto\",\r\n-                            overflowY: \"auto\",\r\n-                            display: \"flex\",\r\n-                            flexDirection: \"column\",\r\n-                        }}\r\n-                    >\r\n-                        {selectedItem ? (\r\n-                            <MenuItemSelected\r\n-                                selectedItem={selectedItem}\r\n-                                selectedSize={selectedSize}\r\n-                                quantity={quantity}\r\n-                                note={note}\r\n-                                selectedOptions={selectedOptions}\r\n-                                setSelectedOptions={setSelectedOptions}\r\n-                                handleSizeChange={handleSizeChange}\r\n-                                handleQuantityIncrease={handleQuantityIncrease}\r\n-                                handleQuantityDecrease={handleQuantityDecrease}\r\n-                                handleConfirmAdd={handleConfirmAdd}\r\n-                                setNote={setNote}\r\n-                                ingredientRemain={ingredientRemain}\r\n-                                onClose={() => setSelectedItem(null)}\r\n-                            />\r\n-                        ) : null}\r\n-                    </Box>\r\n-                </Modal>\r\n-            )}\r\n-\r\n-            {/* Mobile - กล่อง \"ตะกร้าของฉัน\" */}\r\n-            {isMobile && (\r\n-                <Box\r\n-                    sx={{\r\n-                        position: \"fixed\",\r\n-                        bottom: 0,\r\n-                        left: 0,\r\n-                        width: \"100%\",\r\n-                        backgroundColor: \"#64A2FF\",\r\n-                        color: \"#fff\",\r\n-                        textAlign: \"center\",\r\n-                        padding: \"15px\",\r\n-                        fontSize: \"18px\",\r\n-                        cursor: \"pointer\",\r\n-                    }}\r\n-                    onClick={() => setShowCartModal(true)}\r\n-                >\r\n-                    <ShoppingCartIcon style={{justifyContent:\"center\"}}/> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n-                </Box>\r\n-            )}\r\n-\r\n-            {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n-            {isMobile && (\r\n-                <Modal open={showCartModal} onClose={() => setShowCartModal(false)}>\r\n-                    <Box\r\n-                        sx={{\r\n-                            backgroundColor: \"#fff\",\r\n-                            padding: \"15px\",\r\n-                            borderRadius: \"8px\",\r\n-                            maxWidth: \"90vw\",\r\n-                            height: \"80vh\",\r\n-                            margin: \"10vh auto\",\r\n-                            overflowY: \"auto\",\r\n-                            display: \"flex\",\r\n-                            flexDirection: \"column\",\r\n-                        }}\r\n-                    >\r\n-                        <CartSummary\r\n-                            cartItems={cartItems}\r\n-                            totalPrice={totalPrice}\r\n-                            handleEditItem={handleEditItem}\r\n-                            handleRemoveItem={handleRemoveItem}\r\n-                            onSave={handleSaveData}\r\n-                        />\r\n-                    </Box>\r\n-                </Modal>\r\n-            )}\r\n-        </>\r\n-    );\r\n-};\r\n-\r\n-export default OrderCreate;\r\n"
                },
                {
                    "date": 1740583905636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,15 +268,18 @@\n                         width: \"100%\",\r\n                         backgroundColor: \"#64A2FF\",\r\n                         color: \"#fff\",\r\n                         textAlign: \"center\",\r\n-                        justifyContentL:\"center\",\r\n+                        justifyContentL: \"center\",\r\n                         padding: \"15px\",\r\n                         fontSize: \"18px\",\r\n                         cursor: \"pointer\",\r\n+                        display: \"flex\",\r\n+                        alignItems: \"center\",\r\n+                        justifyContent: \"center\"\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n-                >   \r\n+                >\r\n                     <ShoppingCartIcon /> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n"
                },
                {
                    "date": 1740583922411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,9 +278,9 @@\n                         justifyContent: \"center\"\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <ShoppingCartIcon /> <span>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                    <ShoppingCartIcon /> <span marginLeft=\"8px\">ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740583935988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,9 +278,9 @@\n                         justifyContent: \"center\"\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <ShoppingCartIcon /> <span marginLeft=\"8px\">ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                    <ShoppingCartIcon /> <span style={{marginLeft:\"8px\"}}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740584288087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,12 @@\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n \r\n-        const IngredientChangefilter = ingredientProcess.filter((acc, index) => acc.remain != ingredientChange[index].remain);\r\n+        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {\r\n+            const changeItem = ingredientChange?.[index] ?? {}; // ให้ค่าเริ่มต้นเป็น {} แทน undefined\r\n+            return acc.remain !== changeItem.remain;\r\n+        });\r\n \r\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n \r\n         setIngredientChange(IngredientChangefilter);\r\n"
                },
                {
                    "date": 1740602339773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,19 @@\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n \r\n+        {/* const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n+            if (ingredient) {\r\n+                return {\r\n+                    ...acc,\r\n+                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n+                };\r\n+            }\r\n+            return acc; // Keep the original if no change\r\n+        }); */}\r\n+\r\n         const IngredientChangefilter = ingredientProcess.filter((acc, index) => {\r\n             const changeItem = ingredientChange?.[index] ?? {}; // ให้ค่าเริ่มต้นเป็น {} แทน undefined\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n"
                },
                {
                    "date": 1740602387687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,19 +97,8 @@\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n \r\n-        {/* const ingredientProcess = ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n-            if (ingredient) {\r\n-                return {\r\n-                    ...acc,\r\n-                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n-                };\r\n-            }\r\n-            return acc; // Keep the original if no change\r\n-        }); */}\r\n-\r\n         const IngredientChangefilter = ingredientProcess.filter((acc, index) => {\r\n             const changeItem = ingredientChange?.[index] ?? {}; // ให้ค่าเริ่มต้นเป็น {} แทน undefined\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n"
                },
                {
                    "date": 1740602734647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,18 +61,15 @@\n         }\r\n     };\r\n \r\n     // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n+    const handleMenuClick = useCallback((item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item);\r\n         setSelectedItem(item);\r\n         setSelectedSize(item.sizePrices[0].size);\r\n+        if (isMobile) setShowSelectedMenu(true);\r\n+    }, [isMobile]);\r\n \r\n-        if (isMobile) {\r\n-            setShowSelectedMenu(true);\r\n-        }\r\n-    };\r\n-\r\n     // Fuction: Change size in MenuItemSelected.jsx\r\n     const handleSizeChange = (size) => { setSelectedSize(size); };\r\n \r\n     // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n"
                },
                {
                    "date": 1740602741668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,9 +278,9 @@\n                         justifyContent: \"center\"\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <ShoppingCartIcon /> <span style={{marginLeft:\"8px\"}}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                    <ShoppingCartIcon /> <span style={{ marginLeft: \"8px\" }}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740602751625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,15 +61,18 @@\n         }\r\n     };\r\n \r\n     // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = useCallback((item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item);\r\n+    const handleMenuClick = (item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n         setSelectedItem(item);\r\n         setSelectedSize(item.sizePrices[0].size);\r\n-        if (isMobile) setShowSelectedMenu(true);\r\n-    }, [isMobile]);\r\n \r\n+        if (isMobile) {\r\n+            setShowSelectedMenu(true);\r\n+        }\r\n+    };\r\n+\r\n     // Fuction: Change size in MenuItemSelected.jsx\r\n     const handleSizeChange = (size) => { setSelectedSize(size); };\r\n \r\n     // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n@@ -278,9 +281,9 @@\n                         justifyContent: \"center\"\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <ShoppingCartIcon /> <span style={{ marginLeft: \"8px\" }}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                    <ShoppingCartIcon /> <span style={{marginLeft:\"8px\"}}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740602757821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,12 +65,9 @@\n     const handleMenuClick = (item) => {\r\n         console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n         setSelectedItem(item);\r\n         setSelectedSize(item.sizePrices[0].size);\r\n-\r\n-        if (isMobile) {\r\n-            setShowSelectedMenu(true);\r\n-        }\r\n+        if (isMobile) {setShowSelectedMenu(true);}\r\n     };\r\n \r\n     // Fuction: Change size in MenuItemSelected.jsx\r\n     const handleSizeChange = (size) => { setSelectedSize(size); };\r\n"
                },
                {
                    "date": 1740602811102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,9 @@\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n                             setNote={setNote}\r\n                             ingredientRemain={ingredientRemain}\r\n-                            onClose={() => setSelectedItem(false)}\r\n+                            onClose={() => setSelectedItem(null)}\r\n                         />\r\n                     ) : (\r\n                         <CartSummary\r\n                             cartItems={cartItems}\r\n"
                },
                {
                    "date": 1740602911836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,12 @@\n                             handleQuantityDecrease={handleQuantityDecrease}\r\n                             handleConfirmAdd={handleConfirmAdd}\r\n                             setNote={setNote}\r\n                             ingredientRemain={ingredientRemain}\r\n-                            onClose={() => setSelectedItem(null)}\r\n+                            onClose={() => {\r\n+                                console.log(\"Closing MenuItemSelected...\");\r\n+                                setSelectedItem(null);\r\n+                            }}\r\n                         />\r\n                     ) : (\r\n                         <CartSummary\r\n                             cartItems={cartItems}\r\n"
                },
                {
                    "date": 1740602945936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,319 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n+import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n+import MenuList_Order from './assets/MenuList_Order';\r\n+import MenuItemSelected from './assets/MenuItemSelected';\r\n+import CartSummary from './assets/CartSummary';\r\n+import './OrderCreate.css';\r\n+\r\n+const OrderCreate = () => {\r\n+    const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n+    const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n+\r\n+    const [showSelectedMenu, setShowSelectedMenu] = useState(false);    //ใช้สำหรับ Mobile\r\n+    const [showCartModal, setShowCartModal] = useState(false);          //ใช้สำหรับ Mobile\r\n+\r\n+    const [data, setData] = useState([]);\r\n+    const [category, setCategory] = useState([]);\r\n+    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n+    const [selectedItem, setSelectedItem] = useState(null);\r\n+    const [selectedSize, setSelectedSize] = useState('');\r\n+    const [quantity, setQuantity] = useState(1);\r\n+    const [selectedOptions, setSelectedOptions] = useState({});\r\n+    const [note, setNote] = useState('');\r\n+\r\n+    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n+    const [ingredientChange, setIngredientChange] = useState([]);\r\n+\r\n+    // API: Fetch data from database\r\n+    useEffect(() => {\r\n+        axios.get('http://localhost:5000/api/foods')\r\n+            .then(res => { setData(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/add_menus/category')\r\n+            .then(res => { setCategory(res.data) })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => {\r\n+                setIngredientRemain(res.data)\r\n+                setIngredientChange(res.data)\r\n+                console.log(\"Ingredient Remain : \", res.data)\r\n+            })\r\n+            .catch(err => console.error('Error fetching :', err));\r\n+    }, []);\r\n+\r\n+    //API: Add New Order\r\n+    const handleSaveData = async (orderData) => {\r\n+        try {\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n+            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n+\r\n+            ingredientChange.map(async (acc) => {\r\n+                const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n+            });\r\n+\r\n+            console.log('Order saved:', response.data);\r\n+            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+        } catch (error) {\r\n+            console.error('Error saving order:', error);\r\n+        }\r\n+    };\r\n+\r\n+    // Function: Handle Menu Click & Set default for every option that exists.\r\n+    const handleMenuClick = (item) => {\r\n+        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n+        setSelectedItem(item);\r\n+        setSelectedSize(item.sizePrices[0].size);\r\n+        if (isMobile) {setShowSelectedMenu(true);}\r\n+    };\r\n+\r\n+    // Fuction: Change size in MenuItemSelected.jsx\r\n+    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n+\r\n+    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n+    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n+    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n+\r\n+    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n+    const handleConfirmAdd = () => {\r\n+        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n+\r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n+\r\n+        console.log(\"ingredientRemain : \", ingredientRemain);\r\n+\r\n+        const ingredientProcess = ingredientRemain.map((acc) => {\r\n+            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n+            if (ingredient) {\r\n+                return {\r\n+                    ...acc,\r\n+                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n+                };\r\n+            }\r\n+            return acc; // Keep the original if no change\r\n+        });\r\n+\r\n+        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {\r\n+            const changeItem = ingredientChange?.[index] ?? {}; // ให้ค่าเริ่มต้นเป็น {} แทน undefined\r\n+            return acc.remain !== changeItem.remain;\r\n+        });\r\n+\r\n+        console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n+\r\n+        setIngredientChange(IngredientChangefilter);\r\n+        const newItem = {\r\n+            //id: selectedItem._id,\r\n+            name: selectedItem.name,\r\n+            size: selectedSize,\r\n+            price: selectedSizeData.price,\r\n+            quantity: quantity,\r\n+            note: note,\r\n+            selectedOptions: selectedOptions,\r\n+        };\r\n+        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n+\r\n+        setCartItems(prevCartItems => [...prevCartItems, newItem]);\r\n+\r\n+        setSelectedItem(null);\r\n+        setQuantity(1);\r\n+        setSelectedSize('')\r\n+        setSelectedOptions({});\r\n+        setNote('');\r\n+\r\n+    };\r\n+\r\n+    // Function: Remove Item (from cart)\r\n+    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n+\r\n+    // Function: Edit Item (in cart)\r\n+    const handleEditItem = (indexToEdit) => {\r\n+        const itemToEdit = cartItems[indexToEdit];\r\n+\r\n+        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n+        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n+\r\n+        setSelectedItem({\r\n+            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n+            size: itemToEdit.size,\r\n+            price: itemToEdit.price,\r\n+            quantity: itemToEdit.quantity,\r\n+            note: itemToEdit.note,\r\n+            selectedOptions: itemToEdit.selectedOptions || {},\r\n+        });\r\n+\r\n+        setSelectedSize(itemToEdit.size);\r\n+        setQuantity(itemToEdit.quantity);\r\n+        setNote(itemToEdit.note);\r\n+        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n+\r\n+        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n+        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n+    };\r\n+\r\n+    // Function: Calculate total price of item(s) in cart.\r\n+    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n+\r\n+    return (\r\n+        <>\r\n+            {/* Box ของ MenuList */}\r\n+            <Box\r\n+                sx={{\r\n+                    backgroundColor: \"#fff\",\r\n+                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n+                    height: \"100vh\",\r\n+                    padding: \"20px\",\r\n+                    borderRadius: \"8px\",\r\n+                    overflowY: \"auto\",\r\n+                    marginRight: \"10px\",\r\n+                }}\r\n+            >\r\n+                <MenuList_Order\r\n+                    data={data}\r\n+                    category={category}\r\n+                    onMenuClick={handleMenuClick}\r\n+                />\r\n+            </Box>\r\n+\r\n+            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n+            {!isMobile && (\r\n+                <Box\r\n+                    sx={{\r\n+                        backgroundColor: \"#fff\",\r\n+                        width: isTablet ? \"35%\" : \"25%\",\r\n+                        height: \"100vh\",\r\n+                        padding: \"20px\",\r\n+                        borderRadius: \"8px\",\r\n+                        overflowY: \"auto\",\r\n+                        display: \"flex\",\r\n+                        flexDirection: \"column\",\r\n+                    }}\r\n+                >\r\n+                    {selectedItem ? (\r\n+                        <MenuItemSelected\r\n+                            selectedItem={selectedItem}\r\n+                            selectedSize={selectedSize}\r\n+                            quantity={quantity}\r\n+                            note={note}\r\n+                            selectedOptions={selectedOptions}\r\n+                            setSelectedOptions={setSelectedOptions}\r\n+                            handleSizeChange={handleSizeChange}\r\n+                            handleQuantityIncrease={handleQuantityIncrease}\r\n+                            handleQuantityDecrease={handleQuantityDecrease}\r\n+                            handleConfirmAdd={handleConfirmAdd}\r\n+                            setNote={setNote}\r\n+                            ingredientRemain={ingredientRemain}\r\n+                            onClose={() => {\r\n+                                console.log(\"Closing MenuItemSelected...\");\r\n+                                setSelectedItem(null);\r\n+                            }}\r\n+                        />\r\n+                    ) : (\r\n+                        <CartSummary\r\n+                            cartItems={cartItems}\r\n+                            totalPrice={totalPrice}\r\n+                            handleEditItem={handleEditItem}\r\n+                            handleRemoveItem={handleRemoveItem}\r\n+                            onSave={handleSaveData}\r\n+                        />\r\n+                    )}\r\n+                </Box>\r\n+            )}\r\n+\r\n+            {/* Mobile - ใช้ Modal สำหรับ Selected Menu */}\r\n+            {isMobile && (\r\n+                <Modal\r\n+                    open={showSelectedMenu}\r\n+                    onClose={() => setShowSelectedMenu(false)}\r\n+                >\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        {selectedItem ? (\r\n+                            <MenuItemSelected\r\n+                                selectedItem={selectedItem}\r\n+                                selectedSize={selectedSize}\r\n+                                quantity={quantity}\r\n+                                note={note}\r\n+                                selectedOptions={selectedOptions}\r\n+                                setSelectedOptions={setSelectedOptions}\r\n+                                handleSizeChange={handleSizeChange}\r\n+                                handleQuantityIncrease={handleQuantityIncrease}\r\n+                                handleQuantityDecrease={handleQuantityDecrease}\r\n+                                handleConfirmAdd={handleConfirmAdd}\r\n+                                setNote={setNote}\r\n+                                ingredientRemain={ingredientRemain}\r\n+                                onClose={() => setSelectedItem(null)}\r\n+                            />\r\n+                        ) : null}\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n+\r\n+            {/* Mobile - กล่อง \"ตะกร้าของฉัน\" */}\r\n+            {isMobile && (\r\n+                <Box\r\n+                    sx={{\r\n+                        position: \"fixed\",\r\n+                        bottom: 0,\r\n+                        left: 0,\r\n+                        width: \"100%\",\r\n+                        backgroundColor: \"#64A2FF\",\r\n+                        color: \"#fff\",\r\n+                        textAlign: \"center\",\r\n+                        justifyContentL: \"center\",\r\n+                        padding: \"15px\",\r\n+                        fontSize: \"18px\",\r\n+                        cursor: \"pointer\",\r\n+                        display: \"flex\",\r\n+                        alignItems: \"center\",\r\n+                        justifyContent: \"center\"\r\n+                    }}\r\n+                    onClick={() => setShowCartModal(true)}\r\n+                >\r\n+                    <ShoppingCartIcon /> <span style={{marginLeft:\"8px\"}}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                </Box>\r\n+            )}\r\n+\r\n+            {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n+            {isMobile && (\r\n+                <Modal open={showCartModal} onClose={() => setShowCartModal(false)}>\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        <CartSummary\r\n+                            cartItems={cartItems}\r\n+                            totalPrice={totalPrice}\r\n+                            handleEditItem={handleEditItem}\r\n+                            handleRemoveItem={handleRemoveItem}\r\n+                            onSave={handleSaveData}\r\n+                        />\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n+export default OrderCreate;\r\n"
                },
                {
                    "date": 1740602967875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,327 +113,8 @@\n             selectedOptions: selectedOptions,\r\n         };\r\n         console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n \r\n-        setCartItems(prevCartItems => [...prevCartItems, newItem]);\r\n-\r\n-        setSelectedItem(null);\r\n-        setQuantity(1);\r\n-        setSelectedSize('')\r\n-        setSelectedOptions({});\r\n-        setNote('');\r\n-\r\n-    };\r\n-\r\n-    // Function: Remove Item (from cart)\r\n-    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n-\r\n-    // Function: Edit Item (in cart)\r\n-    const handleEditItem = (indexToEdit) => {\r\n-        const itemToEdit = cartItems[indexToEdit];\r\n-\r\n-        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n-        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-\r\n-        setSelectedItem({\r\n-            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n-            size: itemToEdit.size,\r\n-            price: itemToEdit.price,\r\n-            quantity: itemToEdit.quantity,\r\n-            note: itemToEdit.note,\r\n-            selectedOptions: itemToEdit.selectedOptions || {},\r\n-        });\r\n-\r\n-        setSelectedSize(itemToEdit.size);\r\n-        setQuantity(itemToEdit.quantity);\r\n-        setNote(itemToEdit.note);\r\n-        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-\r\n-        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n-        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n-    };\r\n-\r\n-    // Function: Calculate total price of item(s) in cart.\r\n-    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n-\r\n-    return (\r\n-        <>\r\n-            {/* Box ของ MenuList */}\r\n-            <Box\r\n-                sx={{\r\n-                    backgroundColor: \"#fff\",\r\n-                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n-                    height: \"100vh\",\r\n-                    padding: \"20px\",\r\n-                    borderRadius: \"8px\",\r\n-                    overflowY: \"auto\",\r\n-                    marginRight: \"10px\",\r\n-                }}\r\n-            >\r\n-                <MenuList_Order\r\n-                    data={data}\r\n-                    category={category}\r\n-                    onMenuClick={handleMenuClick}\r\n-                />\r\n-            </Box>\r\n-\r\n-            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n-            {!isMobile && (\r\n-                <Box\r\n-                    sx={{\r\n-                        backgroundColor: \"#fff\",\r\n-                        width: isTablet ? \"35%\" : \"25%\",\r\n-                        height: \"100vh\",\r\n-                        padding: \"20px\",\r\n-                        borderRadius: \"8px\",\r\n-                        overflowY: \"auto\",\r\n-                        display: \"flex\",\r\n-                        flexDirection: \"column\",\r\n-                    }}\r\n-                >\r\n-                    {selectedItem ? (\r\n-                        <MenuItemSelected\r\n-                            selectedItem={selectedItem}\r\n-                            selectedSize={selectedSize}\r\n-                            quantity={quantity}\r\n-                            note={note}\r\n-                            selectedOptions={selectedOptions}\r\n-                            setSelectedOptions={setSelectedOptions}\r\n-                            handleSizeChange={handleSizeChange}\r\n-                            handleQuantityIncrease={handleQuantityIncrease}\r\n-                            handleQuantityDecrease={handleQuantityDecrease}\r\n-                            handleConfirmAdd={handleConfirmAdd}\r\n-                            setNote={setNote}\r\n-                            ingredientRemain={ingredientRemain}\r\n-                            onClose={() => {\r\n-                                console.log(\"Closing MenuItemSelected...\");\r\n-                                setSelectedItem(null);\r\n-                            }}\r\n-                        />\r\n-                    ) : (\r\n-                        <CartSummary\r\n-                            cartItems={cartItems}\r\n-                            totalPrice={totalPrice}\r\n-                            handleEditItem={handleEditItem}\r\n-                            handleRemoveItem={handleRemoveItem}\r\n-                            onSave={handleSaveData}\r\n-                        />\r\n-                    )}\r\n-                </Box>\r\n-            )}\r\n-\r\n-            {/* Mobile - ใช้ Modal สำหรับ Selected Menu */}\r\n-            {isMobile && (\r\n-                <Modal\r\n-                    open={showSelectedMenu}\r\n-                    onClose={() => setShowSelectedMenu(false)}\r\n-                >\r\n-                    <Box\r\n-                        sx={{\r\n-                            backgroundColor: \"#fff\",\r\n-                            padding: \"15px\",\r\n-                            borderRadius: \"8px\",\r\n-                            maxWidth: \"90vw\",\r\n-                            height: \"80vh\",\r\n-                            margin: \"10vh auto\",\r\n-                            overflowY: \"auto\",\r\n-                            display: \"flex\",\r\n-                            flexDirection: \"column\",\r\n-                        }}\r\n-                    >\r\n-                        {selectedItem ? (\r\n-                            <MenuItemSelected\r\n-                                selectedItem={selectedItem}\r\n-                                selectedSize={selectedSize}\r\n-                                quantity={quantity}\r\n-                                note={note}\r\n-                                selectedOptions={selectedOptions}\r\n-                                setSelectedOptions={setSelectedOptions}\r\n-                                handleSizeChange={handleSizeChange}\r\n-                                handleQuantityIncrease={handleQuantityIncrease}\r\n-                                handleQuantityDecrease={handleQuantityDecrease}\r\n-                                handleConfirmAdd={handleConfirmAdd}\r\n-                                setNote={setNote}\r\n-                                ingredientRemain={ingredientRemain}\r\n-                                onClose={() => setSelectedItem(null)}\r\n-                            />\r\n-                        ) : null}\r\n-                    </Box>\r\n-                </Modal>\r\n-            )}\r\n-\r\n-            {/* Mobile - กล่อง \"ตะกร้าของฉัน\" */}\r\n-            {isMobile && (\r\n-                <Box\r\n-                    sx={{\r\n-                        position: \"fixed\",\r\n-                        bottom: 0,\r\n-                        left: 0,\r\n-                        width: \"100%\",\r\n-                        backgroundColor: \"#64A2FF\",\r\n-                        color: \"#fff\",\r\n-                        textAlign: \"center\",\r\n-                        justifyContentL: \"center\",\r\n-                        padding: \"15px\",\r\n-                        fontSize: \"18px\",\r\n-                        cursor: \"pointer\",\r\n-                        display: \"flex\",\r\n-                        alignItems: \"center\",\r\n-                        justifyContent: \"center\"\r\n-                    }}\r\n-                    onClick={() => setShowCartModal(true)}\r\n-                >\r\n-                    <ShoppingCartIcon /> <span style={{marginLeft:\"8px\"}}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n-                </Box>\r\n-            )}\r\n-\r\n-            {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n-            {isMobile && (\r\n-                <Modal open={showCartModal} onClose={() => setShowCartModal(false)}>\r\n-                    <Box\r\n-                        sx={{\r\n-                            backgroundColor: \"#fff\",\r\n-                            padding: \"15px\",\r\n-                            borderRadius: \"8px\",\r\n-                            maxWidth: \"90vw\",\r\n-                            height: \"80vh\",\r\n-                            margin: \"10vh auto\",\r\n-                            overflowY: \"auto\",\r\n-                            display: \"flex\",\r\n-                            flexDirection: \"column\",\r\n-                        }}\r\n-                    >\r\n-                        <CartSummary\r\n-                            cartItems={cartItems}\r\n-                            totalPrice={totalPrice}\r\n-                            handleEditItem={handleEditItem}\r\n-                            handleRemoveItem={handleRemoveItem}\r\n-                            onSave={handleSaveData}\r\n-                        />\r\n-                    </Box>\r\n-                </Modal>\r\n-            )}\r\n-        </>\r\n-    );\r\n-};\r\n-\r\n-export default OrderCreate;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n-import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\n-import MenuList_Order from './assets/MenuList_Order';\r\n-import MenuItemSelected from './assets/MenuItemSelected';\r\n-import CartSummary from './assets/CartSummary';\r\n-import './OrderCreate.css';\r\n-\r\n-const OrderCreate = () => {\r\n-    const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n-    const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n-\r\n-    const [showSelectedMenu, setShowSelectedMenu] = useState(false);    //ใช้สำหรับ Mobile\r\n-    const [showCartModal, setShowCartModal] = useState(false);          //ใช้สำหรับ Mobile\r\n-\r\n-    const [data, setData] = useState([]);\r\n-    const [category, setCategory] = useState([]);\r\n-    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n-    const [selectedItem, setSelectedItem] = useState(null);\r\n-    const [selectedSize, setSelectedSize] = useState('');\r\n-    const [quantity, setQuantity] = useState(1);\r\n-    const [selectedOptions, setSelectedOptions] = useState({});\r\n-    const [note, setNote] = useState('');\r\n-\r\n-    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n-    const [ingredientChange, setIngredientChange] = useState([]);\r\n-\r\n-    // API: Fetch data from database\r\n-    useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/foods')\r\n-            .then(res => { setData(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/add_menus/category')\r\n-            .then(res => { setCategory(res.data) })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-        axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => {\r\n-                setIngredientRemain(res.data)\r\n-                setIngredientChange(res.data)\r\n-                console.log(\"Ingredient Remain : \", res.data)\r\n-            })\r\n-            .catch(err => console.error('Error fetching :', err));\r\n-    }, []);\r\n-\r\n-    //API: Add New Order\r\n-    const handleSaveData = async (orderData) => {\r\n-        try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n-            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-\r\n-            ingredientChange.map(async (acc) => {\r\n-                const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n-            });\r\n-\r\n-            console.log('Order saved:', response.data);\r\n-            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n-        } catch (error) {\r\n-            console.error('Error saving order:', error);\r\n-        }\r\n-    };\r\n-\r\n-    // Function: Handle Menu Click & Set default for every option that exists.\r\n-    const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n-        setSelectedItem(item);\r\n-        setSelectedSize(item.sizePrices[0].size);\r\n-        if (isMobile) {setShowSelectedMenu(true);}\r\n-    };\r\n-\r\n-    // Fuction: Change size in MenuItemSelected.jsx\r\n-    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n-\r\n-    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n-    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n-    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n-\r\n-    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n-    const handleConfirmAdd = () => {\r\n-        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-\r\n-        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-\r\n-        console.log(\"ingredientRemain : \", ingredientRemain);\r\n-\r\n-        const ingredientProcess = ingredientRemain.map((acc) => {\r\n-            const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n-            if (ingredient) {\r\n-                return {\r\n-                    ...acc,\r\n-                    remain: acc.remain - ingredient.newIngredientQty * quantity\r\n-                };\r\n-            }\r\n-            return acc; // Keep the original if no change\r\n-        });\r\n-\r\n-        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {\r\n-            const changeItem = ingredientChange?.[index] ?? {}; // ให้ค่าเริ่มต้นเป็น {} แทน undefined\r\n-            return acc.remain !== changeItem.remain;\r\n-        });\r\n-\r\n-        console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n-\r\n-        setIngredientChange(IngredientChangefilter);\r\n-        const newItem = {\r\n-            //id: selectedItem._id,\r\n-            name: selectedItem.name,\r\n-            size: selectedSize,\r\n-            price: selectedSizeData.price,\r\n-            quantity: quantity,\r\n-            note: note,\r\n-            selectedOptions: selectedOptions,\r\n-        };\r\n-        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n-\r\n         setCartItems([...cartItems, newItem]);\r\n \r\n         setSelectedItem(null);\r\n         setQuantity(1);\r\n"
                },
                {
                    "date": 1740602976820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,8 @@\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n \r\n         setIngredientChange(IngredientChangefilter);\r\n         const newItem = {\r\n-            //id: selectedItem._id,\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n             price: selectedSizeData.price,\r\n             quantity: quantity,\r\n"
                },
                {
                    "date": 1740603174468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n \r\n-        console.log(\"ingredientRemain : \", ingredientRemain);\r\n+        console.log(\" : \", ingredientRemain);\r\n \r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n             if (ingredient) {\r\n"
                },
                {
                    "date": 1740603186920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n \r\n-        console.log(\" : \", ingredientRemain);\r\n+        console.log(\"หลังจากเพิ่มเมนูแล้ว : \", ingredientRemain);\r\n \r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n             if (ingredient) {\r\n"
                },
                {
                    "date": 1740603204535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,8 @@\n         axios.get('http://localhost:5000/api/ingredients')\r\n             .then(res => {\r\n                 setIngredientRemain(res.data)\r\n                 setIngredientChange(res.data)\r\n-                console.log(\"Ingredient Remain : \", res.data)\r\n             })\r\n             .catch(err => console.error('Error fetching :', err));\r\n     }, []);\r\n \r\n"
                },
                {
                    "date": 1740603271453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,10 +93,10 @@\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n \r\n-        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {\r\n-            const changeItem = ingredientChange?.[index] ?? {}; // ให้ค่าเริ่มต้นเป็น {} แทน undefined\r\n+        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {       //ตัวนี้คือตัวที่อัปเดท ingredient ที่เปลี่ยนไป\r\n+            const changeItem = ingredientChange?.[index] ?? {};\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n \r\n         console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n"
                },
                {
                    "date": 1740603284796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n             const changeItem = ingredientChange?.[index] ?? {};\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n \r\n-        console.log(\"IngredientChangefilter : \", IngredientChangefilter);\r\n+        console.log(\"วัตถุดิบที่ถูกเปลี่ยนแปลง : \", IngredientChangefilter);\r\n \r\n         setIngredientChange(IngredientChangefilter);\r\n         const newItem = {\r\n             name: selectedItem.name,\r\n"
                },
                {
                    "date": 1740603290841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,8 @@\n         setQuantity(1);\r\n         setSelectedSize('')\r\n         setSelectedOptions({});\r\n         setNote('');\r\n-\r\n     };\r\n \r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n"
                },
                {
                    "date": 1740603373204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,13 +77,13 @@\n \r\n     // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-\r\n-        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData)\r\n-\r\n+    \r\n+        console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData);\r\n         console.log(\"หลังจากเพิ่มเมนูแล้ว : \", ingredientRemain);\r\n-\r\n+    \r\n+        // อัปเดตค่า remain ของ ingredientRemain\r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n             if (ingredient) {\r\n                 return {\r\n@@ -92,35 +92,40 @@\n                 };\r\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n-\r\n-        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {       //ตัวนี้คือตัวที่อัปเดท ingredient ที่เปลี่ยนไป\r\n+    \r\n+        // คัดเฉพาะวัตถุดิบที่มีการเปลี่ยนแปลงจริง ๆ\r\n+        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {       \r\n             const changeItem = ingredientChange?.[index] ?? {};\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n-\r\n+    \r\n         console.log(\"วัตถุดิบที่ถูกเปลี่ยนแปลง : \", IngredientChangefilter);\r\n-\r\n-        setIngredientChange(IngredientChangefilter);\r\n+    \r\n+        setIngredientChange(IngredientChangefilter);  \r\n+        setIngredientRemain(ingredientProcess);  // ✅ เพิ่มบรรทัดนี้เพื่อให้ ingredientRemain เปลี่ยนแปลงจริง ๆ\r\n+    \r\n         const newItem = {\r\n             name: selectedItem.name,\r\n             size: selectedSize,\r\n             price: selectedSizeData.price,\r\n             quantity: quantity,\r\n             note: note,\r\n             selectedOptions: selectedOptions,\r\n         };\r\n-        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n-\r\n-        setCartItems([...cartItems, newItem]);\r\n-\r\n+    \r\n+        console.log(\"ฉันเพิ่มเมนู : \", newItem);\r\n+    \r\n+        setCartItems(prevCartItems => [...prevCartItems, newItem]);\r\n+    \r\n         setSelectedItem(null);\r\n         setQuantity(1);\r\n-        setSelectedSize('')\r\n+        setSelectedSize('');\r\n         setSelectedOptions({});\r\n         setNote('');\r\n     };\r\n+    \r\n \r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n"
                },
                {
                    "date": 1740609857061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,12 @@\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n \r\n+{/* Bug check \r\n+    1. เวลากดปิด onClose MenuItemSelected แล้ว มันหายไปจาก CartSummary เลย    \r\n+*/}\r\n+\r\n const OrderCreate = () => {\r\n     const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n     const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n \r\n"
                },
                {
                    "date": 1740609875286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,10 @@\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n \r\n {/* Bug check \r\n-    1. เวลากดปิด onClose MenuItemSelected แล้ว มันหายไปจาก CartSummary เลย    \r\n+    1. เวลากดปิด onClose MenuItemSelected แล้ว มันหายไปจาก CartSummary เลย\r\n+    2. แก้ไขหน้า CartSummary ให้สวยด้วย    \r\n */}\r\n \r\n const OrderCreate = () => {\r\n     const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n"
                },
                {
                    "date": 1740609902072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,10 @@\n import './OrderCreate.css';\r\n \r\n {/* Bug check \r\n     1. เวลากดปิด onClose MenuItemSelected แล้ว มันหายไปจาก CartSummary เลย\r\n-    2. แก้ไขหน้า CartSummary ให้สวยด้วย    \r\n+    2. แก้ไขหน้า CartSummary ให้สวยด้วย\r\n+    3. เพิ่ม \"ชื่อผู้สั่ง\" เข้าไปใน database ด้วย    \r\n */}\r\n \r\n const OrderCreate = () => {\r\n     const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n"
                },
                {
                    "date": 1740622117771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,9 @@\n         setIngredientRemain(ingredientProcess);  // ✅ เพิ่มบรรทัดนี้เพื่อให้ ingredientRemain เปลี่ยนแปลงจริง ๆ\r\n     \r\n         const newItem = {\r\n             name: selectedItem.name,\r\n+            category: selectedItem.category,\r\n             size: selectedSize,\r\n             price: selectedSizeData.price,\r\n             quantity: quantity,\r\n             note: note,\r\n"
                },
                {
                    "date": 1740729954193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,8 @@\n         setSelectedOptions({});\r\n         setNote('');\r\n     };\r\n     \r\n-\r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n     // Function: Edit Item (in cart)\r\n"
                },
                {
                    "date": 1740730190991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,12 +67,12 @@\n     };\r\n \r\n     // Function: Handle Menu Click & Set default for every option that exists.\r\n     const handleMenuClick = (item) => {\r\n-        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n         setSelectedItem(item);\r\n         setSelectedSize(item.sizePrices[0].size);\r\n-        if (isMobile) {setShowSelectedMenu(true);}\r\n+        setFormMode(\"Add\");  // 🆕 ตั้งค่าเป็น Add เมื่อเลือกเมนูใหม่\r\n+        if (isMobile) { setShowSelectedMenu(true); }\r\n     };\r\n \r\n     // Fuction: Change size in MenuItemSelected.jsx\r\n     const handleSizeChange = (size) => { setSelectedSize(size); };\r\n@@ -137,27 +137,25 @@\n \r\n     // Function: Edit Item (in cart)\r\n     const handleEditItem = (indexToEdit) => {\r\n         const itemToEdit = cartItems[indexToEdit];\r\n-\r\n-        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n         const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-\r\n+    \r\n         setSelectedItem({\r\n-            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n+            ...originalMenuItem,\r\n             size: itemToEdit.size,\r\n             price: itemToEdit.price,\r\n             quantity: itemToEdit.quantity,\r\n             note: itemToEdit.note,\r\n             selectedOptions: itemToEdit.selectedOptions || {},\r\n         });\r\n-\r\n+    \r\n         setSelectedSize(itemToEdit.size);\r\n         setQuantity(itemToEdit.quantity);\r\n         setNote(itemToEdit.note);\r\n         setSelectedOptions(itemToEdit.selectedOptions || {});\r\n-\r\n-        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n+        setFormMode(\"Edit\");  // 🆕 ตั้งค่าเป็น Edit เมื่อกดแก้ไข\r\n+    \r\n         setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n     };\r\n \r\n     // Function: Calculate total price of item(s) in cart.\r\n@@ -199,25 +197,27 @@\n                     }}\r\n                 >\r\n                     {selectedItem ? (\r\n                         <MenuItemSelected\r\n-                            selectedItem={selectedItem}\r\n-                            selectedSize={selectedSize}\r\n-                            quantity={quantity}\r\n-                            note={note}\r\n-                            selectedOptions={selectedOptions}\r\n-                            setSelectedOptions={setSelectedOptions}\r\n-                            handleSizeChange={handleSizeChange}\r\n-                            handleQuantityIncrease={handleQuantityIncrease}\r\n-                            handleQuantityDecrease={handleQuantityDecrease}\r\n-                            handleConfirmAdd={handleConfirmAdd}\r\n-                            setNote={setNote}\r\n-                            ingredientRemain={ingredientRemain}\r\n-                            onClose={() => {\r\n-                                console.log(\"Closing MenuItemSelected...\");\r\n-                                setSelectedItem(null);\r\n-                            }}\r\n-                        />\r\n+                        selectedItem={selectedItem}\r\n+                        selectedSize={selectedSize}\r\n+                        quantity={quantity}\r\n+                        note={note}\r\n+                        selectedOptions={selectedOptions}\r\n+                        setSelectedOptions={setSelectedOptions}\r\n+                        handleSizeChange={handleSizeChange}\r\n+                        handleQuantityIncrease={handleQuantityIncrease}\r\n+                        handleQuantityDecrease={handleQuantityDecrease}\r\n+                        handleConfirmAdd={handleConfirmAdd}\r\n+                        setNote={setNote}\r\n+                        ingredientRemain={ingredientRemain}\r\n+                        formMode={formMode} // 🆕 ส่งค่า formMode ไป\r\n+                        onClose={() => {\r\n+                            console.log(\"Closing MenuItemSelected...\");\r\n+                            setSelectedItem(null);\r\n+                        }}\r\n+                    />\r\n+                    \r\n                     ) : (\r\n                         <CartSummary\r\n                             cartItems={cartItems}\r\n                             totalPrice={totalPrice}\r\n@@ -249,22 +249,27 @@\n                         }}\r\n                     >\r\n                         {selectedItem ? (\r\n                             <MenuItemSelected\r\n-                                selectedItem={selectedItem}\r\n-                                selectedSize={selectedSize}\r\n-                                quantity={quantity}\r\n-                                note={note}\r\n-                                selectedOptions={selectedOptions}\r\n-                                setSelectedOptions={setSelectedOptions}\r\n-                                handleSizeChange={handleSizeChange}\r\n-                                handleQuantityIncrease={handleQuantityIncrease}\r\n-                                handleQuantityDecrease={handleQuantityDecrease}\r\n-                                handleConfirmAdd={handleConfirmAdd}\r\n-                                setNote={setNote}\r\n-                                ingredientRemain={ingredientRemain}\r\n-                                onClose={() => setSelectedItem(null)}\r\n-                            />\r\n+                            selectedItem={selectedItem}\r\n+                            selectedSize={selectedSize}\r\n+                            quantity={quantity}\r\n+                            note={note}\r\n+                            selectedOptions={selectedOptions}\r\n+                            setSelectedOptions={setSelectedOptions}\r\n+                            handleSizeChange={handleSizeChange}\r\n+                            handleQuantityIncrease={handleQuantityIncrease}\r\n+                            handleQuantityDecrease={handleQuantityDecrease}\r\n+                            handleConfirmAdd={handleConfirmAdd}\r\n+                            setNote={setNote}\r\n+                            ingredientRemain={ingredientRemain}\r\n+                            formMode={formMode} // 🆕 ส่งค่า formMode ไป\r\n+                            onClose={() => {\r\n+                                console.log(\"Closing MenuItemSelected...\");\r\n+                                setSelectedItem(null);\r\n+                            }}\r\n+                        />\r\n+                        \r\n                         ) : null}\r\n                     </Box>\r\n                 </Modal>\r\n             )}\r\n"
                },
                {
                    "date": 1740730209947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n     const [category, setCategory] = useState([]);\r\n     const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n     const [selectedItem, setSelectedItem] = useState(null);\r\n     const [selectedSize, setSelectedSize] = useState('');\r\n+    const [formMode, setFormMode] = useState(\"Add\");\r\n     const [quantity, setQuantity] = useState(1);\r\n     const [selectedOptions, setSelectedOptions] = useState({});\r\n     const [note, setNote] = useState('');\r\n \r\n"
                },
                {
                    "date": 1740731419333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,35 +83,63 @@\n     const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n \r\n     // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n     const handleConfirmAdd = () => {\r\n+        if (cartItems.length === 0) {\r\n+            Swal.fire({\r\n+                icon: \"warning\",\r\n+                title: \"ไม่สามารถบันทึกได้\",\r\n+                text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n+            return;\r\n+        }\r\n+    \r\n+        if (!diningOption) {\r\n+            Swal.fire({\r\n+                icon: \"warning\",\r\n+                title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n+                text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n+            return;\r\n+        }\r\n+    \r\n+        if (!phoneNumberOrTableNumber) {\r\n+            Swal.fire({\r\n+                icon: \"warning\",\r\n+                title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n+                text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n+            return;\r\n+        }\r\n+    \r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n     \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData);\r\n         console.log(\"หลังจากเพิ่มเมนูแล้ว : \", ingredientRemain);\r\n     \r\n-        // อัปเดตค่า remain ของ ingredientRemain\r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n             if (ingredient) {\r\n                 return {\r\n                     ...acc,\r\n                     remain: acc.remain - ingredient.newIngredientQty * quantity\r\n                 };\r\n             }\r\n-            return acc; // Keep the original if no change\r\n+            return acc;\r\n         });\r\n     \r\n-        // คัดเฉพาะวัตถุดิบที่มีการเปลี่ยนแปลงจริง ๆ\r\n         const IngredientChangefilter = ingredientProcess.filter((acc, index) => {       \r\n             const changeItem = ingredientChange?.[index] ?? {};\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n     \r\n         console.log(\"วัตถุดิบที่ถูกเปลี่ยนแปลง : \", IngredientChangefilter);\r\n     \r\n         setIngredientChange(IngredientChangefilter);  \r\n-        setIngredientRemain(ingredientProcess);  // ✅ เพิ่มบรรทัดนี้เพื่อให้ ingredientRemain เปลี่ยนแปลงจริง ๆ\r\n+        setIngredientRemain(ingredientProcess);\r\n     \r\n         const newItem = {\r\n             name: selectedItem.name,\r\n             category: selectedItem.category,\r\n"
                },
                {
                    "date": 1740731563888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import MenuList_Order from './assets/MenuList_Order';\r\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n+import Swal from 'sweetalert2';\r\n \r\n {/* Bug check \r\n     1. เวลากดปิด onClose MenuItemSelected แล้ว มันหายไปจาก CartSummary เลย\r\n     2. แก้ไขหน้า CartSummary ให้สวยด้วย\r\n@@ -93,9 +94,9 @@\n             });\r\n             return;\r\n         }\r\n     \r\n-        if (!diningOption) {\r\n+        if (!selectedOptions.diningOption) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n@@ -103,9 +104,9 @@\n             });\r\n             return;\r\n         }\r\n     \r\n-        if (!phoneNumberOrTableNumber) {\r\n+        if (!selectedOptions.phoneOrTableNumber) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n                 text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n"
                },
                {
                    "date": 1740731625569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n     const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n \r\n     // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n     const handleConfirmAdd = () => {\r\n-        if (cartItems.length === 0) {\r\n+        if (!cartItems || cartItems.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถบันทึกได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n@@ -161,8 +161,9 @@\n         setSelectedOptions({});\r\n         setNote('');\r\n     };\r\n     \r\n+    \r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n     // Function: Edit Item (in cart)\r\n"
                },
                {
                    "date": 1740731656687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n import MenuList_Order from './assets/MenuList_Order';\r\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n-import Swal from 'sweetalert2';\r\n \r\n {/* Bug check \r\n     1. เวลากดปิด onClose MenuItemSelected แล้ว มันหายไปจาก CartSummary เลย\r\n     2. แก้ไขหน้า CartSummary ให้สวยด้วย\r\n@@ -84,63 +83,35 @@\n     const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n \r\n     // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n     const handleConfirmAdd = () => {\r\n-        if (!cartItems || cartItems.length === 0) {\r\n-            Swal.fire({\r\n-                icon: \"warning\",\r\n-                title: \"ไม่สามารถบันทึกได้\",\r\n-                text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n-                confirmButtonText: \"ตกลง\"\r\n-            });\r\n-            return;\r\n-        }\r\n-    \r\n-        if (!selectedOptions.diningOption) {\r\n-            Swal.fire({\r\n-                icon: \"warning\",\r\n-                title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n-                text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n-                confirmButtonText: \"ตกลง\"\r\n-            });\r\n-            return;\r\n-        }\r\n-    \r\n-        if (!selectedOptions.phoneOrTableNumber) {\r\n-            Swal.fire({\r\n-                icon: \"warning\",\r\n-                title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n-                text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n-                confirmButtonText: \"ตกลง\"\r\n-            });\r\n-            return;\r\n-        }\r\n-    \r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n     \r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData);\r\n         console.log(\"หลังจากเพิ่มเมนูแล้ว : \", ingredientRemain);\r\n     \r\n+        // อัปเดตค่า remain ของ ingredientRemain\r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n             if (ingredient) {\r\n                 return {\r\n                     ...acc,\r\n                     remain: acc.remain - ingredient.newIngredientQty * quantity\r\n                 };\r\n             }\r\n-            return acc;\r\n+            return acc; // Keep the original if no change\r\n         });\r\n     \r\n+        // คัดเฉพาะวัตถุดิบที่มีการเปลี่ยนแปลงจริง ๆ\r\n         const IngredientChangefilter = ingredientProcess.filter((acc, index) => {       \r\n             const changeItem = ingredientChange?.[index] ?? {};\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n     \r\n         console.log(\"วัตถุดิบที่ถูกเปลี่ยนแปลง : \", IngredientChangefilter);\r\n     \r\n         setIngredientChange(IngredientChangefilter);  \r\n-        setIngredientRemain(ingredientProcess);\r\n+        setIngredientRemain(ingredientProcess);  // ✅ เพิ่มบรรทัดนี้เพื่อให้ ingredientRemain เปลี่ยนแปลงจริง ๆ\r\n     \r\n         const newItem = {\r\n             name: selectedItem.name,\r\n             category: selectedItem.category,\r\n@@ -161,9 +132,8 @@\n         setSelectedOptions({});\r\n         setNote('');\r\n     };\r\n     \r\n-    \r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n     // Function: Edit Item (in cart)\r\n"
                },
                {
                    "date": 1740731717955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,23 +50,74 @@\n     }, []);\r\n \r\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n+        // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n+        if (!orderData.cartItems || orderData.cartItems.length === 0) {\r\n+            Swal.fire({\r\n+                icon: \"warning\",\r\n+                title: \"ไม่สามารถบันทึกได้\",\r\n+                text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n+            return;\r\n+        }\r\n+    \r\n+        // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n+        if (!orderData.selectedOptions?.diningOption) {\r\n+            Swal.fire({\r\n+                icon: \"warning\",\r\n+                title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n+                text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n+            return;\r\n+        }\r\n+    \r\n+        // ตรวจสอบว่ากรอกเบอร์โทรหรือเลขโต๊ะหรือยัง\r\n+        if (!orderData.selectedOptions?.phoneOrTableNumber) {\r\n+            Swal.fire({\r\n+                icon: \"warning\",\r\n+                title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n+                text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n+            return;\r\n+        }\r\n+    \r\n         try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain)\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData);\r\n+            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain);\r\n+    \r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-\r\n-            ingredientChange.map(async (acc) => {\r\n-                const response2 = await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n-            });\r\n-\r\n+    \r\n+            // อัปเดตวัตถุดิบเฉพาะที่มีการเปลี่ยนแปลง\r\n+            await Promise.all(\r\n+                ingredientChange.map(async (acc) => {\r\n+                    await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n+                })\r\n+            );\r\n+    \r\n             console.log('Order saved:', response.data);\r\n+    \r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n+            Swal.fire({\r\n+                icon: \"success\",\r\n+                title: \"บันทึกออเดอร์สำเร็จ\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n+    \r\n         } catch (error) {\r\n             console.error('Error saving order:', error);\r\n+            Swal.fire({\r\n+                icon: \"error\",\r\n+                title: \"เกิดข้อผิดพลาด\",\r\n+                text: \"ไม่สามารถบันทึกออเดอร์ได้ กรุณาลองใหม่\",\r\n+                confirmButtonText: \"ตกลง\"\r\n+            });\r\n         }\r\n     };\r\n+    \r\n \r\n     // Function: Handle Menu Click & Set default for every option that exists.\r\n     const handleMenuClick = (item) => {\r\n         setSelectedItem(item);\r\n"
                },
                {
                    "date": 1740731736702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import MenuList_Order from './assets/MenuList_Order';\r\n import MenuItemSelected from './assets/MenuItemSelected';\r\n import CartSummary from './assets/CartSummary';\r\n import './OrderCreate.css';\r\n+import Swal from 'sweetalert2';\r\n \r\n {/* Bug check \r\n     1. เวลากดปิด onClose MenuItemSelected แล้ว มันหายไปจาก CartSummary เลย\r\n     2. แก้ไขหน้า CartSummary ให้สวยด้วย\r\n"
                },
                {
                    "date": 1740731766742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n         if (!orderData.cartItems || orderData.cartItems.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n-                title: \"ไม่สามารถบันทึกได้\",\r\n+                title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n"
                },
                {
                    "date": 1740731780989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n-        if (!orderData.cartItems || orderData.cartItems.length === 0) {\r\n+        if (orderData.cartItems.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n"
                },
                {
                    "date": 1740732015415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,13 @@\n     }, []);\r\n \r\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n+        console.log(\"ข้อมูลออเดอร์ที่ได้รับ:\", orderData);\r\n+    \r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n-        if (orderData.cartItems.length === 0) {\r\n+        if (!orderData?.cartItems || orderData.cartItems.length === 0) {\r\n+            console.warn(\"⛔ ไม่สามารถสร้างออเดอร์ได้: ไม่มีเมนูในตะกร้า\");\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n@@ -63,9 +66,10 @@\n             return;\r\n         }\r\n     \r\n         // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n-        if (!orderData.selectedOptions?.diningOption) {\r\n+        if (!orderData?.selectedOptions?.diningOption) {\r\n+            console.warn(\"⛔ ไม่สามารถสร้างออเดอร์ได้: ไม่ได้เลือกวิธีรับอาหาร\");\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n@@ -74,9 +78,10 @@\n             return;\r\n         }\r\n     \r\n         // ตรวจสอบว่ากรอกเบอร์โทรหรือเลขโต๊ะหรือยัง\r\n-        if (!orderData.selectedOptions?.phoneOrTableNumber) {\r\n+        if (!orderData?.selectedOptions?.phoneOrTableNumber) {\r\n+            console.warn(\"⛔ ไม่สามารถสร้างออเดอร์ได้: ไม่ได้กรอกเบอร์โทรหรือเลขโต๊ะ\");\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n                 text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n@@ -85,10 +90,10 @@\n             return;\r\n         }\r\n     \r\n         try {\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData);\r\n-            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain);\r\n+            console.log(\"✅ ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData);\r\n+            console.log(\"✅ ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain);\r\n     \r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n     \r\n             // อัปเดตวัตถุดิบเฉพาะที่มีการเปลี่ยนแปลง\r\n@@ -97,9 +102,9 @@\n                     await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n                 })\r\n             );\r\n     \r\n-            console.log('Order saved:', response.data);\r\n+            console.log('✅ Order saved:', response.data);\r\n     \r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n             Swal.fire({\r\n                 icon: \"success\",\r\n@@ -107,9 +112,9 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n     \r\n         } catch (error) {\r\n-            console.error('Error saving order:', error);\r\n+            console.error('❌ Error saving order:', error);\r\n             Swal.fire({\r\n                 icon: \"error\",\r\n                 title: \"เกิดข้อผิดพลาด\",\r\n                 text: \"ไม่สามารถบันทึกออเดอร์ได้ กรุณาลองใหม่\",\r\n"
                },
                {
                    "date": 1740732068213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,13 +112,12 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n     \r\n         } catch (error) {\r\n-            console.error('❌ Error saving order:', error);\r\n             Swal.fire({\r\n                 icon: \"error\",\r\n                 title: \"เกิดข้อผิดพลาด\",\r\n-                text: \"ไม่สามารถบันทึกออเดอร์ได้ กรุณาลองใหม่\",\r\n+                text: \"ไม่สามารถสร้างออเดอร์ได้ กรุณาลองใหม่\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n         }\r\n     };\r\n"
                },
                {
                    "date": 1740732135907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,8 @@\n         console.log(\"ข้อมูลออเดอร์ที่ได้รับ:\", orderData);\r\n     \r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n         if (!orderData?.cartItems || orderData.cartItems.length === 0) {\r\n-            console.warn(\"⛔ ไม่สามารถสร้างออเดอร์ได้: ไม่มีเมนูในตะกร้า\");\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n"
                },
                {
                    "date": 1740732182084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     const handleSaveData = async (orderData) => {\r\n         console.log(\"ข้อมูลออเดอร์ที่ได้รับ:\", orderData);\r\n     \r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n-        if (!orderData?.cartItems || orderData.cartItems.length === 0) {\r\n+        if (!orderData?items || orderData.items.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n"
                },
                {
                    "date": 1740732197421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     const handleSaveData = async (orderData) => {\r\n         console.log(\"ข้อมูลออเดอร์ที่ได้รับ:\", orderData);\r\n     \r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n-        if (!orderData?items || orderData.items.length === 0) {\r\n+        if (!orderData?.items || orderData.cartItems.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n"
                },
                {
                    "date": 1740732298394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n     const handleSaveData = async (orderData) => {\r\n         console.log(\"ข้อมูลออเดอร์ที่ได้รับ:\", orderData);\r\n     \r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n-        if (!orderData?.items || orderData.cartItems.length === 0) {\r\n+        if (!orderData?.items || orderData.items.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n@@ -66,9 +66,8 @@\n         }\r\n     \r\n         // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n         if (!orderData?.selectedOptions?.diningOption) {\r\n-            console.warn(\"⛔ ไม่สามารถสร้างออเดอร์ได้: ไม่ได้เลือกวิธีรับอาหาร\");\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n"
                },
                {
                    "date": 1740732307294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n         if (!orderData?.items || orderData.items.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n-                title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n+                title: \"\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n"
                },
                {
                    "date": 1740732326836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,9 @@\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n         if (!orderData?.items || orderData.items.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n-                title: \"\",\r\n-                text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n+                title: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n"
                },
                {
                    "date": 1740732337243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,10 @@\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n         if (!orderData?.items || orderData.items.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n-                title: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n+                title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n+                text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n"
                },
                {
                    "date": 1740732362838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"ไม่สามารถสร้างออเดอร์ได้\",\r\n                 text: \"กรุณาเพิ่มเมนูลงในตะกร้าก่อน\",\r\n+                confirmButtonColor: \"#64A2FF\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n"
                },
                {
                    "date": 1740732368934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n+                confirmButtonColor: \"#64A2FF\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n@@ -83,8 +84,9 @@\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n                 text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n+                confirmButtonColor: \"#64A2FF\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n"
                },
                {
                    "date": 1740732514619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             return;\r\n         }\r\n     \r\n         // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n-        if (!orderData?.selectedOptions?.diningOption) {\r\n+        if (!orderData?.selectedOptions?.orderType) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n@@ -79,9 +79,8 @@\n         }\r\n     \r\n         // ตรวจสอบว่ากรอกเบอร์โทรหรือเลขโต๊ะหรือยัง\r\n         if (!orderData?.selectedOptions?.phoneOrTableNumber) {\r\n-            console.warn(\"⛔ ไม่สามารถสร้างออเดอร์ได้: ไม่ได้กรอกเบอร์โทรหรือเลขโต๊ะ\");\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n                 text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n"
                },
                {
                    "date": 1740732522247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             return;\r\n         }\r\n     \r\n         // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n-        if (!orderData?.selectedOptions?.orderType) {\r\n+        if (!orderData?.orderType) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n"
                },
                {
                    "date": 1740732530014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n             return;\r\n         }\r\n     \r\n         // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n-        if (!orderData?.orderType) {\r\n+        if (!orderData?.orderType?) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n"
                },
                {
                    "date": 1740732676340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         console.log(\"ข้อมูลออเดอร์ที่ได้รับ:\", orderData);\r\n-    \r\n+        \r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n         if (!orderData?.items || orderData.items.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n@@ -64,11 +64,11 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n-    \r\n+        \r\n         // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n-        if (!orderData?.orderType?) {\r\n+        if (!orderData?.orderType || orderData.orderType === \"ยังไม่ระบุ\") {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณาเลือกตัวเลือกการรับประทาน\",\r\n                 text: \"คุณต้องเลือกตัวเลือก เช่น ทานที่ร้าน หรือ สั่งกลับบ้าน\",\r\n@@ -76,11 +76,14 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n-    \r\n+        \r\n         // ตรวจสอบว่ากรอกเบอร์โทรหรือเลขโต๊ะหรือยัง\r\n-        if (!orderData?.selectedOptions?.phoneOrTableNumber) {\r\n+        const hasPhoneNumber = orderData?.contactInfo?.phoneNumber?.trim() !== \"\";\r\n+        const hasTableNumber = orderData?.contactInfo?.tableNumber?.trim() !== \"\";\r\n+        \r\n+        if (!hasPhoneNumber && !hasTableNumber) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n                 text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n"
                },
                {
                    "date": 1740733280622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n     //API: Add New Order\r\n     const handleSaveData = async (orderData) => {\r\n         console.log(\"ข้อมูลออเดอร์ที่ได้รับ:\", orderData);\r\n-        \r\n+\r\n         // ตรวจสอบว่ามีเมนูในตะกร้าหรือไม่\r\n         if (!orderData?.items || orderData.items.length === 0) {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n@@ -64,9 +64,9 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n-        \r\n+\r\n         // ตรวจสอบว่าเลือกตัวเลือกการรับประทานหรือยัง\r\n         if (!orderData?.orderType || orderData.orderType === \"ยังไม่ระบุ\") {\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n@@ -76,14 +76,16 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n-        \r\n+\r\n         // ตรวจสอบว่ากรอกเบอร์โทรหรือเลขโต๊ะหรือยัง\r\n-        const hasPhoneNumber = orderData?.contactInfo?.phoneNumber?.trim() !== \"\";\r\n-        const hasTableNumber = orderData?.contactInfo?.tableNumber?.trim() !== \"\";\r\n-        \r\n+        const contactInfo = orderData?.contactInfo || {};\r\n+        const hasPhoneNumber = contactInfo.phoneNumber && contactInfo.phoneNumber.trim() !== \"\";\r\n+        const hasTableNumber = contactInfo.tableNumber && contactInfo.tableNumber.trim() !== \"\";\r\n+\r\n         if (!hasPhoneNumber && !hasTableNumber) {\r\n+            console.log(\"❌ ไม่มีเบอร์โทรหรือเลขโต๊ะ ข้อมูลไม่ควรถูกบันทึก\");\r\n             Swal.fire({\r\n                 icon: \"warning\",\r\n                 title: \"กรุณากรอกเบอร์โทรหรือเลขโต๊ะ\",\r\n                 text: \"ข้อมูลนี้จำเป็นต้องใช้สำหรับการบันทึกออเดอร์\",\r\n@@ -91,31 +93,31 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n             return;\r\n         }\r\n-    \r\n+\r\n         try {\r\n             console.log(\"✅ ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData);\r\n             console.log(\"✅ ขั้นตอนสุดท้าย ฉันกำลังจะหักวัตถุดิบ : \", ingredientRemain);\r\n-    \r\n+\r\n             const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n-    \r\n+\r\n             // อัปเดตวัตถุดิบเฉพาะที่มีการเปลี่ยนแปลง\r\n             await Promise.all(\r\n                 ingredientChange.map(async (acc) => {\r\n                     await axios.put(`http://localhost:5000/api/ingredients/${acc._id}`, acc);\r\n                 })\r\n             );\r\n-    \r\n+\r\n             console.log('✅ Order saved:', response.data);\r\n-    \r\n+\r\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n             Swal.fire({\r\n                 icon: \"success\",\r\n                 title: \"บันทึกออเดอร์สำเร็จ\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n-    \r\n+\r\n         } catch (error) {\r\n             Swal.fire({\r\n                 icon: \"error\",\r\n                 title: \"เกิดข้อผิดพลาด\",\r\n@@ -123,10 +125,10 @@\n                 confirmButtonText: \"ตกลง\"\r\n             });\r\n         }\r\n     };\r\n-    \r\n \r\n+\r\n     // Function: Handle Menu Click & Set default for every option that exists.\r\n     const handleMenuClick = (item) => {\r\n         setSelectedItem(item);\r\n         setSelectedSize(item.sizePrices[0].size);\r\n@@ -143,12 +145,12 @@\n \r\n     // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n     const handleConfirmAdd = () => {\r\n         const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n-    \r\n+\r\n         console.log(\"ฉันกำลังเพิ่มเมนู : \", selectedSizeData);\r\n         console.log(\"หลังจากเพิ่มเมนูแล้ว : \", ingredientRemain);\r\n-    \r\n+\r\n         // อัปเดตค่า remain ของ ingredientRemain\r\n         const ingredientProcess = ingredientRemain.map((acc) => {\r\n             const ingredient = selectedSizeData.ingredients.find((acc2) => acc2.newIngredient === acc.name);\r\n             if (ingredient) {\r\n@@ -158,20 +160,20 @@\n                 };\r\n             }\r\n             return acc; // Keep the original if no change\r\n         });\r\n-    \r\n+\r\n         // คัดเฉพาะวัตถุดิบที่มีการเปลี่ยนแปลงจริง ๆ\r\n-        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {       \r\n+        const IngredientChangefilter = ingredientProcess.filter((acc, index) => {\r\n             const changeItem = ingredientChange?.[index] ?? {};\r\n             return acc.remain !== changeItem.remain;\r\n         });\r\n-    \r\n+\r\n         console.log(\"วัตถุดิบที่ถูกเปลี่ยนแปลง : \", IngredientChangefilter);\r\n-    \r\n-        setIngredientChange(IngredientChangefilter);  \r\n+\r\n+        setIngredientChange(IngredientChangefilter);\r\n         setIngredientRemain(ingredientProcess);  // ✅ เพิ่มบรรทัดนี้เพื่อให้ ingredientRemain เปลี่ยนแปลงจริง ๆ\r\n-    \r\n+\r\n         const newItem = {\r\n             name: selectedItem.name,\r\n             category: selectedItem.category,\r\n             size: selectedSize,\r\n@@ -179,43 +181,43 @@\n             quantity: quantity,\r\n             note: note,\r\n             selectedOptions: selectedOptions,\r\n         };\r\n-    \r\n+\r\n         console.log(\"ฉันเพิ่มเมนู : \", newItem);\r\n-    \r\n+\r\n         setCartItems(prevCartItems => [...prevCartItems, newItem]);\r\n-    \r\n+\r\n         setSelectedItem(null);\r\n         setQuantity(1);\r\n         setSelectedSize('');\r\n         setSelectedOptions({});\r\n         setNote('');\r\n     };\r\n-    \r\n+\r\n     // Function: Remove Item (from cart)\r\n     const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n \r\n     // Function: Edit Item (in cart)\r\n     const handleEditItem = (indexToEdit) => {\r\n         const itemToEdit = cartItems[indexToEdit];\r\n         const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n-    \r\n+\r\n         setSelectedItem({\r\n             ...originalMenuItem,\r\n             size: itemToEdit.size,\r\n             price: itemToEdit.price,\r\n             quantity: itemToEdit.quantity,\r\n             note: itemToEdit.note,\r\n             selectedOptions: itemToEdit.selectedOptions || {},\r\n         });\r\n-    \r\n+\r\n         setSelectedSize(itemToEdit.size);\r\n         setQuantity(itemToEdit.quantity);\r\n         setNote(itemToEdit.note);\r\n         setSelectedOptions(itemToEdit.selectedOptions || {});\r\n         setFormMode(\"Edit\");  // 🆕 ตั้งค่าเป็น Edit เมื่อกดแก้ไข\r\n-    \r\n+\r\n         setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n     };\r\n \r\n     // Function: Calculate total price of item(s) in cart.\r\n@@ -257,27 +259,27 @@\n                     }}\r\n                 >\r\n                     {selectedItem ? (\r\n                         <MenuItemSelected\r\n-                        selectedItem={selectedItem}\r\n-                        selectedSize={selectedSize}\r\n-                        quantity={quantity}\r\n-                        note={note}\r\n-                        selectedOptions={selectedOptions}\r\n-                        setSelectedOptions={setSelectedOptions}\r\n-                        handleSizeChange={handleSizeChange}\r\n-                        handleQuantityIncrease={handleQuantityIncrease}\r\n-                        handleQuantityDecrease={handleQuantityDecrease}\r\n-                        handleConfirmAdd={handleConfirmAdd}\r\n-                        setNote={setNote}\r\n-                        ingredientRemain={ingredientRemain}\r\n-                        formMode={formMode} // 🆕 ส่งค่า formMode ไป\r\n-                        onClose={() => {\r\n-                            console.log(\"Closing MenuItemSelected...\");\r\n-                            setSelectedItem(null);\r\n-                        }}\r\n-                    />\r\n-                    \r\n+                            selectedItem={selectedItem}\r\n+                            selectedSize={selectedSize}\r\n+                            quantity={quantity}\r\n+                            note={note}\r\n+                            selectedOptions={selectedOptions}\r\n+                            setSelectedOptions={setSelectedOptions}\r\n+                            handleSizeChange={handleSizeChange}\r\n+                            handleQuantityIncrease={handleQuantityIncrease}\r\n+                            handleQuantityDecrease={handleQuantityDecrease}\r\n+                            handleConfirmAdd={handleConfirmAdd}\r\n+                            setNote={setNote}\r\n+                            ingredientRemain={ingredientRemain}\r\n+                            formMode={formMode} // 🆕 ส่งค่า formMode ไป\r\n+                            onClose={() => {\r\n+                                console.log(\"Closing MenuItemSelected...\");\r\n+                                setSelectedItem(null);\r\n+                            }}\r\n+                        />\r\n+\r\n                     ) : (\r\n                         <CartSummary\r\n                             cartItems={cartItems}\r\n                             totalPrice={totalPrice}\r\n@@ -309,27 +311,27 @@\n                         }}\r\n                     >\r\n                         {selectedItem ? (\r\n                             <MenuItemSelected\r\n-                            selectedItem={selectedItem}\r\n-                            selectedSize={selectedSize}\r\n-                            quantity={quantity}\r\n-                            note={note}\r\n-                            selectedOptions={selectedOptions}\r\n-                            setSelectedOptions={setSelectedOptions}\r\n-                            handleSizeChange={handleSizeChange}\r\n-                            handleQuantityIncrease={handleQuantityIncrease}\r\n-                            handleQuantityDecrease={handleQuantityDecrease}\r\n-                            handleConfirmAdd={handleConfirmAdd}\r\n-                            setNote={setNote}\r\n-                            ingredientRemain={ingredientRemain}\r\n-                            formMode={formMode} // 🆕 ส่งค่า formMode ไป\r\n-                            onClose={() => {\r\n-                                console.log(\"Closing MenuItemSelected...\");\r\n-                                setSelectedItem(null);\r\n-                            }}\r\n-                        />\r\n-                        \r\n+                                selectedItem={selectedItem}\r\n+                                selectedSize={selectedSize}\r\n+                                quantity={quantity}\r\n+                                note={note}\r\n+                                selectedOptions={selectedOptions}\r\n+                                setSelectedOptions={setSelectedOptions}\r\n+                                handleSizeChange={handleSizeChange}\r\n+                                handleQuantityIncrease={handleQuantityIncrease}\r\n+                                handleQuantityDecrease={handleQuantityDecrease}\r\n+                                handleConfirmAdd={handleConfirmAdd}\r\n+                                setNote={setNote}\r\n+                                ingredientRemain={ingredientRemain}\r\n+                                formMode={formMode} // 🆕 ส่งค่า formMode ไป\r\n+                                onClose={() => {\r\n+                                    console.log(\"Closing MenuItemSelected...\");\r\n+                                    setSelectedItem(null);\r\n+                                }}\r\n+                            />\r\n+\r\n                         ) : null}\r\n                     </Box>\r\n                 </Modal>\r\n             )}\r\n@@ -354,9 +356,9 @@\n                         justifyContent: \"center\"\r\n                     }}\r\n                     onClick={() => setShowCartModal(true)}\r\n                 >\r\n-                    <ShoppingCartIcon /> <span style={{marginLeft:\"8px\"}}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n+                    <ShoppingCartIcon /> <span style={{ marginLeft: \"8px\" }}>ตะกร้าของฉัน ({cartItems.length} รายการ)</span>\r\n                 </Box>\r\n             )}\r\n \r\n             {/* Mobile - ใช้ Modal สำหรับ Cart Summary */}\r\n"
                },
                {
                    "date": 1740733526153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,8 +114,10 @@\n             Swal.fire({\r\n                 icon: \"success\",\r\n                 title: \"บันทึกออเดอร์สำเร็จ\",\r\n                 confirmButtonText: \"ตกลง\"\r\n+            }).then(() => {\r\n+                window.location.reload(); // ✅ รีเฟรชหน้าหลังจากกด \"ตกลง\"\r\n             });\r\n \r\n         } catch (error) {\r\n             Swal.fire({\r\n"
                },
                {
                    "date": 1740733537935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,8 +113,9 @@\n             setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n             Swal.fire({\r\n                 icon: \"success\",\r\n                 title: \"บันทึกออเดอร์สำเร็จ\",\r\n+                confirmButtonColor: \"#64A2FF\",\r\n                 confirmButtonText: \"ตกลง\"\r\n             }).then(() => {\r\n                 window.location.reload(); // ✅ รีเฟรชหน้าหลังจากกด \"ตกลง\"\r\n             });\r\n@@ -123,9 +124,10 @@\n             Swal.fire({\r\n                 icon: \"error\",\r\n                 title: \"เกิดข้อผิดพลาด\",\r\n                 text: \"ไม่สามารถสร้างออเดอร์ได้ กรุณาลองใหม่\",\r\n-                confirmButtonText: \"ตกลง\"\r\n+                confirmButtonColor: \"#64A2FF\",\r\n+                confirmButtonText: \"โอเค\"\r\n             });\r\n         }\r\n     };\r\n \r\n"
                },
                {
                    "date": 1740733546637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,11 +114,11 @@\n             Swal.fire({\r\n                 icon: \"success\",\r\n                 title: \"บันทึกออเดอร์สำเร็จ\",\r\n                 confirmButtonColor: \"#64A2FF\",\r\n-                confirmButtonText: \"ตกลง\"\r\n+                confirmButtonText: \"โอเค\"\r\n             }).then(() => {\r\n-                window.location.reload(); // ✅ รีเฟรชหน้าหลังจากกด \"ตกลง\"\r\n+                window.location.reload(); // ✅ รีเฟรชหน้าจอ\r\n             });\r\n \r\n         } catch (error) {\r\n             Swal.fire({\r\n"
                },
                {
                    "date": 1740734007435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,8 +311,9 @@\n                             margin: \"10vh auto\",\r\n                             overflowY: \"auto\",\r\n                             display: \"flex\",\r\n                             flexDirection: \"column\",\r\n+                            marginBottm: \"100px\"\r\n                         }}\r\n                     >\r\n                         {selectedItem ? (\r\n                             <MenuItemSelected\r\n"
                },
                {
                    "date": 1740734023139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,9 +311,9 @@\n                             margin: \"10vh auto\",\r\n                             overflowY: \"auto\",\r\n                             display: \"flex\",\r\n                             flexDirection: \"column\",\r\n-                            marginBottm: \"100px\"\r\n+                            paddingBottm: \"100px\"\r\n                         }}\r\n                     >\r\n                         {selectedItem ? (\r\n                             <MenuItemSelected\r\n"
                },
                {
                    "date": 1740734030670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,9 +303,8 @@\n                 >\r\n                     <Box\r\n                         sx={{\r\n                             backgroundColor: \"#fff\",\r\n-                            padding: \"15px\",\r\n                             borderRadius: \"8px\",\r\n                             maxWidth: \"90vw\",\r\n                             height: \"80vh\",\r\n                             margin: \"10vh auto\",\r\n"
                },
                {
                    "date": 1740734041793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,16 +303,16 @@\n                 >\r\n                     <Box\r\n                         sx={{\r\n                             backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n                             borderRadius: \"8px\",\r\n                             maxWidth: \"90vw\",\r\n                             height: \"80vh\",\r\n                             margin: \"10vh auto\",\r\n                             overflowY: \"auto\",\r\n                             display: \"flex\",\r\n                             flexDirection: \"column\",\r\n-                            paddingBottm: \"100px\"\r\n                         }}\r\n                     >\r\n                         {selectedItem ? (\r\n                             <MenuItemSelected\r\n"
                },
                {
                    "date": 1740734072704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,8 +238,9 @@\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n                     marginRight: \"10px\",\r\n+                    marginBottom: isMobile ? \"50px\" :\r\n                 }}\r\n             >\r\n                 <MenuList_Order\r\n                     data={data}\r\n"
                },
                {
                    "date": 1740734082951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n                     marginRight: \"10px\",\r\n-                    marginBottom: isMobile ? \"50px\" :\r\n+                    marginBottom: isMobile ? \"50px\" : \"0\"\r\n                 }}\r\n             >\r\n                 <MenuList_Order\r\n                     data={data}\r\n"
                },
                {
                    "date": 1740734088315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n                     marginRight: \"10px\",\r\n-                    marginBottom: isMobile ? \"50px\" : \"0\"\r\n+                    marginBottom: isMobile ? \"60px\" : \"0\"\r\n                 }}\r\n             >\r\n                 <MenuList_Order\r\n                     data={data}\r\n"
                },
                {
                    "date": 1740734095557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n                     marginRight: \"10px\",\r\n-                    marginBottom: isMobile ? \"60px\" : \"0\"\r\n+                    marginBottom: isMobile ? \"70px\" : \"0\"\r\n                 }}\r\n             >\r\n                 <MenuList_Order\r\n                     data={data}\r\n"
                },
                {
                    "date": 1740734106462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,9 @@\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n                     marginRight: \"10px\",\r\n-                    marginBottom: isMobile ? \"70px\" : \"0\"\r\n+                    marginBottom: isMobile ? \"80px\" : \"0\"\r\n                 }}\r\n             >\r\n                 <MenuList_Order\r\n                     data={data}\r\n"
                },
                {
                    "date": 1740734153167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,9 +238,8 @@\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n                     marginRight: \"10px\",\r\n-                    marginBottom: isMobile ? \"80px\" : \"0\"\r\n                 }}\r\n             >\r\n                 <MenuList_Order\r\n                     data={data}\r\n"
                },
                {
                    "date": 1740734181542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,8 +238,9 @@\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n                     marginRight: \"10px\",\r\n+                    marginBottom: isMobile ? \"80px\" : \"0\"\r\n                 }}\r\n             >\r\n                 <MenuList_Order\r\n                     data={data}\r\n"
                }
            ],
            "date": 1739608563877,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MenuList_Order from './assets/MenuList_Order';\r\nimport MenuItemSelected from './assets/MenuItemSelected';\r\nimport CartSummary from './assets/CartSummary';\r\nimport './OrderCreate.css';\r\n\r\n{/* BUGS\r\n    1. เวลาจะ Edit Item ที่อยู่ใน Cart มันไม่ยอมดึงข้อมูลเก่ามาให้แก้ (มัน reset ใหม่หมดเลย)  \r\n*/}\r\n\r\nconst OrderCreate = () => {\r\n    const [data, setData] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [cartItems, setCartItems] = useState([]);         //Item(s) in cart\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [selectedSize, setSelectedSize] = useState('');\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [selectedOptions, setSelectedOptions] = useState({});\r\n    const [note, setNote] = useState('');\r\n\r\n    const [ingredientRemain, setIngredientRemain] = useState([]);\r\n\r\n    // API: Fetch data from database\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/foods')\r\n            .then(res => { setData(res.data) })\r\n            .catch(err => console.error('Error fetching :', err));\r\n        axios.get('http://localhost:5000/api/add_menus/category')\r\n            .then(res => { setCategory(res.data) })\r\n            .catch(err => console.error('Error fetching :', err));\r\n        axios.get('http://localhost:5000/api/ingredients')\r\n            .then(res => { setIngredientRemain(res.data)\r\n                console.log(\"Ingredient Remain : \", res.data)\r\n            })\r\n            .catch(err => console.error('Error fetching :', err));\r\n    }, []);\r\n\r\n    //API: Add New Order\r\n    const handleSaveData = async (orderData) => {\r\n        try {\r\n            console.log(\"ขั้นตอนสุดท้าย ฉันกำลังจะนำเข้าข้อมูล : \", orderData)\r\n            const response = await axios.post('http://localhost:5000/api/orders', orderData);\r\n            console.log('Order saved:', response.data);\r\n            setCartItems([]); // ✅ ล้างตะกร้าหลังบันทึกสำเร็จ\r\n        } catch (error) {\r\n            console.error('Error saving order:', error);\r\n        }\r\n    };\r\n\r\n    // Function: Handle Menu Click & Set default for every option that exists.\r\n    const handleMenuClick = (item) => {\r\n        console.log(\"ฉันกำลังคลิกไปที่เมนู : \", item)\r\n        setSelectedItem(item);                          //กำหนด SelectedItem ให้เป็น item ที่เรากำลังคลิกอยู่\r\n        setSelectedSize(item.sizePrices[0].size);       //เราจะทำการ auto ให้เลือกที่ขนาดแรกที่มีใน database ไปเลย เพื่อป้องกันผู้ใช้ไม่เลือกขนาด\r\n    };\r\n\r\n    // Fuction: Change size in MenuItemSelected.jsx\r\n    const handleSizeChange = (size) => { setSelectedSize(size); };\r\n\r\n    // Fuction: Handle Quantity Change (Increase & Decrease, in order) in MenuItemSelected.jsx\r\n    const handleQuantityIncrease = () => { setQuantity((prevQuantity) => prevQuantity + 1); };\r\n    const handleQuantityDecrease = () => { setQuantity((prevQuantity) => (prevQuantity > 1 ? prevQuantity - 1 : 1)); };\r\n\r\n    // Function: Add item to cart (from MenuItemSelected.jsx ---> to CartSummary.jsx)\r\n    const handleConfirmAdd = () => {\r\n        const selectedSizeData = selectedItem.sizePrices.find(s => s.size === selectedSize);\r\n\r\n        const newItem = {\r\n            //id: selectedItem._id,\r\n            name: selectedItem.name,\r\n            size: selectedSize,\r\n            price: selectedSizeData.price,\r\n            quantity: quantity,\r\n            note: note,\r\n            selectedOptions: selectedOptions,\r\n        };\r\n        console.log(\"ฉันเพิ่มเมนู : \", newItem)\r\n\r\n        setCartItems([...cartItems, newItem]);\r\n\r\n        setSelectedItem(null);\r\n        setQuantity(1);\r\n        setSelectedSize('')\r\n        setSelectedOptions({});\r\n        setNote('');\r\n        \r\n    };\r\n\r\n\r\n    // Function: Remove Item (from cart)\r\n    const handleRemoveItem = (indexToRemove) => { setCartItems(cartItems.filter((_, index) => index !== indexToRemove)); };\r\n\r\n    // Function: Edit Item (in cart)\r\n    const handleEditItem = (indexToEdit) => {\r\n        const itemToEdit = cartItems[indexToEdit];\r\n    \r\n        // ค้นหาเมนูจริงจากฐานข้อมูล เพื่อดึง sizePrices ที่ถูกต้อง\r\n        const originalMenuItem = data.find(menu => menu.name === itemToEdit.name);\r\n    \r\n        setSelectedItem({\r\n            ...originalMenuItem,  // ใช้ข้อมูลต้นฉบับ เพื่อให้ sizePrices มีค่า\r\n            size: itemToEdit.size,\r\n            price: itemToEdit.price,\r\n            quantity: itemToEdit.quantity,\r\n            note: itemToEdit.note,\r\n            selectedOptions: itemToEdit.selectedOptions || {},\r\n        });\r\n    \r\n        setSelectedSize(itemToEdit.size);\r\n        setQuantity(itemToEdit.quantity);\r\n        setNote(itemToEdit.note);\r\n        setSelectedOptions(itemToEdit.selectedOptions || {});\r\n    \r\n        // เอารายการที่ถูกแก้ออกจากตะกร้า เพื่อไม่ให้ซ้ำ\r\n        setCartItems(cartItems.filter((_, index) => index !== indexToEdit));\r\n    };\r\n\r\n    // Function: Calculate total price of item(s) in cart.\r\n    const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n\r\n    return (\r\n        <div className='container'>\r\n            <MenuList_Order\r\n                data={data}\r\n                category={category}\r\n                onMenuClick={handleMenuClick}\r\n                selectedItem={selectedItem}\r\n            />\r\n            <div className='right-box fr-18'>\r\n                {selectedItem ? (\r\n                    <MenuItemSelected\r\n                        selectedItem={selectedItem}\r\n                        selectedSize={selectedSize}\r\n                        quantity={quantity}\r\n                        note={note}\r\n                        selectedOptions={selectedOptions} // ✅ Pass selectedOptions\r\n                        setSelectedOptions={setSelectedOptions} // ✅ Pass setSelectedOptions\r\n                        handleSizeChange={handleSizeChange}\r\n                        handleQuantityIncrease={handleQuantityIncrease}\r\n                        handleQuantityDecrease={handleQuantityDecrease}\r\n                        handleConfirmAdd={handleConfirmAdd}\r\n                        setNote={setNote}\r\n                    />\r\n                ) : (\r\n                    <CartSummary\r\n                        cartItems={cartItems}\r\n                        totalPrice={totalPrice}\r\n                        handleEditItem={handleEditItem}\r\n                        handleRemoveItem={handleRemoveItem}\r\n                        onSave={handleSaveData}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderCreate;\r\n"
        }
    ]
}