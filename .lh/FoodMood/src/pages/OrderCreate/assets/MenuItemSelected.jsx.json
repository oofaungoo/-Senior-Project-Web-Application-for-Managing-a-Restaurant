{
    "sourceFile": "FoodMood/src/pages/OrderCreate/assets/MenuItemSelected.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 188,
            "patches": [
                {
                    "date": 1739608768375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739608806165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,16 @@\n             </div>\r\n             <div className=\"right-box-header\">\r\n                 {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n             </div>\r\n+            <div className=\"right-box-header\">\r\n+                <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                <ul>\r\n+                    {selectedItem.ingredients.map((ingredient) => (\r\n+                        <li key={ingredient}>{ingredient}</li>\r\n+                    ))}\r\n+                </ul>\r\n+            </div>\r\n \r\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n"
                },
                {
                    "date": 1739608902136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,16 +29,9 @@\n             </div>\r\n             <div className=\"right-box-header\">\r\n                 {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n             </div>\r\n-            <div className=\"right-box-header\">\r\n-                <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n-                <ul>\r\n-                    {selectedItem.ingredients.map((ingredient) => (\r\n-                        <li key={ingredient}>{ingredient}</li>\r\n-                    ))}\r\n-                </ul>\r\n-            </div>\r\n+            \r\n \r\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n@@ -59,8 +52,15 @@\n                         </label>\r\n                     ))}\r\n                 </li>\r\n \r\n+                <div className=\"right-box-header\">\r\n+                <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                <ul>\r\n+                    \r\n+                </ul>\r\n+            </div>\r\n+\r\n                 {/* เลือกจำนวนที่ต้องการ */}\r\n                 <li className=\"option-item\">\r\n                     <div>จำนวน</div>\r\n                     <div className=\"quantity-div\">\r\n"
                },
                {
                    "date": 1739608946760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n import React from 'react';\r\n \r\n const MenuItemSelected = ({\r\n-    selectedItem, \r\n-    selectedSize, \r\n-    quantity, \r\n-    note, \r\n-    selectedOptions, \r\n-    setSelectedOptions, \r\n-    handleSizeChange, \r\n-    handleQuantityIncrease, \r\n-    handleQuantityDecrease, \r\n-    handleConfirmAdd, \r\n+    selectedItem,\r\n+    selectedSize,\r\n+    quantity,\r\n+    note,\r\n+    selectedOptions,\r\n+    setSelectedOptions,\r\n+    handleSizeChange,\r\n+    handleQuantityIncrease,\r\n+    handleQuantityDecrease,\r\n+    handleConfirmAdd,\r\n     setNote\r\n }) => {\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n@@ -29,38 +29,42 @@\n             </div>\r\n             <div className=\"right-box-header\">\r\n                 {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n             </div>\r\n-            \r\n \r\n+\r\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n                     {selectedItem?.sizePrices?.map(({ size }) => (\r\n-                        <label\r\n-                            key={size}\r\n-                            className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n-                            onClick={() => handleSizeChange(size)}\r\n-                        >\r\n-                            <input\r\n-                                type=\"radio\"\r\n-                                value={size}\r\n-                                checked={selectedSize === size}\r\n-                                onChange={() => handleSizeChange(size)}\r\n-                            />\r\n-                            {size}\r\n-                        </label>\r\n+                        <>\r\n+                            <label\r\n+                                key={size}\r\n+                                className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n+                                onClick={() => handleSizeChange(size)}\r\n+                            >\r\n+                                <input\r\n+                                    type=\"radio\"\r\n+                                    value={size}\r\n+                                    checked={selectedSize === size}\r\n+                                    onChange={() => handleSizeChange(size)}\r\n+                                />\r\n+                                {size}\r\n+                            </label>\r\n+                            <div className=\"right-box-header\">\r\n+                                <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                                <ul>\r\n+\r\n+                                </ul>\r\n+                            </div>\r\n+\r\n+                        </>\r\n                     ))}\r\n                 </li>\r\n \r\n-                <div className=\"right-box-header\">\r\n-                <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n-                <ul>\r\n-                    \r\n-                </ul>\r\n-            </div>\r\n \r\n+\r\n                 {/* เลือกจำนวนที่ต้องการ */}\r\n                 <li className=\"option-item\">\r\n                     <div>จำนวน</div>\r\n                     <div className=\"quantity-div\">\r\n"
                },
                {
                    "date": 1739608985281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React from 'react';\r\n+import Grid from '@material-ui/core/Grid';\r\n \r\n const MenuItemSelected = ({\r\n     selectedItem,\r\n     selectedSize,\r\n"
                },
                {
                    "date": 1739608998678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from 'react';\r\n-import Grid from '@material-ui/core/Grid';\r\n+import Grid from '@material-ui/Grid';\r\n \r\n const MenuItemSelected = ({\r\n     selectedItem,\r\n     selectedSize,\r\n"
                },
                {
                    "date": 1739609039873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from 'react';\r\n-import Grid from '@material-ui/Grid';\r\n+import Grid from '@mui/material/Grid';\r\n \r\n const MenuItemSelected = ({\r\n     selectedItem,\r\n     selectedSize,\r\n"
                },
                {
                    "date": 1739609053197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n                     {selectedItem?.sizePrices?.map(({ size }) => (\r\n-                        <>\r\n+                        <Grid>\r\n                             <label\r\n                                 key={size}\r\n                                 className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n                                 onClick={() => handleSizeChange(size)}\r\n@@ -58,9 +58,9 @@\n \r\n                                 </ul>\r\n                             </div>\r\n \r\n-                        </>\r\n+                        </Grid>\r\n                     ))}\r\n                 </li>\r\n \r\n \r\n"
                },
                {
                    "date": 1739609064777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n                     {selectedItem?.sizePrices?.map(({ size }) => (\r\n-                        <Grid>\r\n+                        <Grid >\r\n                             <label\r\n                                 key={size}\r\n                                 className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n                                 onClick={() => handleSizeChange(size)}\r\n@@ -51,9 +51,9 @@\n                                     onChange={() => handleSizeChange(size)}\r\n                                 />\r\n                                 {size}\r\n                             </label>\r\n-                            <div className=\"right-box-header\">\r\n+                            <div>\r\n                                 <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                                 <ul>\r\n \r\n                                 </ul>\r\n"
                },
                {
                    "date": 1739609073382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                             </label>\r\n                             <div>\r\n                                 <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                                 <ul>\r\n-\r\n+                            \r\n                                 </ul>\r\n                             </div>\r\n \r\n                         </Grid>\r\n"
                },
                {
                    "date": 1739609323795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,8 @@\n                         <Grid >\r\n                             <label\r\n                                 key={size}\r\n                                 className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n-                                onClick={() => handleSizeChange(size)}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={size}\r\n@@ -51,21 +50,21 @@\n                                     onChange={() => handleSizeChange(size)}\r\n                                 />\r\n                                 {size}\r\n                             </label>\r\n-                            <div>\r\n-                                <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n-                                <ul>\r\n                             \r\n-                                </ul>\r\n-                            </div>\r\n \r\n                         </Grid>\r\n                     ))}\r\n                 </li>\r\n+                <div>\r\n+                    <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                    <ul>\r\n+                        {size}\r\n+                    </ul>\r\n+                </div>\r\n \r\n \r\n-\r\n                 {/* เลือกจำนวนที่ต้องการ */}\r\n                 <li className=\"option-item\">\r\n                     <div>จำนวน</div>\r\n                     <div className=\"quantity-div\">\r\n"
                },
                {
                    "date": 1739609330992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,9 @@\n                         <Grid >\r\n                             <label\r\n                                 key={size}\r\n                                 className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n+                                onClick={() => handleSizeChange(size)}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={size}\r\n"
                },
                {
                    "date": 1739609488295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from 'react';\r\n+import React, { useState, useEffect } from 'react';\r\n import Grid from '@mui/material/Grid';\r\n \r\n const MenuItemSelected = ({\r\n     selectedItem,\r\n@@ -13,16 +13,19 @@\n     handleQuantityDecrease,\r\n     handleConfirmAdd,\r\n     setNote\r\n }) => {\r\n+    const [selectSize, setSelectedSize] = useState({});\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n         }));\r\n     };\r\n-\r\n+    const handleSelectSize = (size) => {\r\n+        setSelectedSize(size);\r\n+    }\r\n     return (\r\n         <div>\r\n             <div className=\"right-box-header\">\r\n                 <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n@@ -41,9 +44,8 @@\n                         <Grid >\r\n                             <label\r\n                                 key={size}\r\n                                 className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n-                                onClick={() => handleSizeChange(size)}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={size}\r\n@@ -59,9 +61,8 @@\n                 </li>\r\n                 <div>\r\n                     <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                     <ul>\r\n-                        {size}\r\n                     </ul>\r\n                 </div>\r\n \r\n \r\n"
                },
                {
                    "date": 1739609542385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,10 @@\n             [optionGroup]: option\r\n         }));\r\n     };\r\n     const handleSelectSize = (size) => {\r\n+        handleSizeChange(size)\r\n+\r\n         setSelectedSize(size);\r\n     }\r\n     return (\r\n         <div>\r\n@@ -49,9 +51,9 @@\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={size}\r\n                                     checked={selectedSize === size}\r\n-                                    onChange={() => handleSizeChange(size)}\r\n+                                    onChange={() => handleSelectSize(size)}\r\n                                 />\r\n                                 {size}\r\n                             </label>\r\n                             \r\n"
                },
                {
                    "date": 1739609564800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         }));\r\n     };\r\n     const handleSelectSize = (size) => {\r\n         handleSizeChange(size)\r\n-\r\n+        console.log(\"เลือกขนาด : \", size)\r\n         setSelectedSize(size);\r\n     }\r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1739609769286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,12 +21,13 @@\n             ...prevOptions,\r\n             [optionGroup]: option\r\n         }));\r\n     };\r\n-    const handleSelectSize = (size) => {\r\n-        handleSizeChange(size)\r\n-        console.log(\"เลือกขนาด : \", size)\r\n-        setSelectedSize(size);\r\n+    const handleSelectSize = (acc) => {\r\n+        const acc = JSON.parse(acc)\r\n+        handleSizeChange(acc.size)\r\n+        console.log(\"เลือกขนาด : \", acc)\r\n+        setSelectedSize(acc);\r\n     }\r\n     return (\r\n         <div>\r\n             <div className=\"right-box-header\">\r\n@@ -41,19 +42,19 @@\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map(({ size }) => (\r\n+                    {selectedItem?.sizePrices?.map((acc) => (\r\n                         <Grid >\r\n                             <label\r\n                                 key={size}\r\n-                                className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n+                                className={`option-box ${selectedSize === JSON.stringify(acc.size) ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n-                                    value={size}\r\n-                                    checked={selectedSize === size}\r\n-                                    onChange={() => handleSelectSize(size)}\r\n+                                    value={JSON.stringify(acc.size)}\r\n+                                    checked={selectedSize === JSON.stringify(acc.size)}\r\n+                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {size}\r\n                             </label>\r\n                             \r\n"
                },
                {
                    "date": 1739609795613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,12 +22,12 @@\n             [optionGroup]: option\r\n         }));\r\n     };\r\n     const handleSelectSize = (acc) => {\r\n-        const acc = JSON.parse(acc)\r\n-        handleSizeChange(acc.size)\r\n-        console.log(\"เลือกขนาด : \", acc)\r\n-        setSelectedSize(acc);\r\n+        const value = JSON.parse(acc)\r\n+        handleSizeChange(value.size)\r\n+        console.log(\"เลือกขนาด : \", value)\r\n+        setSelectedSize(value);\r\n     }\r\n     return (\r\n         <div>\r\n             <div className=\"right-box-header\">\r\n"
                },
                {
                    "date": 1739609830478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,12 +42,12 @@\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map((acc) => (\r\n+                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n                         <Grid >\r\n                             <label\r\n-                                key={size}\r\n+                                key={index}\r\n                                 className={`option-box ${selectedSize === JSON.stringify(acc.size) ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n"
                },
                {
                    "date": 1739609841739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                                     value={JSON.stringify(acc.size)}\r\n                                     checked={selectedSize === JSON.stringify(acc.size)}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n-                                {size}\r\n+                                {JSON.stringify(acc.size)}\r\n                             </label>\r\n                             \r\n \r\n                         </Grid>\r\n"
                },
                {
                    "date": 1739609856018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n                                     value={JSON.stringify(acc.size)}\r\n                                     checked={selectedSize === JSON.stringify(acc.size)}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n-                                {JSON.stringify(acc.size)}\r\n+                                {acc.size}\r\n                             </label>\r\n                             \r\n \r\n                         </Grid>\r\n"
                },
                {
                    "date": 1739609870217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n                                 className={`option-box ${selectedSize === JSON.stringify(acc.size) ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n-                                    value={JSON.stringify(acc.size)}\r\n+                                    value={acc.size}\r\n                                     checked={selectedSize === JSON.stringify(acc.size)}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {acc.size}\r\n"
                },
                {
                    "date": 1739609884814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n                     {selectedItem?.sizePrices?.map((acc,index) => (\r\n                         <Grid >\r\n                             <label\r\n                                 key={index}\r\n-                                className={`option-box ${selectedSize === JSON.stringify(acc.size) ? 'selected' : ''}`}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={acc.size}\r\n"
                },
                {
                    "date": 1739609894136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={acc.size}\r\n-                                    checked={selectedSize === JSON.stringify(acc.size)}\r\n+                                    checked={selectedSize === acc.size}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {acc.size}\r\n                             </label>\r\n"
                },
                {
                    "date": 1739609919559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,13 +61,13 @@\n \r\n                         </Grid>\r\n                     ))}\r\n                 </li>\r\n-                <div>\r\n+                <Grid>\r\n                     <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                     <ul>\r\n                     </ul>\r\n-                </div>\r\n+                </Grid>\r\n \r\n \r\n                 {/* เลือกจำนวนที่ต้องการ */}\r\n                 <li className=\"option-item\">\r\n"
                },
                {
                    "date": 1739609956617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,12 +61,13 @@\n \r\n                         </Grid>\r\n                     ))}\r\n                 </li>\r\n-                <Grid>\r\n-                    <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n-                    <ul>\r\n-                    </ul>\r\n+                <Grid container spacing={2}>\r\n+                    <Grid item xs={12}>\r\n+                        <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                    </Grid>\r\n+                    \r\n                 </Grid>\r\n \r\n \r\n                 {/* เลือกจำนวนที่ต้องการ */}\r\n"
                },
                {
                    "date": 1739609999343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,16 +61,18 @@\n \r\n                         </Grid>\r\n                     ))}\r\n                 </li>\r\n-                <Grid container spacing={2}>\r\n-                    <Grid item xs={12}>\r\n-                        <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                <li className=\"option-item\">\r\n+                    <Grid container spacing={2}>\r\n+                        <Grid item xs={12}>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                        </Grid>\r\n+                        \r\n                     </Grid>\r\n-                    \r\n-                </Grid>\r\n+                </li>   \r\n+                \r\n \r\n-\r\n                 {/* เลือกจำนวนที่ต้องการ */}\r\n                 <li className=\"option-item\">\r\n                     <div>จำนวน</div>\r\n                     <div className=\"quantity-div\">\r\n"
                },
                {
                    "date": 1739610141917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,12 @@\n     handleQuantityDecrease,\r\n     handleConfirmAdd,\r\n     setNote\r\n }) => {\r\n+    useEffect(() => {\r\n+        handleSelectSize(selectedSize);\r\n+    }, [selectedSize]);\r\n+\r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739610166172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     handleConfirmAdd,\r\n     setNote\r\n }) => {\r\n     useEffect(() => {\r\n-        handleSelectSize(selectedSize);\r\n+        handleSelectSize(JSON.stringify(selectedSize));\r\n     }, [selectedSize]);\r\n \r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n"
                },
                {
                    "date": 1739610188004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     setNote\r\n }) => {\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedSize));\r\n-    }, [selectedSize]);\r\n+    }, []);\r\n \r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739610209408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     handleConfirmAdd,\r\n     setNote\r\n }) => {\r\n     useEffect(() => {\r\n-        handleSelectSize(JSON.stringify(selectedSize));\r\n+        handleSelectSize(JSON.stringify(selectedItem));\r\n     }, []);\r\n \r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n"
                },
                {
                    "date": 1739610255323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     setNote\r\n }) => {\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem));\r\n-    }, []);\r\n+    }, [selectedSize]);\r\n \r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739610261477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     setNote\r\n }) => {\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem));\r\n-    }, [selectedSize]);\r\n+    }, [selectSize]);\r\n \r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739610270301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,13 +13,14 @@\n     handleQuantityDecrease,\r\n     handleConfirmAdd,\r\n     setNote\r\n }) => {\r\n+    const [selectSize, setSelectedSize] = useState({});\r\n+\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem));\r\n     }, [selectSize]);\r\n \r\n-    const [selectSize, setSelectedSize] = useState({});\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739610288708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,14 +51,14 @@\n                     {selectedItem?.sizePrices?.map((acc,index) => (\r\n                         <Grid >\r\n                             <label\r\n                                 key={index}\r\n-                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                                className={`option-box ${selectSize === acc.size ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={acc.size}\r\n-                                    checked={selectedSize === acc.size}\r\n+                                    checked={selectSize === acc.size}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {acc.size}\r\n                             </label>\r\n"
                },
                {
                    "date": 1739610303619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,14 +51,14 @@\n                     {selectedItem?.sizePrices?.map((acc,index) => (\r\n                         <Grid >\r\n                             <label\r\n                                 key={index}\r\n-                                className={`option-box ${selectSize === acc.size ? 'selected' : ''}`}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={acc.size}\r\n-                                    checked={selectSize === acc.size}\r\n+                                    checked={selectedSize === acc.size}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {acc.size}\r\n                             </label>\r\n"
                },
                {
                    "date": 1739610309590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem));\r\n-    }, [selectSize]);\r\n+    }, []);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739610349972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,14 +51,14 @@\n                     {selectedItem?.sizePrices?.map((acc,index) => (\r\n                         <Grid >\r\n                             <label\r\n                                 key={index}\r\n-                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                                className={`option-box ${selectSize === acc.size ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={acc.size}\r\n-                                    checked={selectedSize === acc.size}\r\n+                                    checked={selectSize.size === acc.size}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {acc.size}\r\n                             </label>\r\n"
                },
                {
                    "date": 1739610406314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,142 @@\n+import React, { useState, useEffect } from 'react';\r\n+import Grid from '@mui/material/Grid';\r\n+\r\n+const MenuItemSelected = ({\r\n+    selectedItem,\r\n+    selectedSize,\r\n+    quantity,\r\n+    note,\r\n+    selectedOptions,\r\n+    setSelectedOptions,\r\n+    handleSizeChange,\r\n+    handleQuantityIncrease,\r\n+    handleQuantityDecrease,\r\n+    handleConfirmAdd,\r\n+    setNote\r\n+}) => {\r\n+    const [selectSize, setSelectedSize] = useState({});\r\n+\r\n+    useEffect(() => {\r\n+        handleSelectSize(JSON.stringify(selectedSize));\r\n+    }, []);\r\n+\r\n+\r\n+    const handleOptionChange = (optionGroup, option) => {\r\n+        setSelectedOptions(prevOptions => ({\r\n+            ...prevOptions,\r\n+            [optionGroup]: option\r\n+        }));\r\n+    };\r\n+    const handleSelectSize = (acc) => {\r\n+        const value = JSON.parse(acc)\r\n+        handleSizeChange(value.size)\r\n+        console.log(\"เลือกขนาด : \", value)\r\n+        setSelectedSize(value);\r\n+    }\r\n+    return (\r\n+        <div>\r\n+            <div className=\"right-box-header\">\r\n+                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n+                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n+            </div>\r\n+            <div className=\"right-box-header\">\r\n+                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n+            </div>\r\n+\r\n+\r\n+            <ul>\r\n+                {/* แสดงตัวเลือกขนาด (size) */}\r\n+                <li className=\"option-item\">\r\n+                    <div>ขนาด</div>\r\n+                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n+                        <Grid >\r\n+                            <label\r\n+                                key={index}\r\n+                                className={`option-box ${selectSize === acc.size ? 'selected' : ''}`}\r\n+                            >\r\n+                                <input\r\n+                                    type=\"radio\"\r\n+                                    value={acc.size}\r\n+                                    checked={selectSize.size === acc.size}\r\n+                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n+                                />\r\n+                                {acc.size}\r\n+                            </label>\r\n+                            \r\n+\r\n+                        </Grid>\r\n+                    ))}\r\n+                </li>\r\n+                <li className=\"option-item\">\r\n+                    <Grid container spacing={2}>\r\n+                        <Grid item xs={12}>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                        </Grid>\r\n+                        \r\n+                    </Grid>\r\n+                </li>   \r\n+                \r\n+\r\n+                {/* เลือกจำนวนที่ต้องการ */}\r\n+                <li className=\"option-item\">\r\n+                    <div>จำนวน</div>\r\n+                    <div className=\"quantity-div\">\r\n+                        <button\r\n+                            onClick={handleQuantityDecrease}\r\n+                            className=\"quantity-left-btn\"\r\n+                            disabled={quantity === 1}\r\n+                        >\r\n+                            -\r\n+                        </button>\r\n+                        <span>{quantity}</span>\r\n+                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                    </div>\r\n+                </li>\r\n+\r\n+                {/* Special Options */}\r\n+                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n+                    <li key={customOption._id}>\r\n+                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n+                        <div className=\"option-box-container\">\r\n+                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+                                <label\r\n+                                    key={option}\r\n+                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n+                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                >\r\n+                                    <input\r\n+                                        type=\"radio\"\r\n+                                        name={customOption.label}\r\n+                                        value={option}\r\n+                                        checked={selectedOptions[customOption.label] === option}\r\n+                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                    />\r\n+                                    {option}\r\n+                                </label>\r\n+                            ))}\r\n+                        </div>\r\n+                    </li>\r\n+                ))}\r\n+\r\n+                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n+                <li className=\"option-item-column\">\r\n+                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n+                    <input\r\n+                        type=\"text\"\r\n+                        value={note}\r\n+                        onChange={(e) => setNote(e.target.value)}\r\n+                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n+                        className=\"note-input\"\r\n+                    />\r\n+                </li>\r\n+            </ul>\r\n+\r\n+            <div className=\"menu-action-buttons\">\r\n+                <button className='red-button'>ยกเลิก</button>\r\n+                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default MenuItemSelected;\r\n"
                },
                {
                    "date": 1739610412134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,150 +16,8 @@\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     useEffect(() => {\r\n-        handleSelectSize(JSON.stringify(selectedSize));\r\n-    }, []);\r\n-\r\n-\r\n-    const handleOptionChange = (optionGroup, option) => {\r\n-        setSelectedOptions(prevOptions => ({\r\n-            ...prevOptions,\r\n-            [optionGroup]: option\r\n-        }));\r\n-    };\r\n-    const handleSelectSize = (acc) => {\r\n-        const value = JSON.parse(acc)\r\n-        handleSizeChange(value.size)\r\n-        console.log(\"เลือกขนาด : \", value)\r\n-        setSelectedSize(value);\r\n-    }\r\n-    return (\r\n-        <div>\r\n-            <div className=\"right-box-header\">\r\n-                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n-                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n-            </div>\r\n-            <div className=\"right-box-header\">\r\n-                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n-            </div>\r\n-\r\n-\r\n-            <ul>\r\n-                {/* แสดงตัวเลือกขนาด (size) */}\r\n-                <li className=\"option-item\">\r\n-                    <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n-                        <Grid >\r\n-                            <label\r\n-                                key={index}\r\n-                                className={`option-box ${selectSize === acc.size ? 'selected' : ''}`}\r\n-                            >\r\n-                                <input\r\n-                                    type=\"radio\"\r\n-                                    value={acc.size}\r\n-                                    checked={selectSize.size === acc.size}\r\n-                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n-                                />\r\n-                                {acc.size}\r\n-                            </label>\r\n-                            \r\n-\r\n-                        </Grid>\r\n-                    ))}\r\n-                </li>\r\n-                <li className=\"option-item\">\r\n-                    <Grid container spacing={2}>\r\n-                        <Grid item xs={12}>\r\n-                            <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n-                        </Grid>\r\n-                        \r\n-                    </Grid>\r\n-                </li>   \r\n-                \r\n-\r\n-                {/* เลือกจำนวนที่ต้องการ */}\r\n-                <li className=\"option-item\">\r\n-                    <div>จำนวน</div>\r\n-                    <div className=\"quantity-div\">\r\n-                        <button\r\n-                            onClick={handleQuantityDecrease}\r\n-                            className=\"quantity-left-btn\"\r\n-                            disabled={quantity === 1}\r\n-                        >\r\n-                            -\r\n-                        </button>\r\n-                        <span>{quantity}</span>\r\n-                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n-                    </div>\r\n-                </li>\r\n-\r\n-                {/* Special Options */}\r\n-                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n-                    <li key={customOption._id}>\r\n-                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n-                        <div className=\"option-box-container\">\r\n-                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n-                                <label\r\n-                                    key={option}\r\n-                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n-                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n-                                >\r\n-                                    <input\r\n-                                        type=\"radio\"\r\n-                                        name={customOption.label}\r\n-                                        value={option}\r\n-                                        checked={selectedOptions[customOption.label] === option}\r\n-                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n-                                    />\r\n-                                    {option}\r\n-                                </label>\r\n-                            ))}\r\n-                        </div>\r\n-                    </li>\r\n-                ))}\r\n-\r\n-                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n-                <li className=\"option-item-column\">\r\n-                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n-                    <input\r\n-                        type=\"text\"\r\n-                        value={note}\r\n-                        onChange={(e) => setNote(e.target.value)}\r\n-                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n-                        className=\"note-input\"\r\n-                    />\r\n-                </li>\r\n-            </ul>\r\n-\r\n-            <div className=\"menu-action-buttons\">\r\n-                <button className='red-button'>ยกเลิก</button>\r\n-                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default MenuItemSelected;\r\n-import React, { useState, useEffect } from 'react';\r\n-import Grid from '@mui/material/Grid';\r\n-\r\n-const MenuItemSelected = ({\r\n-    selectedItem,\r\n-    selectedSize,\r\n-    quantity,\r\n-    note,\r\n-    selectedOptions,\r\n-    setSelectedOptions,\r\n-    handleSizeChange,\r\n-    handleQuantityIncrease,\r\n-    handleQuantityDecrease,\r\n-    handleConfirmAdd,\r\n-    setNote\r\n-}) => {\r\n-    const [selectSize, setSelectedSize] = useState({});\r\n-\r\n-    useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem));\r\n     }, []);\r\n \r\n \r\n"
                },
                {
                    "date": 1739610429311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,10 @@\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     useEffect(() => {\r\n+\r\n+        console.log(\"selectedSize : \", selectedSize)\r\n         handleSelectSize(JSON.stringify(selectedItem));\r\n     }, []);\r\n \r\n \r\n"
                },
                {
                    "date": 1739610464836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,9 @@\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     useEffect(() => {\r\n-\r\n-        console.log(\"selectedSize : \", selectedSize)\r\n-        handleSelectSize(JSON.stringify(selectedItem));\r\n+        handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n     }, []);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739610490801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,14 +51,14 @@\n                     {selectedItem?.sizePrices?.map((acc,index) => (\r\n                         <Grid >\r\n                             <label\r\n                                 key={index}\r\n-                                className={`option-box ${selectSize === acc.size ? 'selected' : ''}`}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={acc.size}\r\n-                                    checked={selectSize.size === acc.size}\r\n+                                    checked={selectedSize.size === acc.size}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {acc.size}\r\n                             </label>\r\n"
                },
                {
                    "date": 1739610516643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, []);\r\n+    }, [selectSize]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739610524634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, [selectSize]);\r\n+    }, [selectedSize]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739610608660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,14 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        \r\n+                        {selectSize.ingredients.map((ingredient, index) => (\r\n+                            <Grid item xs={6} key={index}>\r\n+                                <p>{ingredient}</p>\r\n+                            </Grid>\r\n+                        ))\r\n+                        }\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739610654121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,11 +71,11 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize.ingredients.map((ingredient, index) => (\r\n+                        {selectSize.ingredients.map((acc, index) => (\r\n                             <Grid item xs={6} key={index}>\r\n-                                <p>{ingredient}</p>\r\n+                                <p>{acc.newIngredient}</p>\r\n                             </Grid>\r\n                         ))\r\n                         }\r\n                     </Grid>\r\n"
                },
                {
                    "date": 1739610700820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,13 +71,17 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize.ingredients.map((acc, index) => (\r\n-                            <Grid item xs={6} key={index}>\r\n-                                <p>{acc.newIngredient}</p>\r\n-                            </Grid>\r\n-                        ))\r\n+                        {selectSize &&\r\n+                            <>\r\n+                            {selectSize.ingredients.map((acc, index) => (\r\n+                                <Grid item xs={6} key={index}>\r\n+                                    <p>{acc.newIngredient}</p>\r\n+                                </Grid>\r\n+                            ))\r\n+                            }\r\n+                            </>\r\n                         }\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n"
                },
                {
                    "date": 1739610714611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,14 +73,14 @@\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         {selectSize &&\r\n                             <>\r\n-                            {selectSize.ingredients.map((acc, index) => (\r\n-                                <Grid item xs={6} key={index}>\r\n-                                    <p>{acc.newIngredient}</p>\r\n-                                </Grid>\r\n-                            ))\r\n-                            }\r\n+                                {selectSize.ingredients.map((acc, index) => (\r\n+                                    <Grid item xs={6} key={index}>\r\n+                                        <p>{acc.newIngredient}</p>\r\n+                                    </Grid>\r\n+                                ))\r\n+                                }\r\n                             </>\r\n                         }\r\n                     </Grid>\r\n                 </li>   \r\n"
                },
                {
                    "date": 1739610792891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize &&\r\n+                        {selectSize.ingredients.langth &&\r\n                             <>\r\n                                 {selectSize.ingredients.map((acc, index) => (\r\n                                     <Grid item xs={6} key={index}>\r\n                                         <p>{acc.newIngredient}</p>\r\n"
                },
                {
                    "date": 1739610804157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize.ingredients.langth &&\r\n+                        {selectSize.ingredients.length &&\r\n                             <>\r\n                                 {selectSize.ingredients.map((acc, index) => (\r\n                                     <Grid item xs={6} key={index}>\r\n                                         <p>{acc.newIngredient}</p>\r\n"
                },
                {
                    "date": 1739610810601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,18 +71,16 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize.ingredients.length &&\r\n-                            <>\r\n-                                {selectSize.ingredients.map((acc, index) => (\r\n-                                    <Grid item xs={6} key={index}>\r\n-                                        <p>{acc.newIngredient}</p>\r\n-                                    </Grid>\r\n-                                ))\r\n-                                }\r\n-                            </>\r\n-                        }\r\n+                        \r\n+                            {selectSize.ingredients.map((acc, index) => (\r\n+                                <Grid item xs={6} key={index}>\r\n+                                    <p>{acc.newIngredient}</p>\r\n+                                </Grid>\r\n+                            ))\r\n+                            }\r\n+                    \r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739610816124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,11 +73,9 @@\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         \r\n                             {selectSize.ingredients.map((acc, index) => (\r\n-                                <Grid item xs={6} key={index}>\r\n-                                    <p>{acc.newIngredient}</p>\r\n-                                </Grid>\r\n+                           \r\n                             ))\r\n                             }\r\n                     \r\n                     </Grid>\r\n"
                },
                {
                    "date": 1739610823408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,10 @@\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         \r\n                             {selectSize.ingredients.map((acc, index) => (\r\n-                           \r\n+                           <>\\\r\n+                           </>\r\n                             ))\r\n                             }\r\n                     \r\n                     </Grid>\r\n"
                },
                {
                    "date": 1739610844676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,15 +71,18 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        \r\n-                            {selectSize.ingredients.map((acc, index) => (\r\n-                           <>\\\r\n-                           </>\r\n-                            ))\r\n-                            }\r\n-                    \r\n+                        {selectSize != undefined &&\r\n+                            <>\r\n+                                {selectSize.ingredients.map((acc, index) => (\r\n+                                    <Grid item xs={6} key={index}>\r\n+                                        <p>{acc.newIngredient}</p>\r\n+                                    </Grid>\r\n+                                ))\r\n+                                }\r\n+                            </>\r\n+                        }\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739610903019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,17 +71,21 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize != undefined &&\r\n-                            <>\r\n-                                {selectSize.ingredients.map((acc, index) => (\r\n-                                    <Grid item xs={6} key={index}>\r\n-                                        <p>{acc.newIngredient}</p>\r\n-                                    </Grid>\r\n-                                ))\r\n-                                }\r\n+                        {selectSize != {} &&\r\n+                            <>{selectSize.ingredients.length > 0 &&\r\n+                                <>\r\n+                                    {selectSize.ingredients.map((acc, index) => (\r\n+                                        <Grid item xs={6} key={index}>\r\n+                                            <p>{acc.newIngredient}</p>\r\n+                                        </Grid>\r\n+                                    ))\r\n+                                    }\r\n+                                </>\r\n+                            }\r\n                             </>\r\n+                            \r\n                         }\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n"
                },
                {
                    "date": 1739610913375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize != {} &&\r\n+                        {selectSize != undefined &&\r\n                             <>{selectSize.ingredients.length > 0 &&\r\n                                 <>\r\n                                     {selectSize.ingredients.map((acc, index) => (\r\n                                         <Grid item xs={6} key={index}>\r\n"
                },
                {
                    "date": 1739610950309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,22 +71,9 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {selectSize != undefined &&\r\n-                            <>{selectSize.ingredients.length > 0 &&\r\n-                                <>\r\n-                                    {selectSize.ingredients.map((acc, index) => (\r\n-                                        <Grid item xs={6} key={index}>\r\n-                                            <p>{acc.newIngredient}</p>\r\n-                                        </Grid>\r\n-                                    ))\r\n-                                    }\r\n-                                </>\r\n-                            }\r\n-                            </>\r\n-                            \r\n-                        }\r\n+                       \r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739611006315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                       \r\n+                       {selectSize.ingredients[0].newIngredient}\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739611077415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     handleConfirmAdd,\r\n     setNote\r\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n-\r\n+    const [ingredientList, setIngredientList] = useState([]);\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n     }, [selectedSize]);\r\n \r\n@@ -31,8 +31,9 @@\n         const value = JSON.parse(acc)\r\n         handleSizeChange(value.size)\r\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n+        setIngredientList(value.ingredients);\r\n     }\r\n     return (\r\n         <div>\r\n             <div className=\"right-box-header\">\r\n"
                },
                {
                    "date": 1739611137720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,13 @@\n                     <Grid container spacing={2}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                       {selectSize.ingredients[0].newIngredient}\r\n+                        {ingredientList.map((acc) => (\r\n+                            <Grid item xs={6}>\r\n+                                <p>{acc.newIngredient}</p>\r\n+                            </Grid>\r\n+                        ))}\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739611152506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n                         </Grid>\r\n                     ))}\r\n                 </li>\r\n                 <li className=\"option-item\">\r\n-                    <Grid container spacing={2}>\r\n+                    <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         {ingredientList.map((acc) => (\r\n"
                },
                {
                    "date": 1739611183984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         {ingredientList.map((acc) => (\r\n-                            <Grid item xs={6}>\r\n+                            <Grid item xs={6} style={{paddingLeft: '20px'}}>\r\n                                 <p>{acc.newIngredient}</p>\r\n                             </Grid>\r\n                         ))}\r\n                     </Grid>\r\n"
                },
                {
                    "date": 1739611189256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,9 @@\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         {ingredientList.map((acc) => (\r\n-                            <Grid item xs={6} style={{paddingLeft: '20px'}}>\r\n+                            <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n                                 <p>{acc.newIngredient}</p>\r\n                             </Grid>\r\n                         ))}\r\n                     </Grid>\r\n"
                },
                {
                    "date": 1739611243752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, [selectedSize]);\r\n+    }, []);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739611274514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, []);\r\n+    }, [selectedSize]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739611282749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, [selectedSize]);\r\n+    }, [selectSize]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739611290120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, [selectSize]);\r\n+    }, [selectedSize]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739611316900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,15 @@\n     setNote\r\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n+\r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, [selectedSize]);\r\n+    }, []);\r\n \r\n+    useEffect(() => {\r\n+    }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739611397360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n     }, []);\r\n \r\n     useEffect(() => {\r\n+        setIngredientList(selectSize.ingredients);\r\n     }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739611408049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,12 +20,8 @@\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n     }, []);\r\n \r\n-    useEffect(() => {\r\n-        setIngredientList(selectSize.ingredients);\r\n-    }, [selectSize]);\r\n-\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739611638731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,10 @@\n     const [ingredientList, setIngredientList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+\r\n     }, []);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739611656917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     const [ingredientList, setIngredientList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients[0]);\r\n \r\n     }, []);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739611667334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     const [ingredientList, setIngredientList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients[0]);\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n \r\n     }, []);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739611773587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     const [ingredientList, setIngredientList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients[0]);\r\n \r\n     }, []);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n@@ -74,13 +74,17 @@\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {ingredientList.map((acc) => (\r\n-                            <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n-                                <p>{acc.newIngredient}</p>\r\n-                            </Grid>\r\n-                        ))}\r\n+                        {ingredientList.length === 0 && (\r\n+                            <>\r\n+                            {ingredientList.map((acc) => (\r\n+                                <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n+                                    <p>{acc.newIngredient}</p>\r\n+                                </Grid>\r\n+                            ))}\r\n+                            </>\r\n+                        )}\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739611796068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {ingredientList.length === 0 && (\r\n+                        {ingredientList.length > 0 && (\r\n                             <>\r\n                             {ingredientList.map((acc) => (\r\n                                 <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n                                     <p>{acc.newIngredient}</p>\r\n"
                },
                {
                    "date": 1739611860969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,17 +74,15 @@\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {ingredientList.length > 0 && (\r\n-                            <>\r\n+                        <>\r\n                             {ingredientList.map((acc) => (\r\n                                 <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n                                     <p>{acc.newIngredient}</p>\r\n                                 </Grid>\r\n                             ))}\r\n-                            </>\r\n-                        )}\r\n+                        </>\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739611889345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     const [ingredientList, setIngredientList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients[0]);\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n \r\n     }, []);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n@@ -74,15 +74,13 @@\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        <>\r\n-                            {ingredientList.map((acc) => (\r\n-                                <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n-                                    <p>{acc.newIngredient}</p>\r\n-                                </Grid>\r\n-                            ))}\r\n-                        </>\r\n+                        {ingredientList.map((acc) => (\r\n+                            <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n+                                <p>{acc.newIngredient}</p>\r\n+                            </Grid>\r\n+                        ))}\r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739611910772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n \r\n-    }, []);\r\n+    }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739611925925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n \r\n-    }, [selectedSize]);\r\n+    }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739611933208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n \r\n-    }, [selectSize]);\r\n+    }, [selecteselectSizedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739611966655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,14 @@\n     const [ingredientList, setIngredientList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n+\r\n+    }, []);\r\n+    useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n \r\n-    }, [selecteselectSizedSize]);\r\n-\r\n+    }, [selectedSize]);\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739611981914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,13 @@\n     const [ingredientList, setIngredientList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-\r\n     }, []);\r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+    }, [selectedSize]);\r\n \r\n-    }, [selectedSize]);\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739612140652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n     }, []);\r\n+\r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n     }, [selectedSize]);\r\n \r\n@@ -77,9 +78,20 @@\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         {ingredientList.map((acc) => (\r\n                             <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n-                                <p>{acc.newIngredient}</p>\r\n+                               <Grid container justifyContent={'space-between'}>\r\n+                                    <Grid item xs={6}>\r\n+                                        <p>{acc.newIngredient}</p>\r\n+                                    </Grid>\r\n+                                    <Grid item xs={5}>\r\n+                                        <p>{acc.newIngredientQty}</p>\r\n+                                    </Grid>\r\n+                                    <Gird item xs={1}>\r\n+                                        <p>{acc.unit}</p>\r\n+                                    </Gird>\r\n+\r\n+                               </Grid>\r\n                             </Grid>\r\n                         ))}\r\n                     </Grid>\r\n                 </li>   \r\n"
                },
                {
                    "date": 1739612153229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,11 +85,11 @@\n                                     </Grid>\r\n                                     <Grid item xs={5}>\r\n                                         <p>{acc.newIngredientQty}</p>\r\n                                     </Grid>\r\n-                                    <Gird item xs={1}>\r\n+                                    <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n-                                    </Gird>\r\n+                                    </Grid>\r\n \r\n                                </Grid>\r\n                             </Grid>\r\n                         ))}\r\n"
                },
                {
                    "date": 1739612172906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n                         {ingredientList.map((acc) => (\r\n-                            <Grid item xs={6} style={{paddingLeft: '10%'}}>\r\n+                            <Grid item xs={12} style={{paddingLeft: '10%'}}>\r\n                                <Grid container justifyContent={'space-between'}>\r\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739612192818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                                <Grid container justifyContent={'space-between'}>\r\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n-                                    <Grid item xs={5}>\r\n+                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'}>\r\n                                         <p>{acc.newIngredientQty}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n"
                },
                {
                    "date": 1739612218569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                                <Grid container justifyContent={'space-between'}>\r\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n-                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'}>\r\n+                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '10%'}}>\r\n                                         <p>{acc.newIngredientQty}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n"
                },
                {
                    "date": 1739612225615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                                <Grid container justifyContent={'space-between'}>\r\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n-                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '10%'}}>\r\n+                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n                                         <p>{acc.newIngredientQty}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n"
                },
                {
                    "date": 1739614253185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,10 +76,10 @@\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n                         </Grid>\r\n-                        {ingredientList.map((acc) => (\r\n-                            <Grid item xs={12} style={{paddingLeft: '10%'}}>\r\n+                        {ingredientList.map((acc,index) => (\r\n+                            <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n                                <Grid container justifyContent={'space-between'}>\r\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739614276998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n                     {selectedItem?.sizePrices?.map((acc,index) => (\r\n-                        <Grid >\r\n+                        <Grid key={index}>\r\n                             <label\r\n                                 key={index}\r\n                                 className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n                             >\r\n"
                },
                {
                    "date": 1739614458017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                 </li>\r\n                 <li className=\"option-item\">\r\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n-                            <p>รายละเอียดวัตถุดิบที่ใช้</p>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n                         </Grid>\r\n                         {ingredientList.map((acc,index) => (\r\n                             <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n                                <Grid container justifyContent={'space-between'}>\r\n"
                },
                {
                    "date": 1739615320924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,19 +11,28 @@\n     handleSizeChange,\r\n     handleQuantityIncrease,\r\n     handleQuantityDecrease,\r\n     handleConfirmAdd,\r\n-    setNote\r\n+    setNote,\r\n+    ingredientRemain\r\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n+    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n+\r\n     }, []);\r\n \r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        console.log(\"remain\", remain)\r\n+        \r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n@@ -83,9 +92,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty}</p>\r\n+                                        <p>{acc.newIngredientQty}/{acc.newIngredientQty}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739615388210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,10 @@\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n             const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n-            return ingredient\r\n+            console.log(\"ingredient : \", ingredient)\r\n         })\r\n-        console.log(\"remain\", remain)\r\n         \r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739615413541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,12 +25,13 @@\n     }, []);\r\n \r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n-            console.log(\"ingredient : \", ingredient)\r\n-        })\r\n+        console.log(\"ingredientList : \", ingredientList)\r\n+        // const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+        //     const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n+        //     console.log(\"ingredient : \", ingredient)\r\n+        // })\r\n         \r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739615424312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     }, []);\r\n \r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        console.log(\"ingredientList : \", ingredientList)\r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n         // const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n         //     const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n         //     console.log(\"ingredient : \", ingredient)\r\n         // })\r\n"
                },
                {
                    "date": 1739615498018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,14 +20,14 @@\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n+        console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n     }, []);\r\n \r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n         // const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n         //     const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n         //     console.log(\"ingredient : \", ingredient)\r\n         // })\r\n"
                },
                {
                    "date": 1739615511226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,10 @@\n     }, []);\r\n \r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+\r\n         // const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n         //     const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n         //     console.log(\"ingredient : \", ingredient)\r\n         // })\r\n"
                },
                {
                    "date": 1739615527711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,20 +20,20 @@\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-        console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n     }, []);\r\n \r\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n-        // const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-        //     const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n-        //     console.log(\"ingredient : \", ingredient)\r\n-        // })\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n+            console.log(\"ingredient : \", ingredient)\r\n+        })\r\n         \r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739615555263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n         const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            console.log(\"acc : \", acc)\r\n             const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n             console.log(\"ingredient : \", ingredient)\r\n         })\r\n         \r\n"
                },
                {
                    "date": 1739615566135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n         const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n             console.log(\"acc : \", acc)\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.name === acc2.name)\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             console.log(\"ingredient : \", ingredient)\r\n         })\r\n         \r\n     }, [selectedSize]);\r\n"
                },
                {
                    "date": 1739615660877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,12 @@\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n         const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            console.log(\"acc : \", acc)\r\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            console.log(\"ingredient : \", ingredient)\r\n+            return ingredient\r\n         })\r\n-        \r\n+        console.log(\"remain : \", remain)    \r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739615673112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n-        console.log(\"remain : \", remain)    \r\n+        setIngredientRemainList(remain)\r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739615701933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty}/{acc.newIngredientQty}</p>\r\n+                                        <p>{acc.newIngredientQty}/{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739615784010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty}/{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{acc.newIngredientQty*quantity}/{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739615878766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty*quantity}/{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":black }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739615889427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":black }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739616199868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,21 @@\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n     }\r\n+    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n+        const check = ingredientList.map((acc,index) => {\r\n+            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n+                return true\r\n+            }else{\r\n+                return false   \r\n+            }\r\n+                     \r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+    }\r\n+\r\n+\r\n     return (\r\n         <div>\r\n             <div className=\"right-box-header\">\r\n                 <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n"
                },
                {
                    "date": 1739616337896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n+    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n@@ -55,11 +56,10 @@\n                 return true\r\n             }else{\r\n                 return false   \r\n             }\r\n-                     \r\n         })\r\n-        setIngredientRemainList(remain)\r\n+        return check\r\n     }\r\n \r\n \r\n     return (\r\n@@ -107,9 +107,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:checkIngredientOverStock(newIngredientQty,ingredientRemainList[index].remain) ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739616350309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:checkIngredientOverStock(newIngredientQty,ingredientRemainList[index].remain) ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:checkIngredientOverStock(acc.newIngredientQty,ingredientRemainList[index].remain) ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739616374460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,8 @@\n             }else{\r\n                 return false   \r\n             }\r\n         })\r\n-        return check\r\n     }\r\n \r\n \r\n     return (\r\n@@ -107,9 +106,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:checkIngredientOverStock(acc.newIngredientQty,ingredientRemainList[index].remain) ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739616445360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,9 @@\n             }else{\r\n                 return false   \r\n             }\r\n         })\r\n+        console.log(\"check : \", check)\r\n     }\r\n \r\n \r\n     return (\r\n"
                },
                {
                    "date": 1739616506323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n+        checkIngredientOverStock()\r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n@@ -49,9 +50,9 @@\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n     }\r\n-    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n+    const checkIngredientOverStock = () => {\r\n         const check = ingredientList.map((acc,index) => {\r\n             if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n                 return true\r\n             }else{\r\n"
                },
                {
                    "date": 1739616540954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,8 @@\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n-    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n"
                },
                {
                    "date": 1739616609950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,8 @@\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n-        checkIngredientOverStock()\r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739616645299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n+    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n@@ -33,8 +34,9 @@\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n+        checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n@@ -48,9 +50,9 @@\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n     }\r\n-    const checkIngredientOverStock = () => {\r\n+    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n         const check = ingredientList.map((acc,index) => {\r\n             if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n                 return true\r\n             }else{\r\n"
                },
                {
                    "date": 1739616729809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,8 @@\n         })\r\n         console.log(\"check : \", check)\r\n     }\r\n \r\n-\r\n     return (\r\n         <div>\r\n             <div className=\"right-box-header\">\r\n                 <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n"
                },
                {
                    "date": 1739616739100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,10 +70,8 @@\n             </div>\r\n             <div className=\"right-box-header\">\r\n                 {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n             </div>\r\n-\r\n-\r\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n"
                },
                {
                    "date": 1739616890976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,10 @@\n         handleSizeChange(value.size)\r\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n+        checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n+\r\n     }\r\n     const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n         const check = ingredientList.map((acc,index) => {\r\n             if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n"
                },
                {
                    "date": 1739616945489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{acc.newIngredientQty*quantity}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739616963159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{(acc.newIngredientQty*quantity).toFixed(1)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739617028393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{(acc.newIngredientQty*quantity).toFixed(1)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739617083553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n                 return false   \r\n             }\r\n         })\r\n         console.log(\"check : \", check)\r\n+        setIngredientOverStock(check)\r\n     }\r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1739617098103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:ingredientOverStock ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739617116834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:ingredientOverStock ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:ingredientOverStock[index] ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739617214048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,12 @@\n         setIngredientRemainList(remain)\r\n         checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectedSize]);\r\n \r\n+    useEffect(() => {\r\n+        checkIngredientOverStock(ingredientList.ingredients,remain)\r\n+    }, [quantity]);\r\n+\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739617224471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectedSize]);\r\n \r\n     useEffect(() => {\r\n-        checkIngredientOverStock(ingredientList.ingredients,remain)\r\n+        checkIngredientOverStock(ingredientList.ingredients,ingredientRemainList)\r\n     }, [quantity]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739617273076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,11 @@\n         checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectedSize]);\r\n \r\n     useEffect(() => {\r\n-        checkIngredientOverStock(ingredientList.ingredients,ingredientRemainList)\r\n+        if(ingredientRemainList.length > 0){\r\n+            checkIngredientOverStock(ingredientList.ingredients,ingredientRemainList)\r\n+        }\r\n     }, [quantity]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739617297553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,8 @@\n         setIngredientRemainList(remain)\r\n         checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectedSize]);\r\n \r\n-    useEffect(() => {\r\n-        if(ingredientRemainList.length > 0){\r\n-            checkIngredientOverStock(ingredientList.ingredients,ingredientRemainList)\r\n-        }\r\n-    }, [quantity]);\r\n-\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n@@ -114,9 +108,9 @@\n                                     <Grid item xs={6}>\r\n                                         <p>{acc.newIngredient}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:ingredientOverStock[index] ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n                                     </Grid>\r\n                                     <Grid item xs={1}>\r\n                                         <p>{acc.unit}</p>\r\n                                     </Grid>\r\n"
                },
                {
                    "date": 1739617378927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         handleSizeChange(value.size)\r\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n-        checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n+        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n \r\n     }\r\n     const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n         const check = ingredientList.map((acc,index) => {\r\n"
                },
                {
                    "date": 1739617634771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,14 +29,14 @@\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-        checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n+        // const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+        //     const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+        //     return ingredient\r\n+        // })\r\n+        // setIngredientRemainList(remain)\r\n+        // checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739617689286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,14 +29,14 @@\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n-        // const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-        //     const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-        //     return ingredient\r\n-        // })\r\n-        // setIngredientRemainList(remain)\r\n-        // checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+        checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739617725322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,14 +29,9 @@\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-        checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n+      \r\n     }, [selectedSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739617736509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,193 @@\n+import React, { useState, useEffect } from 'react';\r\n+import Grid from '@mui/material/Grid';\r\n+\r\n+const MenuItemSelected = ({\r\n+    selectedItem,\r\n+    selectedSize,\r\n+    quantity,\r\n+    note,\r\n+    selectedOptions,\r\n+    setSelectedOptions,\r\n+    handleSizeChange,\r\n+    handleQuantityIncrease,\r\n+    handleQuantityDecrease,\r\n+    handleConfirmAdd,\r\n+    setNote,\r\n+    ingredientRemain\r\n+}) => {\r\n+    const [selectSize, setSelectedSize] = useState({});\r\n+    const [ingredientList, setIngredientList] = useState([]);\r\n+    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n+    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n+        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n+\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+        checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n+    }, [selectedSize]);\r\n+\r\n+    const handleOptionChange = (optionGroup, option) => {\r\n+        setSelectedOptions(prevOptions => ({\r\n+            ...prevOptions,\r\n+            [optionGroup]: option\r\n+        }));\r\n+    };\r\n+    const handleSelectSize = (acc) => {\r\n+        const value = JSON.parse(acc)\r\n+        handleSizeChange(value.size)\r\n+        console.log(\"เลือกขนาด : \", value)\r\n+        setSelectedSize(value);\r\n+        setIngredientList(value.ingredients);\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+        \r\n+        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n+\r\n+    }\r\n+    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n+        const check = ingredientList.map((acc,index) => {\r\n+            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n+                return true\r\n+            }else{\r\n+                return false   \r\n+            }\r\n+        })\r\n+        console.log(\"check : \", check)\r\n+        setIngredientOverStock(check)\r\n+    }\r\n+\r\n+    return (\r\n+        <div>\r\n+            <div className=\"right-box-header\">\r\n+                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n+                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n+            </div>\r\n+            <div className=\"right-box-header\">\r\n+                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n+            </div>\r\n+            <ul>\r\n+                {/* แสดงตัวเลือกขนาด (size) */}\r\n+                <li className=\"option-item\">\r\n+                    <div>ขนาด</div>\r\n+                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n+                        <Grid key={index}>\r\n+                            <label\r\n+                                key={index}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                            >\r\n+                                <input\r\n+                                    type=\"radio\"\r\n+                                    value={acc.size}\r\n+                                    checked={selectedSize.size === acc.size}\r\n+                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n+                                />\r\n+                                {acc.size}\r\n+                            </label>\r\n+                            \r\n+\r\n+                        </Grid>\r\n+                    ))}\r\n+                </li>\r\n+                <li className=\"option-item\">\r\n+                    <Grid container spacing={1}>\r\n+                        <Grid item xs={12}>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n+                        </Grid>\r\n+                        {ingredientList.map((acc,index) => (\r\n+                            <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n+                               <Grid container justifyContent={'space-between'}>\r\n+                                    <Grid item xs={6}>\r\n+                                        <p>{acc.newIngredient}</p>\r\n+                                    </Grid>\r\n+                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n+                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                    </Grid>\r\n+                                    <Grid item xs={1}>\r\n+                                        <p>{acc.unit}</p>\r\n+                                    </Grid>\r\n+\r\n+                               </Grid>\r\n+                            </Grid>\r\n+                        ))}\r\n+                    </Grid>\r\n+                </li>   \r\n+                \r\n+\r\n+                {/* เลือกจำนวนที่ต้องการ */}\r\n+                <li className=\"option-item\">\r\n+                    <div>จำนวน</div>\r\n+                    <div className=\"quantity-div\">\r\n+                        <button\r\n+                            onClick={handleQuantityDecrease}\r\n+                            className=\"quantity-left-btn\"\r\n+                            disabled={quantity === 1}\r\n+                        >\r\n+                            -\r\n+                        </button>\r\n+                        <span>{quantity}</span>\r\n+                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                    </div>\r\n+                </li>\r\n+\r\n+                {/* Special Options */}\r\n+                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n+                    <li key={customOption._id}>\r\n+                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n+                        <div className=\"option-box-container\">\r\n+                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+                                <label\r\n+                                    key={option}\r\n+                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n+                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                >\r\n+                                    <input\r\n+                                        type=\"radio\"\r\n+                                        name={customOption.label}\r\n+                                        value={option}\r\n+                                        checked={selectedOptions[customOption.label] === option}\r\n+                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                    />\r\n+                                    {option}\r\n+                                </label>\r\n+                            ))}\r\n+                        </div>\r\n+                    </li>\r\n+                ))}\r\n+\r\n+                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n+                <li className=\"option-item-column\">\r\n+                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n+                    <input\r\n+                        type=\"text\"\r\n+                        value={note}\r\n+                        onChange={(e) => setNote(e.target.value)}\r\n+                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n+                        className=\"note-input\"\r\n+                    />\r\n+                </li>\r\n+            </ul>\r\n+\r\n+            <div className=\"menu-action-buttons\">\r\n+                <button className='red-button'>ยกเลิก</button>\r\n+                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default MenuItemSelected;\r\n"
                },
                {
                    "date": 1739617754287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,10 @@\n         handleSizeChange(value.size)\r\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+\r\n+        const remain = value.ingredients.map((acc) => {\r\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n@@ -190,186 +191,4 @@\n     );\r\n };\r\n \r\n export default MenuItemSelected;\r\n-import React, { useState, useEffect } from 'react';\r\n-import Grid from '@mui/material/Grid';\r\n-\r\n-const MenuItemSelected = ({\r\n-    selectedItem,\r\n-    selectedSize,\r\n-    quantity,\r\n-    note,\r\n-    selectedOptions,\r\n-    setSelectedOptions,\r\n-    handleSizeChange,\r\n-    handleQuantityIncrease,\r\n-    handleQuantityDecrease,\r\n-    handleConfirmAdd,\r\n-    setNote,\r\n-    ingredientRemain\r\n-}) => {\r\n-    const [selectSize, setSelectedSize] = useState({});\r\n-    const [ingredientList, setIngredientList] = useState([]);\r\n-    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n-    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n-\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n-\r\n-      \r\n-    }, [selectedSize]);\r\n-\r\n-    const handleOptionChange = (optionGroup, option) => {\r\n-        setSelectedOptions(prevOptions => ({\r\n-            ...prevOptions,\r\n-            [optionGroup]: option\r\n-        }));\r\n-    };\r\n-    const handleSelectSize = (acc) => {\r\n-        const value = JSON.parse(acc)\r\n-        handleSizeChange(value.size)\r\n-        console.log(\"เลือกขนาด : \", value)\r\n-        setSelectedSize(value);\r\n-        setIngredientList(value.ingredients);\r\n-        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n-\r\n-    }\r\n-    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n-        const check = ingredientList.map((acc,index) => {\r\n-            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n-                return true\r\n-            }else{\r\n-                return false   \r\n-            }\r\n-        })\r\n-        console.log(\"check : \", check)\r\n-        setIngredientOverStock(check)\r\n-    }\r\n-\r\n-    return (\r\n-        <div>\r\n-            <div className=\"right-box-header\">\r\n-                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n-                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n-            </div>\r\n-            <div className=\"right-box-header\">\r\n-                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n-            </div>\r\n-            <ul>\r\n-                {/* แสดงตัวเลือกขนาด (size) */}\r\n-                <li className=\"option-item\">\r\n-                    <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n-                        <Grid key={index}>\r\n-                            <label\r\n-                                key={index}\r\n-                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n-                            >\r\n-                                <input\r\n-                                    type=\"radio\"\r\n-                                    value={acc.size}\r\n-                                    checked={selectedSize.size === acc.size}\r\n-                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n-                                />\r\n-                                {acc.size}\r\n-                            </label>\r\n-                            \r\n-\r\n-                        </Grid>\r\n-                    ))}\r\n-                </li>\r\n-                <li className=\"option-item\">\r\n-                    <Grid container spacing={1}>\r\n-                        <Grid item xs={12}>\r\n-                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n-                        </Grid>\r\n-                        {ingredientList.map((acc,index) => (\r\n-                            <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n-                               <Grid container justifyContent={'space-between'}>\r\n-                                    <Grid item xs={6}>\r\n-                                        <p>{acc.newIngredient}</p>\r\n-                                    </Grid>\r\n-                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n-                                    </Grid>\r\n-                                    <Grid item xs={1}>\r\n-                                        <p>{acc.unit}</p>\r\n-                                    </Grid>\r\n-\r\n-                               </Grid>\r\n-                            </Grid>\r\n-                        ))}\r\n-                    </Grid>\r\n-                </li>   \r\n-                \r\n-\r\n-                {/* เลือกจำนวนที่ต้องการ */}\r\n-                <li className=\"option-item\">\r\n-                    <div>จำนวน</div>\r\n-                    <div className=\"quantity-div\">\r\n-                        <button\r\n-                            onClick={handleQuantityDecrease}\r\n-                            className=\"quantity-left-btn\"\r\n-                            disabled={quantity === 1}\r\n-                        >\r\n-                            -\r\n-                        </button>\r\n-                        <span>{quantity}</span>\r\n-                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n-                    </div>\r\n-                </li>\r\n-\r\n-                {/* Special Options */}\r\n-                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n-                    <li key={customOption._id}>\r\n-                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n-                        <div className=\"option-box-container\">\r\n-                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n-                                <label\r\n-                                    key={option}\r\n-                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n-                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n-                                >\r\n-                                    <input\r\n-                                        type=\"radio\"\r\n-                                        name={customOption.label}\r\n-                                        value={option}\r\n-                                        checked={selectedOptions[customOption.label] === option}\r\n-                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n-                                    />\r\n-                                    {option}\r\n-                                </label>\r\n-                            ))}\r\n-                        </div>\r\n-                    </li>\r\n-                ))}\r\n-\r\n-                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n-                <li className=\"option-item-column\">\r\n-                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n-                    <input\r\n-                        type=\"text\"\r\n-                        value={note}\r\n-                        onChange={(e) => setNote(e.target.value)}\r\n-                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n-                        className=\"note-input\"\r\n-                    />\r\n-                </li>\r\n-            </ul>\r\n-\r\n-            <div className=\"menu-action-buttons\">\r\n-                <button className='red-button'>ยกเลิก</button>\r\n-                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default MenuItemSelected;\r\n"
                },
                {
                    "date": 1739617785577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n         checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n-    }, [selectedSize]);\r\n+    }, []);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739618045609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,15 +29,20 @@\n     useEffect(() => {\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n+        if(selectedItem.sizePrices[0].ingredients.length > 0){\r\n+            const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+                const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+                return ingredient\r\n+            })\r\n+            setIngredientRemainList(remain)\r\n+        }else{\r\n+            setIngredientRemainList([])\r\n+        }\r\n+        \r\n         checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n-    }, []);\r\n+    }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739618067162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,14 @@\n                 const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n                 return ingredient\r\n             })\r\n             setIngredientRemainList(remain)\r\n+            checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n+\r\n         }else{\r\n             setIngredientRemainList([])\r\n         }\r\n         \r\n-        checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n     }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739618165865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n \r\n     }, []);\r\n \r\n     useEffect(() => {\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n         if(selectedItem.sizePrices[0].ingredients.length > 0){\r\n             const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n@@ -38,8 +37,9 @@\n             setIngredientRemainList(remain)\r\n             checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n \r\n         }else{\r\n+            setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n             setIngredientRemainList([])\r\n         }\r\n         \r\n     }, [selectSize]);\r\n"
                },
                {
                    "date": 1739618216593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,14 +56,8 @@\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n \r\n-        const remain = value.ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-        \r\n         // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n \r\n     }\r\n     const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n"
                },
                {
                    "date": 1739618239317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,17 +29,17 @@\n     useEffect(() => {\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n         if(selectedItem.sizePrices[0].ingredients.length > 0){\r\n+           \r\n+\r\n+        }else{\r\n+            setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n             const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n                 const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n                 return ingredient\r\n             })\r\n             setIngredientRemainList(remain)\r\n-            checkIngredientOverStock(selectedItem.sizePrices[0].ingredients,remain)\r\n-\r\n-        }else{\r\n-            setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n             setIngredientRemainList([])\r\n         }\r\n         \r\n     }, [selectSize]);\r\n"
                },
                {
                    "date": 1739618261485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,8 @@\n     useEffect(() => {\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n \r\n         if(selectedItem.sizePrices[0].ingredients.length > 0){\r\n-           \r\n \r\n         }else{\r\n             setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n             const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n"
                },
                {
                    "date": 1739618377974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,24 +107,32 @@\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n                         </Grid>\r\n-                        {ingredientList.map((acc,index) => (\r\n-                            <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n-                               <Grid container justifyContent={'space-between'}>\r\n-                                    <Grid item xs={6}>\r\n-                                        <p>{acc.newIngredient}</p>\r\n-                                    </Grid>\r\n-                                    <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                        <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n-                                    </Grid>\r\n-                                    <Grid item xs={1}>\r\n-                                        <p>{acc.unit}</p>\r\n-                                    </Grid>\r\n+                        {ingredientList.length === 0 \r\n+                        ?<Grid item xs={12}>\r\n+                            <p>ไม่มีวัตถุดิบ</p>\r\n+                        </Grid>\r\n+                        :<>\r\n+                            {ingredientList.map((acc,index) => (\r\n+                                <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n+                                <Grid container justifyContent={'space-between'}>\r\n+                                        <Grid item xs={6}>\r\n+                                            <p>{acc.newIngredient}</p>\r\n+                                        </Grid>\r\n+                                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n+                                            <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        </Grid>\r\n+                                        <Grid item xs={1}>\r\n+                                            <p>{acc.unit}</p>\r\n+                                        </Grid>\r\n \r\n-                               </Grid>\r\n-                            </Grid>\r\n-                        ))}\r\n+                                </Grid>\r\n+                                </Grid>\r\n+                            ))}\r\n+                        </>\r\n+                        }\r\n+                        \r\n                     </Grid>\r\n                 </li>   \r\n                 \r\n \r\n"
                },
                {
                    "date": 1739618405359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,8 @@\n                 const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n                 return ingredient\r\n             })\r\n             setIngredientRemainList(remain)\r\n-            setIngredientRemainList([])\r\n         }\r\n         \r\n     }, [selectSize]);\r\n \r\n"
                },
                {
                    "date": 1739618420481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,13 +32,9 @@\n         if(selectedItem.sizePrices[0].ingredients.length > 0){\r\n \r\n         }else{\r\n             setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-            const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-                const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-                return ingredient\r\n-            })\r\n-            setIngredientRemainList(remain)\r\n+           \r\n         }\r\n         \r\n     }, [selectSize]);\r\n \r\n"
                },
                {
                    "date": 1739618432288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,13 @@\n         if(selectedItem.sizePrices[0].ingredients.length > 0){\r\n \r\n         }else{\r\n             setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-           \r\n+            const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+                const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+                return ingredient\r\n+            })\r\n+            setIngredientRemainList(remain)\r\n         }\r\n         \r\n     }, [selectSize]);\r\n \r\n"
                },
                {
                    "date": 1739618441574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,19 +27,14 @@\n     }, []);\r\n \r\n     useEffect(() => {\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n-\r\n-        if(selectedItem.sizePrices[0].ingredients.length > 0){\r\n-\r\n-        }else{\r\n-            setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-            const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-                const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-                return ingredient\r\n-            })\r\n-            setIngredientRemainList(remain)\r\n-        }\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n         \r\n     }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739618524878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,16 +26,10 @@\n \r\n     }, []);\r\n \r\n     useEffect(() => {\r\n-        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n         \r\n+        \r\n     }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739618590235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,14 @@\n         handleSizeChange(value.size)\r\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n-\r\n+        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+        const remain = value.ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n         // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n \r\n     }\r\n     const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n"
                },
                {
                    "date": 1739618643638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,14 +23,10 @@\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n-    }, []);\r\n+    }, [selectedSize]);\r\n \r\n-    useEffect(() => {\r\n-        \r\n-        \r\n-    }, [selectSize]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1739618678303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n-    }, [selectedSize]);\r\n+    }, [selectSize]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739618685665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n-    }, [selectSize]);\r\n+    }, []);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739618771365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,14 @@\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n     }, []);\r\n \r\n+    useEffect(() => {\r\n+        handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n \r\n+    }, [selectSize]);\r\n+\r\n+\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739618779518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,12 +27,11 @@\n     }, []);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n+    }, []);\r\n \r\n-    }, [selectSize]);\r\n \r\n-\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739618792064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     }, []);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, []);\r\n+    }, [ingredientList]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739618798693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     }, []);\r\n \r\n     useEffect(() => {\r\n         handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, [ingredientList]);\r\n+    }, []);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739618821337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,9 @@\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n     }, []);\r\n \r\n-    useEffect(() => {\r\n-        handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n-    }, []);\r\n \r\n-\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739618979440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,11 @@\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n     const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n \r\n     useEffect(() => {\r\n-        handleSelectSize(JSON.stringify(selectedItem.sizePrices[0]));\r\n+        setSelectedSize(selectedItem.sizePrices[0])\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        handleSizeChange(selectedItem.sizePrices[0].size)\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n \r\n     }, []);\r\n \r\n"
                },
                {
                    "date": 1739619015502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,13 @@\n         setSelectedSize(selectedItem.sizePrices[0])\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n         handleSizeChange(selectedItem.sizePrices[0].size)\r\n         // console.log(\"ingredientRemain : \", ingredientRemain)\r\n-\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n     }, []);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n"
                },
                {
                    "date": 1739619046160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n-    }, []);\r\n+    }, [selectedSize]);\r\n \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n"
                },
                {
                    "date": 1739619060837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,10 @@\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n-    }, [selectedSize]);\r\n+    }, []);\r\n \r\n-\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n"
                },
                {
                    "date": 1739619193292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,198 @@\n+import React, { useState, useEffect } from 'react';\r\n+import Grid from '@mui/material/Grid';\r\n+\r\n+const MenuItemSelected = ({\r\n+    selectedItem,\r\n+    selectedSize,\r\n+    quantity,\r\n+    note,\r\n+    selectedOptions,\r\n+    setSelectedOptions,\r\n+    handleSizeChange,\r\n+    handleQuantityIncrease,\r\n+    handleQuantityDecrease,\r\n+    handleConfirmAdd,\r\n+    setNote,\r\n+    ingredientRemain\r\n+}) => {\r\n+    const [selectSize, setSelectedSize] = useState({});\r\n+    const [ingredientList, setIngredientList] = useState([]);\r\n+    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n+    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        setSelectedSize(selectedItem.sizePrices[0])\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        handleSizeChange(selectedItem.sizePrices[0].size)\r\n+        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+    }, [selectedSize]);\r\n+\r\n+    const handleOptionChange = (optionGroup, option) => {\r\n+        setSelectedOptions(prevOptions => ({\r\n+            ...prevOptions,\r\n+            [optionGroup]: option\r\n+        }));\r\n+    };\r\n+    const handleSelectSize = (acc) => {\r\n+        const value = JSON.parse(acc)\r\n+        console.log(\"เลือกขนาด : \", value)\r\n+        setSelectedSize(value);\r\n+        setIngredientList(value.ingredients);\r\n+        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+        const remain = value.ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n+\r\n+    }\r\n+    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n+        const check = ingredientList.map((acc,index) => {\r\n+            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n+                return true\r\n+            }else{\r\n+                return false   \r\n+            }\r\n+        })\r\n+        console.log(\"check : \", check)\r\n+        setIngredientOverStock(check)\r\n+    }\r\n+\r\n+    return (\r\n+        <div>\r\n+            <div className=\"right-box-header\">\r\n+                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n+                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n+            </div>\r\n+            <div className=\"right-box-header\">\r\n+                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n+            </div>\r\n+            <ul>\r\n+                {/* แสดงตัวเลือกขนาด (size) */}\r\n+                <li className=\"option-item\">\r\n+                    <div>ขนาด</div>\r\n+                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n+                        <Grid key={index}>\r\n+                            <label\r\n+                                key={index}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                            >\r\n+                                <input\r\n+                                    type=\"radio\"\r\n+                                    value={acc.size}\r\n+                                    checked={selectedSize.size === acc.size}\r\n+                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n+                                />\r\n+                                {acc.size}\r\n+                            </label>\r\n+                            \r\n+\r\n+                        </Grid>\r\n+                    ))}\r\n+                </li>\r\n+                <li className=\"option-item\">\r\n+                    <Grid container spacing={1}>\r\n+                        <Grid item xs={12}>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n+                        </Grid>\r\n+                        {ingredientList.length === 0 \r\n+                        ?<Grid item xs={12}>\r\n+                            <p>ไม่มีวัตถุดิบ</p>\r\n+                        </Grid>\r\n+                        :<>\r\n+                            {ingredientList.map((acc,index) => (\r\n+                                <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n+                                <Grid container justifyContent={'space-between'}>\r\n+                                        <Grid item xs={6}>\r\n+                                            <p>{acc.newIngredient}</p>\r\n+                                        </Grid>\r\n+                                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n+                                            <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        </Grid>\r\n+                                        <Grid item xs={1}>\r\n+                                            <p>{acc.unit}</p>\r\n+                                        </Grid>\r\n+\r\n+                                </Grid>\r\n+                                </Grid>\r\n+                            ))}\r\n+                        </>\r\n+                        }\r\n+                        \r\n+                    </Grid>\r\n+                </li>   \r\n+                \r\n+\r\n+                {/* เลือกจำนวนที่ต้องการ */}\r\n+                <li className=\"option-item\">\r\n+                    <div>จำนวน</div>\r\n+                    <div className=\"quantity-div\">\r\n+                        <button\r\n+                            onClick={handleQuantityDecrease}\r\n+                            className=\"quantity-left-btn\"\r\n+                            disabled={quantity === 1}\r\n+                        >\r\n+                            -\r\n+                        </button>\r\n+                        <span>{quantity}</span>\r\n+                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                    </div>\r\n+                </li>\r\n+\r\n+                {/* Special Options */}\r\n+                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n+                    <li key={customOption._id}>\r\n+                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n+                        <div className=\"option-box-container\">\r\n+                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+                                <label\r\n+                                    key={option}\r\n+                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n+                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                >\r\n+                                    <input\r\n+                                        type=\"radio\"\r\n+                                        name={customOption.label}\r\n+                                        value={option}\r\n+                                        checked={selectedOptions[customOption.label] === option}\r\n+                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                    />\r\n+                                    {option}\r\n+                                </label>\r\n+                            ))}\r\n+                        </div>\r\n+                    </li>\r\n+                ))}\r\n+\r\n+                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n+                <li className=\"option-item-column\">\r\n+                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n+                    <input\r\n+                        type=\"text\"\r\n+                        value={note}\r\n+                        onChange={(e) => setNote(e.target.value)}\r\n+                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n+                        className=\"note-input\"\r\n+                    />\r\n+                </li>\r\n+            </ul>\r\n+\r\n+            <div className=\"menu-action-buttons\">\r\n+                <button className='red-button'>ยกเลิก</button>\r\n+                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n+            </div>\r\n+        </div>\r\n+    );\r\n+};\r\n+\r\n+export default MenuItemSelected;\r\n"
                },
                {
                    "date": 1739619223626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,214 +31,16 @@\n         })\r\n         setIngredientRemainList(remain)\r\n     }, []);\r\n \r\n-    useEffect(() => {\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-    }, [selectedSize]);\r\n-\r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n         }));\r\n     };\r\n     const handleSelectSize = (acc) => {\r\n         const value = JSON.parse(acc)\r\n-        console.log(\"เลือกขนาด : \", value)\r\n-        setSelectedSize(value);\r\n-        setIngredientList(value.ingredients);\r\n-        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n-        const remain = value.ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n-\r\n-    }\r\n-    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n-        const check = ingredientList.map((acc,index) => {\r\n-            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n-                return true\r\n-            }else{\r\n-                return false   \r\n-            }\r\n-        })\r\n-        console.log(\"check : \", check)\r\n-        setIngredientOverStock(check)\r\n-    }\r\n-\r\n-    return (\r\n-        <div>\r\n-            <div className=\"right-box-header\">\r\n-                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n-                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n-            </div>\r\n-            <div className=\"right-box-header\">\r\n-                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n-            </div>\r\n-            <ul>\r\n-                {/* แสดงตัวเลือกขนาด (size) */}\r\n-                <li className=\"option-item\">\r\n-                    <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n-                        <Grid key={index}>\r\n-                            <label\r\n-                                key={index}\r\n-                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n-                            >\r\n-                                <input\r\n-                                    type=\"radio\"\r\n-                                    value={acc.size}\r\n-                                    checked={selectedSize.size === acc.size}\r\n-                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n-                                />\r\n-                                {acc.size}\r\n-                            </label>\r\n-                            \r\n-\r\n-                        </Grid>\r\n-                    ))}\r\n-                </li>\r\n-                <li className=\"option-item\">\r\n-                    <Grid container spacing={1}>\r\n-                        <Grid item xs={12}>\r\n-                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n-                        </Grid>\r\n-                        {ingredientList.length === 0 \r\n-                        ?<Grid item xs={12}>\r\n-                            <p>ไม่มีวัตถุดิบ</p>\r\n-                        </Grid>\r\n-                        :<>\r\n-                            {ingredientList.map((acc,index) => (\r\n-                                <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n-                                <Grid container justifyContent={'space-between'}>\r\n-                                        <Grid item xs={6}>\r\n-                                            <p>{acc.newIngredient}</p>\r\n-                                        </Grid>\r\n-                                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                            <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n-                                        </Grid>\r\n-                                        <Grid item xs={1}>\r\n-                                            <p>{acc.unit}</p>\r\n-                                        </Grid>\r\n-\r\n-                                </Grid>\r\n-                                </Grid>\r\n-                            ))}\r\n-                        </>\r\n-                        }\r\n-                        \r\n-                    </Grid>\r\n-                </li>   \r\n-                \r\n-\r\n-                {/* เลือกจำนวนที่ต้องการ */}\r\n-                <li className=\"option-item\">\r\n-                    <div>จำนวน</div>\r\n-                    <div className=\"quantity-div\">\r\n-                        <button\r\n-                            onClick={handleQuantityDecrease}\r\n-                            className=\"quantity-left-btn\"\r\n-                            disabled={quantity === 1}\r\n-                        >\r\n-                            -\r\n-                        </button>\r\n-                        <span>{quantity}</span>\r\n-                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n-                    </div>\r\n-                </li>\r\n-\r\n-                {/* Special Options */}\r\n-                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n-                    <li key={customOption._id}>\r\n-                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n-                        <div className=\"option-box-container\">\r\n-                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n-                                <label\r\n-                                    key={option}\r\n-                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n-                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n-                                >\r\n-                                    <input\r\n-                                        type=\"radio\"\r\n-                                        name={customOption.label}\r\n-                                        value={option}\r\n-                                        checked={selectedOptions[customOption.label] === option}\r\n-                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n-                                    />\r\n-                                    {option}\r\n-                                </label>\r\n-                            ))}\r\n-                        </div>\r\n-                    </li>\r\n-                ))}\r\n-\r\n-                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n-                <li className=\"option-item-column\">\r\n-                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n-                    <input\r\n-                        type=\"text\"\r\n-                        value={note}\r\n-                        onChange={(e) => setNote(e.target.value)}\r\n-                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n-                        className=\"note-input\"\r\n-                    />\r\n-                </li>\r\n-            </ul>\r\n-\r\n-            <div className=\"menu-action-buttons\">\r\n-                <button className='red-button'>ยกเลิก</button>\r\n-                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n-            </div>\r\n-        </div>\r\n-    );\r\n-};\r\n-\r\n-export default MenuItemSelected;\r\n-import React, { useState, useEffect } from 'react';\r\n-import Grid from '@mui/material/Grid';\r\n-\r\n-const MenuItemSelected = ({\r\n-    selectedItem,\r\n-    selectedSize,\r\n-    quantity,\r\n-    note,\r\n-    selectedOptions,\r\n-    setSelectedOptions,\r\n-    handleSizeChange,\r\n-    handleQuantityIncrease,\r\n-    handleQuantityDecrease,\r\n-    handleConfirmAdd,\r\n-    setNote,\r\n-    ingredientRemain\r\n-}) => {\r\n-    const [selectSize, setSelectedSize] = useState({});\r\n-    const [ingredientList, setIngredientList] = useState([]);\r\n-    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n-    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n-\r\n-    useEffect(() => {\r\n-        setSelectedSize(selectedItem.sizePrices[0])\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        handleSizeChange(selectedItem.sizePrices[0].size)\r\n-        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-    }, []);\r\n-\r\n-    const handleOptionChange = (optionGroup, option) => {\r\n-        setSelectedOptions(prevOptions => ({\r\n-            ...prevOptions,\r\n-            [optionGroup]: option\r\n-        }));\r\n-    };\r\n-    const handleSelectSize = (acc) => {\r\n-        const value = JSON.parse(acc)\r\n         handleSizeChange(value.size)\r\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n"
                },
                {
                    "date": 1739619651225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n     const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n+    const [reload, setReload] = useState(false);\r\n \r\n     useEffect(() => {\r\n         setSelectedSize(selectedItem.sizePrices[0])\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n@@ -29,9 +30,9 @@\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n         })\r\n         setIngredientRemainList(remain)\r\n-    }, []);\r\n+    }, [selectedItem]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n@@ -43,8 +44,10 @@\n         handleSizeChange(value.size)\r\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n+\r\n+        \r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n         const remain = value.ingredients.map((acc) => {\r\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n"
                },
                {
                    "date": 1740582840399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         setIngredientOverStock(check)\r\n     }\r\n \r\n     return (\r\n-        <div>\r\n+        <Stack sx={{ minHeight: \"100%\", display: \"flex\" }}>\r\n             <div className=\"right-box-header\">\r\n                 <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n                 <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n             </div>\r\n@@ -190,9 +190,9 @@\n             <div className=\"menu-action-buttons\">\r\n                 <button className='red-button'>ยกเลิก</button>\r\n                 <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n             </div>\r\n-        </div>\r\n+        </Stack>\r\n     );\r\n };\r\n \r\n export default MenuItemSelected;\r\n"
                },
                {
                    "date": 1740582851583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n-import Grid from '@mui/material/Grid';\r\n+import { Grid, Stack } from \"@mui/material\";\r\n \r\n const MenuItemSelected = ({\r\n     selectedItem,\r\n     selectedSize,\r\n"
                },
                {
                    "date": 1740583036703,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,9 +187,9 @@\n                 </li>\r\n             </ul>\r\n \r\n             <div className=\"menu-action-buttons\">\r\n-                <button className='red-button'>ยกเลิก</button>\r\n+                <button className='red-button' onClick={onClose}>ยกเลิก</button>\r\n                 <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n             </div>\r\n         </Stack>\r\n     );\r\n"
                },
                {
                    "date": 1740583041999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n     handleQuantityIncrease,\r\n     handleQuantityDecrease,\r\n     handleConfirmAdd,\r\n     setNote,\r\n-    ingredientRemain\r\n+    ingredientRemain,\r\n+    onClose\r\n }) => {\r\n     const [selectSize, setSelectedSize] = useState({});\r\n     const [ingredientList, setIngredientList] = useState([]);\r\n     const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n"
                },
                {
                    "date": 1740583123603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,15 +70,18 @@\n     }\r\n \r\n     return (\r\n         <Stack sx={{ minHeight: \"100%\", display: \"flex\" }}>\r\n-            <div className=\"right-box-header\">\r\n-                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n-                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n-            </div>\r\n-            <div className=\"right-box-header\">\r\n-                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n-            </div>\r\n+            {/* Header */}\r\n+            <Grid container sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom:\"8px\" }}>\r\n+                <Grid item xs={11}>\r\n+                    <p style={{ fontSize: 24 }}>{selectedItem.name}</p>\r\n+                </Grid>\r\n+                <Grid item xs={1}>\r\n+                    <CloseIcon style={{ fontSize:18, color:\"#ff4b4b\", cursor:\"pointer\" }}onClick={()=>onClose()}/>\r\n+                </Grid>\r\n+                <p style={{ color: \"#777\" }}>{selectedItem.category}</p>\r\n+            </Grid>\r\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n"
                },
                {
                    "date": 1740583135264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import { Grid, Stack } from \"@mui/material\";\r\n+import CloseIcon from '@mui/icons-material/Close';\r\n \r\n const MenuItemSelected = ({\r\n     selectedItem,\r\n     selectedSize,\r\n"
                },
                {
                    "date": 1740583199055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,9 @@\n                     <CloseIcon style={{ fontSize:18, color:\"#ff4b4b\", cursor:\"pointer\" }}onClick={()=>onClose()}/>\r\n                 </Grid>\r\n                 <p style={{ color: \"#777\" }}>{selectedItem.category}</p>\r\n             </Grid>\r\n+            \r\n             <ul>\r\n                 {/* แสดงตัวเลือกขนาด (size) */}\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n"
                },
                {
                    "date": 1740583209819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,203 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Grid, Stack } from \"@mui/material\";\r\n+import CloseIcon from '@mui/icons-material/Close';\r\n+\r\n+const MenuItemSelected = ({\r\n+    selectedItem,\r\n+    selectedSize,\r\n+    quantity,\r\n+    note,\r\n+    selectedOptions,\r\n+    setSelectedOptions,\r\n+    handleSizeChange,\r\n+    handleQuantityIncrease,\r\n+    handleQuantityDecrease,\r\n+    handleConfirmAdd,\r\n+    setNote,\r\n+    ingredientRemain,\r\n+    onClose\r\n+}) => {\r\n+    const [selectSize, setSelectedSize] = useState({});\r\n+    const [ingredientList, setIngredientList] = useState([]);\r\n+    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n+    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n+    const [reload, setReload] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        setSelectedSize(selectedItem.sizePrices[0])\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        handleSizeChange(selectedItem.sizePrices[0].size)\r\n+        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+    }, [selectedItem]);\r\n+\r\n+    const handleOptionChange = (optionGroup, option) => {\r\n+        setSelectedOptions(prevOptions => ({\r\n+            ...prevOptions,\r\n+            [optionGroup]: option\r\n+        }));\r\n+    };\r\n+    const handleSelectSize = (acc) => {\r\n+        const value = JSON.parse(acc)\r\n+        handleSizeChange(value.size)\r\n+        console.log(\"เลือกขนาด : \", value)\r\n+        setSelectedSize(value);\r\n+        setIngredientList(value.ingredients);\r\n+\r\n+        \r\n+        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+        const remain = value.ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n+\r\n+    }\r\n+    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n+        const check = ingredientList.map((acc,index) => {\r\n+            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n+                return true\r\n+            }else{\r\n+                return false   \r\n+            }\r\n+        })\r\n+        console.log(\"check : \", check)\r\n+        setIngredientOverStock(check)\r\n+    }\r\n+\r\n+    return (\r\n+        <Stack sx={{ minHeight: \"100%\", display: \"flex\" }}>\r\n+            {/* Header */}\r\n+            <Grid container sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom:\"8px\" }}>\r\n+                <Grid item xs={11}>\r\n+                    <p style={{ fontSize: 24 }}>{selectedItem.name}</p>\r\n+                </Grid>\r\n+                <Grid item xs={1}>\r\n+                    <CloseIcon style={{ fontSize:18, color:\"#ff4b4b\", cursor:\"pointer\" }}onClick={()=>onClose()}/>\r\n+                </Grid>\r\n+                <p style={{ color: \"#777\" }}>{selectedItem.category}</p>\r\n+            </Grid>\r\n+\r\n+            <ul>\r\n+                <li className=\"option-item\">\r\n+                    <div>ขนาด</div>\r\n+                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n+                        <Grid key={index}>\r\n+                            <label\r\n+                                key={index}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                            >\r\n+                                <input\r\n+                                    type=\"radio\"\r\n+                                    value={acc.size}\r\n+                                    checked={selectedSize.size === acc.size}\r\n+                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n+                                />\r\n+                                {acc.size}\r\n+                            </label>\r\n+                            \r\n+\r\n+                        </Grid>\r\n+                    ))}\r\n+                </li>\r\n+                <li className=\"option-item\">\r\n+                    <Grid container spacing={1}>\r\n+                        <Grid item xs={12}>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n+                        </Grid>\r\n+                        {ingredientList.length === 0 \r\n+                        ?<Grid item xs={12}>\r\n+                            <p>ไม่มีวัตถุดิบ</p>\r\n+                        </Grid>\r\n+                        :<>\r\n+                            {ingredientList.map((acc,index) => (\r\n+                                <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n+                                <Grid container justifyContent={'space-between'}>\r\n+                                        <Grid item xs={6}>\r\n+                                            <p>{acc.newIngredient}</p>\r\n+                                        </Grid>\r\n+                                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n+                                            <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                        </Grid>\r\n+                                        <Grid item xs={1}>\r\n+                                            <p>{acc.unit}</p>\r\n+                                        </Grid>\r\n+\r\n+                                </Grid>\r\n+                                </Grid>\r\n+                            ))}\r\n+                        </>\r\n+                        }\r\n+                        \r\n+                    </Grid>\r\n+                </li>   \r\n+                \r\n+\r\n+                {/* เลือกจำนวนที่ต้องการ */}\r\n+                <li className=\"option-item\">\r\n+                    <div>จำนวน</div>\r\n+                    <div className=\"quantity-div\">\r\n+                        <button\r\n+                            onClick={handleQuantityDecrease}\r\n+                            className=\"quantity-left-btn\"\r\n+                            disabled={quantity === 1}\r\n+                        >\r\n+                            -\r\n+                        </button>\r\n+                        <span>{quantity}</span>\r\n+                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                    </div>\r\n+                </li>\r\n+\r\n+                {/* Special Options */}\r\n+                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n+                    <li key={customOption._id}>\r\n+                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n+                        <div className=\"option-box-container\">\r\n+                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+                                <label\r\n+                                    key={option}\r\n+                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n+                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                >\r\n+                                    <input\r\n+                                        type=\"radio\"\r\n+                                        name={customOption.label}\r\n+                                        value={option}\r\n+                                        checked={selectedOptions[customOption.label] === option}\r\n+                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                    />\r\n+                                    {option}\r\n+                                </label>\r\n+                            ))}\r\n+                        </div>\r\n+                    </li>\r\n+                ))}\r\n+\r\n+                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n+                <li className=\"option-item-column\">\r\n+                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n+                    <input\r\n+                        type=\"text\"\r\n+                        value={note}\r\n+                        onChange={(e) => setNote(e.target.value)}\r\n+                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n+                        className=\"note-input\"\r\n+                    />\r\n+                </li>\r\n+            </ul>\r\n+\r\n+            <div className=\"menu-action-buttons\">\r\n+                <button className='red-button' onClick={onClose}>ยกเลิก</button>\r\n+                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n+            </div>\r\n+        </Stack>\r\n+    );\r\n+};\r\n+\r\n+export default MenuItemSelected;\r\n"
                },
                {
                    "date": 1740583239713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n \r\n-        \r\n+\r\n         // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n         const remain = value.ingredients.map((acc) => {\r\n             const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n             return ingredient\r\n@@ -58,13 +58,13 @@\n         // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n \r\n     }\r\n     const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n-        const check = ingredientList.map((acc,index) => {\r\n-            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n+        const check = ingredientList.map((acc, index) => {\r\n+            if (acc.newIngredientQty * quantity > ingredientRemainList[index].remain) {\r\n                 return true\r\n-            }else{\r\n-                return false   \r\n+            } else {\r\n+                return false\r\n             }\r\n         })\r\n         console.log(\"check : \", check)\r\n         setIngredientOverStock(check)\r\n@@ -72,330 +72,130 @@\n \r\n     return (\r\n         <Stack sx={{ minHeight: \"100%\", display: \"flex\" }}>\r\n             {/* Header */}\r\n-            <Grid container sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom:\"8px\" }}>\r\n+            <Grid container sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n                 <Grid item xs={11}>\r\n                     <p style={{ fontSize: 24 }}>{selectedItem.name}</p>\r\n                 </Grid>\r\n                 <Grid item xs={1}>\r\n-                    <CloseIcon style={{ fontSize:18, color:\"#ff4b4b\", cursor:\"pointer\" }}onClick={()=>onClose()}/>\r\n+                    <CloseIcon style={{ fontSize: 18, color: \"#ff4b4b\", cursor: \"pointer\" }} onClick={() => onClose()} />\r\n                 </Grid>\r\n                 <p style={{ color: \"#777\" }}>{selectedItem.category}</p>\r\n             </Grid>\r\n \r\n-            <ul>\r\n-                <li className=\"option-item\">\r\n-                    <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n-                        <Grid key={index}>\r\n-                            <label\r\n-                                key={index}\r\n-                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n-                            >\r\n-                                <input\r\n-                                    type=\"radio\"\r\n-                                    value={acc.size}\r\n-                                    checked={selectedSize.size === acc.size}\r\n-                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n-                                />\r\n-                                {acc.size}\r\n-                            </label>\r\n-                            \r\n-\r\n-                        </Grid>\r\n-                    ))}\r\n-                </li>\r\n-                <li className=\"option-item\">\r\n-                    <Grid container spacing={1}>\r\n-                        <Grid item xs={12}>\r\n-                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n-                        </Grid>\r\n-                        {ingredientList.length === 0 \r\n-                        ?<Grid item xs={12}>\r\n-                            <p>ไม่มีวัตถุดิบ</p>\r\n-                        </Grid>\r\n-                        :<>\r\n-                            {ingredientList.map((acc,index) => (\r\n-                                <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n-                                <Grid container justifyContent={'space-between'}>\r\n-                                        <Grid item xs={6}>\r\n-                                            <p>{acc.newIngredient}</p>\r\n-                                        </Grid>\r\n-                                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                            <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n-                                        </Grid>\r\n-                                        <Grid item xs={1}>\r\n-                                            <p>{acc.unit}</p>\r\n-                                        </Grid>\r\n-\r\n-                                </Grid>\r\n-                                </Grid>\r\n-                            ))}\r\n-                        </>\r\n-                        }\r\n-                        \r\n-                    </Grid>\r\n-                </li>   \r\n-                \r\n-\r\n-                {/* เลือกจำนวนที่ต้องการ */}\r\n-                <li className=\"option-item\">\r\n-                    <div>จำนวน</div>\r\n-                    <div className=\"quantity-div\">\r\n-                        <button\r\n-                            onClick={handleQuantityDecrease}\r\n-                            className=\"quantity-left-btn\"\r\n-                            disabled={quantity === 1}\r\n-                        >\r\n-                            -\r\n-                        </button>\r\n-                        <span>{quantity}</span>\r\n-                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n-                    </div>\r\n-                </li>\r\n-\r\n-                {/* Special Options */}\r\n-                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n-                    <li key={customOption._id}>\r\n-                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n-                        <div className=\"option-box-container\">\r\n-                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+            {/* Content */}\r\n+            <Grid sx={{ flexGrow: 1 }}>\r\n+                <ul>\r\n+                    <li className=\"option-item\">\r\n+                        <div>ขนาด</div>\r\n+                        {selectedItem?.sizePrices?.map((acc, index) => (\r\n+                            <Grid key={index}>\r\n                                 <label\r\n-                                    key={option}\r\n-                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n-                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                    key={index}\r\n+                                    className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n                                 >\r\n                                     <input\r\n                                         type=\"radio\"\r\n-                                        name={customOption.label}\r\n-                                        value={option}\r\n-                                        checked={selectedOptions[customOption.label] === option}\r\n-                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                        value={acc.size}\r\n+                                        checked={selectedSize.size === acc.size}\r\n+                                        onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                     />\r\n-                                    {option}\r\n+                                    {acc.size}\r\n                                 </label>\r\n-                            ))}\r\n-                        </div>\r\n-                    </li>\r\n-                ))}\r\n \r\n-                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n-                <li className=\"option-item-column\">\r\n-                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n-                    <input\r\n-                        type=\"text\"\r\n-                        value={note}\r\n-                        onChange={(e) => setNote(e.target.value)}\r\n-                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n-                        className=\"note-input\"\r\n-                    />\r\n-                </li>\r\n-            </ul>\r\n \r\n-            <div className=\"menu-action-buttons\">\r\n-                <button className='red-button' onClick={onClose}>ยกเลิก</button>\r\n-                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n-            </div>\r\n-        </Stack>\r\n-    );\r\n-};\r\n+                            </Grid>\r\n+                        ))}\r\n+                    </li>\r\n+                    <li className=\"option-item\">\r\n+                        <Grid container spacing={1}>\r\n+                            <Grid item xs={12}>\r\n+                                <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n+                            </Grid>\r\n+                            {ingredientList.length === 0\r\n+                                ? <Grid item xs={12}>\r\n+                                    <p>ไม่มีวัตถุดิบ</p>\r\n+                                </Grid>\r\n+                                : <>\r\n+                                    {ingredientList.map((acc, index) => (\r\n+                                        <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n+                                            <Grid container justifyContent={'space-between'}>\r\n+                                                <Grid item xs={6}>\r\n+                                                    <p>{acc.newIngredient}</p>\r\n+                                                </Grid>\r\n+                                                <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n+                                                    <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p><p style={{ color: (acc.newIngredientQty * quantity) > ingredientRemainList[index].remain ? \"red\" : \"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                                </Grid>\r\n+                                                <Grid item xs={1}>\r\n+                                                    <p>{acc.unit}</p>\r\n+                                                </Grid>\r\n \r\n-export default MenuItemSelected;\r\n-import React, { useState, useEffect } from 'react';\r\n-import { Grid, Stack } from \"@mui/material\";\r\n-import CloseIcon from '@mui/icons-material/Close';\r\n+                                            </Grid>\r\n+                                        </Grid>\r\n+                                    ))}\r\n+                                </>\r\n+                            }\r\n \r\n-const MenuItemSelected = ({\r\n-    selectedItem,\r\n-    selectedSize,\r\n-    quantity,\r\n-    note,\r\n-    selectedOptions,\r\n-    setSelectedOptions,\r\n-    handleSizeChange,\r\n-    handleQuantityIncrease,\r\n-    handleQuantityDecrease,\r\n-    handleConfirmAdd,\r\n-    setNote,\r\n-    ingredientRemain,\r\n-    onClose\r\n-}) => {\r\n-    const [selectSize, setSelectedSize] = useState({});\r\n-    const [ingredientList, setIngredientList] = useState([]);\r\n-    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n-    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n-    const [reload, setReload] = useState(false);\r\n+                        </Grid>\r\n+                    </li>\r\n \r\n-    useEffect(() => {\r\n-        setSelectedSize(selectedItem.sizePrices[0])\r\n-        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        handleSizeChange(selectedItem.sizePrices[0].size)\r\n-        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-    }, [selectedItem]);\r\n \r\n-    const handleOptionChange = (optionGroup, option) => {\r\n-        setSelectedOptions(prevOptions => ({\r\n-            ...prevOptions,\r\n-            [optionGroup]: option\r\n-        }));\r\n-    };\r\n-    const handleSelectSize = (acc) => {\r\n-        const value = JSON.parse(acc)\r\n-        handleSizeChange(value.size)\r\n-        console.log(\"เลือกขนาด : \", value)\r\n-        setSelectedSize(value);\r\n-        setIngredientList(value.ingredients);\r\n-\r\n-        \r\n-        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n-        const remain = value.ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n-\r\n-    }\r\n-    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n-        const check = ingredientList.map((acc,index) => {\r\n-            if(acc.newIngredientQty*quantity > ingredientRemainList[index].remain){\r\n-                return true\r\n-            }else{\r\n-                return false   \r\n-            }\r\n-        })\r\n-        console.log(\"check : \", check)\r\n-        setIngredientOverStock(check)\r\n-    }\r\n-\r\n-    return (\r\n-        <Stack sx={{ minHeight: \"100%\", display: \"flex\" }}>\r\n-            {/* Header */}\r\n-            <Grid container sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom:\"8px\" }}>\r\n-                <Grid item xs={11}>\r\n-                    <p style={{ fontSize: 24 }}>{selectedItem.name}</p>\r\n-                </Grid>\r\n-                <Grid item xs={1}>\r\n-                    <CloseIcon style={{ fontSize:18, color:\"#ff4b4b\", cursor:\"pointer\" }}onClick={()=>onClose()}/>\r\n-                </Grid>\r\n-                <p style={{ color: \"#777\" }}>{selectedItem.category}</p>\r\n-            </Grid>\r\n-            \r\n-            <ul>\r\n-                {/* แสดงตัวเลือกขนาด (size) */}\r\n-                <li className=\"option-item\">\r\n-                    <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map((acc,index) => (\r\n-                        <Grid key={index}>\r\n-                            <label\r\n-                                key={index}\r\n-                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                    {/* เลือกจำนวนที่ต้องการ */}\r\n+                    <li className=\"option-item\">\r\n+                        <div>จำนวน</div>\r\n+                        <div className=\"quantity-div\">\r\n+                            <button\r\n+                                onClick={handleQuantityDecrease}\r\n+                                className=\"quantity-left-btn\"\r\n+                                disabled={quantity === 1}\r\n                             >\r\n-                                <input\r\n-                                    type=\"radio\"\r\n-                                    value={acc.size}\r\n-                                    checked={selectedSize.size === acc.size}\r\n-                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n-                                />\r\n-                                {acc.size}\r\n-                            </label>\r\n-                            \r\n+                                -\r\n+                            </button>\r\n+                            <span>{quantity}</span>\r\n+                            <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                        </div>\r\n+                    </li>\r\n \r\n-                        </Grid>\r\n+                    {/* Special Options */}\r\n+                    {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n+                        <li key={customOption._id}>\r\n+                            <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n+                            <div className=\"option-box-container\">\r\n+                                {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+                                    <label\r\n+                                        key={option}\r\n+                                        className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n+                                        onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                    >\r\n+                                        <input\r\n+                                            type=\"radio\"\r\n+                                            name={customOption.label}\r\n+                                            value={option}\r\n+                                            checked={selectedOptions[customOption.label] === option}\r\n+                                            onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                        />\r\n+                                        {option}\r\n+                                    </label>\r\n+                                ))}\r\n+                            </div>\r\n+                        </li>\r\n                     ))}\r\n-                </li>\r\n-                <li className=\"option-item\">\r\n-                    <Grid container spacing={1}>\r\n-                        <Grid item xs={12}>\r\n-                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n-                        </Grid>\r\n-                        {ingredientList.length === 0 \r\n-                        ?<Grid item xs={12}>\r\n-                            <p>ไม่มีวัตถุดิบ</p>\r\n-                        </Grid>\r\n-                        :<>\r\n-                            {ingredientList.map((acc,index) => (\r\n-                                <Grid key={index} item xs={12} style={{paddingLeft: '10%'}}>\r\n-                                <Grid container justifyContent={'space-between'}>\r\n-                                        <Grid item xs={6}>\r\n-                                            <p>{acc.newIngredient}</p>\r\n-                                        </Grid>\r\n-                                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{paddingRight: '5%'}}>\r\n-                                            <p>{(acc.newIngredientQty*quantity).toFixed(2)}/</p><p style={{color:(acc.newIngredientQty*quantity)>ingredientRemainList[index].remain ?\"red\":\"black\" }}>{ingredientRemainList[index].remain}</p>\r\n-                                        </Grid>\r\n-                                        <Grid item xs={1}>\r\n-                                            <p>{acc.unit}</p>\r\n-                                        </Grid>\r\n \r\n-                                </Grid>\r\n-                                </Grid>\r\n-                            ))}\r\n-                        </>\r\n-                        }\r\n-                        \r\n-                    </Grid>\r\n-                </li>   \r\n-                \r\n-\r\n-                {/* เลือกจำนวนที่ต้องการ */}\r\n-                <li className=\"option-item\">\r\n-                    <div>จำนวน</div>\r\n-                    <div className=\"quantity-div\">\r\n-                        <button\r\n-                            onClick={handleQuantityDecrease}\r\n-                            className=\"quantity-left-btn\"\r\n-                            disabled={quantity === 1}\r\n-                        >\r\n-                            -\r\n-                        </button>\r\n-                        <span>{quantity}</span>\r\n-                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n-                    </div>\r\n-                </li>\r\n-\r\n-                {/* Special Options */}\r\n-                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n-                    <li key={customOption._id}>\r\n-                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n-                        <div className=\"option-box-container\">\r\n-                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n-                                <label\r\n-                                    key={option}\r\n-                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n-                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n-                                >\r\n-                                    <input\r\n-                                        type=\"radio\"\r\n-                                        name={customOption.label}\r\n-                                        value={option}\r\n-                                        checked={selectedOptions[customOption.label] === option}\r\n-                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n-                                    />\r\n-                                    {option}\r\n-                                </label>\r\n-                            ))}\r\n-                        </div>\r\n+                    {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n+                    <li className=\"option-item-column\">\r\n+                        <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n+                        <input\r\n+                            type=\"text\"\r\n+                            value={note}\r\n+                            onChange={(e) => setNote(e.target.value)}\r\n+                            placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n+                            className=\"note-input\"\r\n+                        />\r\n                     </li>\r\n-                ))}\r\n+                </ul>\r\n+            </Grid>\r\n \r\n-                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n-                <li className=\"option-item-column\">\r\n-                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n-                    <input\r\n-                        type=\"text\"\r\n-                        value={note}\r\n-                        onChange={(e) => setNote(e.target.value)}\r\n-                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n-                        className=\"note-input\"\r\n-                    />\r\n-                </li>\r\n-            </ul>\r\n \r\n             <div className=\"menu-action-buttons\">\r\n                 <button className='red-button' onClick={onClose}>ยกเลิก</button>\r\n                 <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n"
                },
                {
                    "date": 1740583250404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,13 @@\n                     </li>\r\n                 </ul>\r\n             </Grid>\r\n \r\n-\r\n+            {/* Action Buttons */}\r\n+            <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n+                <button className=\"blue-button\" onClick={() => onEdit(selectedItem)}>แก้ไขรายละเอียด</button>\r\n+                <button className=\"red-button\" onClick={() => handleClickConfirm(selectedItem)}> ลบเมนูทิ้ง</button>\r\n+            </Grid>\r\n             <div className=\"menu-action-buttons\">\r\n                 <button className='red-button' onClick={onClose}>ยกเลิก</button>\r\n                 <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n             </div>\r\n"
                },
                {
                    "date": 1740583260431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,15 +196,11 @@\n             </Grid>\r\n \r\n             {/* Action Buttons */}\r\n             <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n-                <button className=\"blue-button\" onClick={() => onEdit(selectedItem)}>แก้ไขรายละเอียด</button>\r\n-                <button className=\"red-button\" onClick={() => handleClickConfirm(selectedItem)}> ลบเมนูทิ้ง</button>\r\n-            </Grid>\r\n-            <div className=\"menu-action-buttons\">\r\n                 <button className='red-button' onClick={onClose}>ยกเลิก</button>\r\n                 <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n-            </div>\r\n+            </Grid>\r\n         </Stack>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740584073964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,18 +23,23 @@\n     const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n     const [reload, setReload] = useState(false);\r\n \r\n     useEffect(() => {\r\n-        setSelectedSize(selectedItem.sizePrices[0])\r\n+        setSelectedSize(selectedItem.sizePrices[0]);\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        handleSizeChange(selectedItem.sizePrices[0].size)\r\n-        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n-        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-    }, [selectedItem]);\r\n+        handleSizeChange(selectedItem.sizePrices[0].size);\r\n+    \r\n+        if (selectedItem.sizePrices[0].ingredients.length > 0) {\r\n+            const remain = selectedItem.sizePrices[0].ingredients\r\n+                .map((acc) => ingredientRemain.find((acc2) => acc.newIngredient === acc2.name))\r\n+                .filter(Boolean); // กรองค่าที่เป็น undefined ออก\r\n+    \r\n+            setIngredientRemainList(remain);\r\n+        } else {\r\n+            setIngredientRemainList([]); // ถ้าไม่มีวัตถุดิบ ก็ให้เป็นอาร์เรย์ว่าง\r\n+        }\r\n+    }, [selectedItem, ingredientRemain]);\r\n+    \r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n"
                },
                {
                    "date": 1740584082774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,24 +46,24 @@\n             [optionGroup]: option\r\n         }));\r\n     };\r\n     const handleSelectSize = (acc) => {\r\n-        const value = JSON.parse(acc)\r\n-        handleSizeChange(value.size)\r\n-        console.log(\"เลือกขนาด : \", value)\r\n+        const value = JSON.parse(acc);\r\n+        handleSizeChange(value.size);\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n-\r\n-\r\n-        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n-        const remain = value.ingredients.map((acc) => {\r\n-            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n-            return ingredient\r\n-        })\r\n-        setIngredientRemainList(remain)\r\n-        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n-\r\n-    }\r\n+    \r\n+        if (value.ingredients.length > 0) {\r\n+            const remain = value.ingredients\r\n+                .map((acc) => ingredientRemain.find((acc2) => acc.newIngredient === acc2.name))\r\n+                .filter(Boolean); // กรองค่าที่เป็น undefined ออก\r\n+    \r\n+            setIngredientRemainList(remain);\r\n+        } else {\r\n+            setIngredientRemainList([]);\r\n+        }\r\n+    };\r\n+    \r\n     const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n         const check = ingredientList.map((acc, index) => {\r\n             if (acc.newIngredientQty * quantity > ingredientRemainList[index].remain) {\r\n                 return true\r\n"
                },
                {
                    "date": 1740584100432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,31 +116,37 @@\n                         <Grid container spacing={1}>\r\n                             <Grid item xs={12}>\r\n                                 <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n                             </Grid>\r\n-                            {ingredientList.length === 0\r\n-                                ? <Grid item xs={12}>\r\n-                                    <p>ไม่มีวัตถุดิบ</p>\r\n-                                </Grid>\r\n-                                : <>\r\n-                                    {ingredientList.map((acc, index) => (\r\n-                                        <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n-                                            <Grid container justifyContent={'space-between'}>\r\n-                                                <Grid item xs={6}>\r\n-                                                    <p>{acc.newIngredient}</p>\r\n-                                                </Grid>\r\n-                                                <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n-                                                    <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p><p style={{ color: (acc.newIngredientQty * quantity) > ingredientRemainList[index].remain ? \"red\" : \"black\" }}>{ingredientRemainList[index].remain}</p>\r\n-                                                </Grid>\r\n-                                                <Grid item xs={1}>\r\n-                                                    <p>{acc.unit}</p>\r\n-                                                </Grid>\r\n+                            {ingredientList.length === 0 || ingredientRemainList.length === 0\r\n+    ? <Grid item xs={12}>\r\n+        <p>ไม่มีวัตถุดิบ</p>\r\n+    </Grid>\r\n+    : <>\r\n+        {ingredientList.map((acc, index) => {\r\n+            const remainData = ingredientRemainList[index] || { remain: 0 }; // กำหนดค่าเริ่มต้นให้ไม่ error\r\n+            return (\r\n+                <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n+                    <Grid container justifyContent={'space-between'}>\r\n+                        <Grid item xs={6}>\r\n+                            <p>{acc.newIngredient}</p>\r\n+                        </Grid>\r\n+                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n+                            <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p>\r\n+                            <p style={{ color: (acc.newIngredientQty * quantity) > remainData.remain ? \"red\" : \"black\" }}>\r\n+                                {remainData.remain}\r\n+                            </p>\r\n+                        </Grid>\r\n+                        <Grid item xs={1}>\r\n+                            <p>{acc.unit}</p>\r\n+                        </Grid>\r\n+                    </Grid>\r\n+                </Grid>\r\n+            );\r\n+        })}\r\n+    </>\r\n+}\r\n \r\n-                                            </Grid>\r\n-                                        </Grid>\r\n-                                    ))}\r\n-                                </>\r\n-                            }\r\n \r\n                         </Grid>\r\n                     </li>\r\n \r\n"
                },
                {
                    "date": 1740584157092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,47 +23,42 @@\n     const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n     const [reload, setReload] = useState(false);\r\n \r\n     useEffect(() => {\r\n-        setSelectedSize(selectedItem.sizePrices[0]);\r\n+        setSelectedSize(selectedItem.sizePrices[0])\r\n         setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n-        handleSizeChange(selectedItem.sizePrices[0].size);\r\n-    \r\n-        if (selectedItem.sizePrices[0].ingredients.length > 0) {\r\n-            const remain = selectedItem.sizePrices[0].ingredients\r\n-                .map((acc) => ingredientRemain.find((acc2) => acc.newIngredient === acc2.name))\r\n-                .filter(Boolean); // กรองค่าที่เป็น undefined ออก\r\n-    \r\n-            setIngredientRemainList(remain);\r\n-        } else {\r\n-            setIngredientRemainList([]); // ถ้าไม่มีวัตถุดิบ ก็ให้เป็นอาร์เรย์ว่าง\r\n-        }\r\n-    }, [selectedItem, ingredientRemain]);\r\n-    \r\n+        handleSizeChange(selectedItem.sizePrices[0].size)\r\n+        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+    }, [selectedItem]);\r\n \r\n     const handleOptionChange = (optionGroup, option) => {\r\n         setSelectedOptions(prevOptions => ({\r\n             ...prevOptions,\r\n             [optionGroup]: option\r\n         }));\r\n     };\r\n     const handleSelectSize = (acc) => {\r\n-        const value = JSON.parse(acc);\r\n-        handleSizeChange(value.size);\r\n+        const value = JSON.parse(acc)\r\n+        handleSizeChange(value.size)\r\n+        console.log(\"เลือกขนาด : \", value)\r\n         setSelectedSize(value);\r\n         setIngredientList(value.ingredients);\r\n-    \r\n-        if (value.ingredients.length > 0) {\r\n-            const remain = value.ingredients\r\n-                .map((acc) => ingredientRemain.find((acc2) => acc.newIngredient === acc2.name))\r\n-                .filter(Boolean); // กรองค่าที่เป็น undefined ออก\r\n-    \r\n-            setIngredientRemainList(remain);\r\n-        } else {\r\n-            setIngredientRemainList([]);\r\n-        }\r\n-    };\r\n-    \r\n+\r\n+\r\n+        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+        const remain = value.ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n+\r\n+    }\r\n     const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n         const check = ingredientList.map((acc, index) => {\r\n             if (acc.newIngredientQty * quantity > ingredientRemainList[index].remain) {\r\n                 return true\r\n@@ -116,37 +111,31 @@\n                         <Grid container spacing={1}>\r\n                             <Grid item xs={12}>\r\n                                 <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n                             </Grid>\r\n-                            {ingredientList.length === 0 || ingredientRemainList.length === 0\r\n-    ? <Grid item xs={12}>\r\n-        <p>ไม่มีวัตถุดิบ</p>\r\n-    </Grid>\r\n-    : <>\r\n-        {ingredientList.map((acc, index) => {\r\n-            const remainData = ingredientRemainList[index] || { remain: 0 }; // กำหนดค่าเริ่มต้นให้ไม่ error\r\n-            return (\r\n-                <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n-                    <Grid container justifyContent={'space-between'}>\r\n-                        <Grid item xs={6}>\r\n-                            <p>{acc.newIngredient}</p>\r\n-                        </Grid>\r\n-                        <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n-                            <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p>\r\n-                            <p style={{ color: (acc.newIngredientQty * quantity) > remainData.remain ? \"red\" : \"black\" }}>\r\n-                                {remainData.remain}\r\n-                            </p>\r\n-                        </Grid>\r\n-                        <Grid item xs={1}>\r\n-                            <p>{acc.unit}</p>\r\n-                        </Grid>\r\n-                    </Grid>\r\n-                </Grid>\r\n-            );\r\n-        })}\r\n-    </>\r\n-}\r\n+                            {ingredientList.length === 0\r\n+                                ? <Grid item xs={12}>\r\n+                                    <p>ไม่มีวัตถุดิบ</p>\r\n+                                </Grid>\r\n+                                : <>\r\n+                                    {ingredientList.map((acc, index) => (\r\n+                                        <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n+                                            <Grid container justifyContent={'space-between'}>\r\n+                                                <Grid item xs={6}>\r\n+                                                    <p>{acc.newIngredient}</p>\r\n+                                                </Grid>\r\n+                                                <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n+                                                    <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p><p style={{ color: (acc.newIngredientQty * quantity) > ingredientRemainList[index].remain ? \"red\" : \"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                                </Grid>\r\n+                                                <Grid item xs={1}>\r\n+                                                    <p>{acc.unit}</p>\r\n+                                                </Grid>\r\n \r\n+                                            </Grid>\r\n+                                        </Grid>\r\n+                                    ))}\r\n+                                </>\r\n+                            }\r\n \r\n                         </Grid>\r\n                     </li>\r\n \r\n"
                },
                {
                    "date": 1740584346137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n \r\n     return (\r\n         <Stack sx={{ minHeight: \"100%\", display: \"flex\" }}>\r\n             {/* Header */}\r\n-            <Grid container sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n+            <Grid container sx={{ borderBottom: \"2px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n                 <Grid item xs={11}>\r\n                     <p style={{ fontSize: 24 }}>{selectedItem.name}</p>\r\n                 </Grid>\r\n                 <Grid item xs={1}>\r\n"
                },
                {
                    "date": 1740584358046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,8 @@\n             </Grid>\r\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n-                <ul>\r\n                     <li className=\"option-item\">\r\n                         <div>ขนาด</div>\r\n                         {selectedItem?.sizePrices?.map((acc, index) => (\r\n                             <Grid key={index}>\r\n"
                },
                {
                    "date": 1740584382756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,115 +84,116 @@\n             </Grid>\r\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n-                    <li className=\"option-item\">\r\n-                        <div>ขนาด</div>\r\n-                        {selectedItem?.sizePrices?.map((acc, index) => (\r\n-                            <Grid key={index}>\r\n-                                <label\r\n-                                    key={index}\r\n-                                    className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n-                                >\r\n-                                    <input\r\n-                                        type=\"radio\"\r\n-                                        value={acc.size}\r\n-                                        checked={selectedSize.size === acc.size}\r\n-                                        onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n-                                    />\r\n-                                    {acc.size}\r\n-                                </label>\r\n \r\n \r\n+                <li className=\"option-item\">\r\n+                    <div>ขนาด</div>\r\n+                    {selectedItem?.sizePrices?.map((acc, index) => (\r\n+                        <Grid key={index}>\r\n+                            <label\r\n+                                key={index}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                            >\r\n+                                <input\r\n+                                    type=\"radio\"\r\n+                                    value={acc.size}\r\n+                                    checked={selectedSize.size === acc.size}\r\n+                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n+                                />\r\n+                                {acc.size}\r\n+                            </label>\r\n+\r\n+\r\n+                        </Grid>\r\n+                    ))}\r\n+                </li>\r\n+                <li className=\"option-item\">\r\n+                    <Grid container spacing={1}>\r\n+                        <Grid item xs={12}>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n+                        </Grid>\r\n+                        {ingredientList.length === 0\r\n+                            ? <Grid item xs={12}>\r\n+                                <p>ไม่มีวัตถุดิบ</p>\r\n                             </Grid>\r\n-                        ))}\r\n-                    </li>\r\n-                    <li className=\"option-item\">\r\n-                        <Grid container spacing={1}>\r\n-                            <Grid item xs={12}>\r\n-                                <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n-                            </Grid>\r\n-                            {ingredientList.length === 0\r\n-                                ? <Grid item xs={12}>\r\n-                                    <p>ไม่มีวัตถุดิบ</p>\r\n-                                </Grid>\r\n-                                : <>\r\n-                                    {ingredientList.map((acc, index) => (\r\n-                                        <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n-                                            <Grid container justifyContent={'space-between'}>\r\n-                                                <Grid item xs={6}>\r\n-                                                    <p>{acc.newIngredient}</p>\r\n-                                                </Grid>\r\n-                                                <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n-                                                    <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p><p style={{ color: (acc.newIngredientQty * quantity) > ingredientRemainList[index].remain ? \"red\" : \"black\" }}>{ingredientRemainList[index].remain}</p>\r\n-                                                </Grid>\r\n-                                                <Grid item xs={1}>\r\n-                                                    <p>{acc.unit}</p>\r\n-                                                </Grid>\r\n+                            : <>\r\n+                                {ingredientList.map((acc, index) => (\r\n+                                    <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n+                                        <Grid container justifyContent={'space-between'}>\r\n+                                            <Grid item xs={6}>\r\n+                                                <p>{acc.newIngredient}</p>\r\n+                                            </Grid>\r\n+                                            <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n+                                                <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p><p style={{ color: (acc.newIngredientQty * quantity) > ingredientRemainList[index].remain ? \"red\" : \"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                            </Grid>\r\n+                                            <Grid item xs={1}>\r\n+                                                <p>{acc.unit}</p>\r\n+                                            </Grid>\r\n \r\n-                                            </Grid>\r\n                                         </Grid>\r\n-                                    ))}\r\n-                                </>\r\n-                            }\r\n+                                    </Grid>\r\n+                                ))}\r\n+                            </>\r\n+                        }\r\n \r\n-                        </Grid>\r\n-                    </li>\r\n+                    </Grid>\r\n+                </li>\r\n \r\n \r\n-                    {/* เลือกจำนวนที่ต้องการ */}\r\n-                    <li className=\"option-item\">\r\n-                        <div>จำนวน</div>\r\n-                        <div className=\"quantity-div\">\r\n-                            <button\r\n-                                onClick={handleQuantityDecrease}\r\n-                                className=\"quantity-left-btn\"\r\n-                                disabled={quantity === 1}\r\n-                            >\r\n-                                -\r\n-                            </button>\r\n-                            <span>{quantity}</span>\r\n-                            <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                {/* เลือกจำนวนที่ต้องการ */}\r\n+                <li className=\"option-item\">\r\n+                    <div>จำนวน</div>\r\n+                    <div className=\"quantity-div\">\r\n+                        <button\r\n+                            onClick={handleQuantityDecrease}\r\n+                            className=\"quantity-left-btn\"\r\n+                            disabled={quantity === 1}\r\n+                        >\r\n+                            -\r\n+                        </button>\r\n+                        <span>{quantity}</span>\r\n+                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                    </div>\r\n+                </li>\r\n+\r\n+                {/* Special Options */}\r\n+                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n+                    <li key={customOption._id}>\r\n+                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n+                        <div className=\"option-box-container\">\r\n+                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+                                <label\r\n+                                    key={option}\r\n+                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n+                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                >\r\n+                                    <input\r\n+                                        type=\"radio\"\r\n+                                        name={customOption.label}\r\n+                                        value={option}\r\n+                                        checked={selectedOptions[customOption.label] === option}\r\n+                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                    />\r\n+                                    {option}\r\n+                                </label>\r\n+                            ))}\r\n                         </div>\r\n                     </li>\r\n+                ))}\r\n \r\n-                    {/* Special Options */}\r\n-                    {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n-                        <li key={customOption._id}>\r\n-                            <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n-                            <div className=\"option-box-container\">\r\n-                                {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n-                                    <label\r\n-                                        key={option}\r\n-                                        className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n-                                        onClick={() => handleOptionChange(customOption.label, option)}\r\n-                                    >\r\n-                                        <input\r\n-                                            type=\"radio\"\r\n-                                            name={customOption.label}\r\n-                                            value={option}\r\n-                                            checked={selectedOptions[customOption.label] === option}\r\n-                                            onChange={() => handleOptionChange(customOption.label, option)}\r\n-                                        />\r\n-                                        {option}\r\n-                                    </label>\r\n-                                ))}\r\n-                            </div>\r\n-                        </li>\r\n-                    ))}\r\n-\r\n-                    {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n-                    <li className=\"option-item-column\">\r\n-                        <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n-                        <input\r\n-                            type=\"text\"\r\n-                            value={note}\r\n-                            onChange={(e) => setNote(e.target.value)}\r\n-                            placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n-                            className=\"note-input\"\r\n-                        />\r\n-                    </li>\r\n-                </ul>\r\n+                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n+                <li className=\"option-item-column\">\r\n+                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n+                    <input\r\n+                        type=\"text\"\r\n+                        value={note}\r\n+                        onChange={(e) => setNote(e.target.value)}\r\n+                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n+                        className=\"note-input\"\r\n+                    />\r\n+                </li>\r\n             </Grid>\r\n \r\n             {/* Action Buttons */}\r\n             <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n"
                },
                {
                    "date": 1740584409118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,12 @@\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n \r\n+                <Grid container>\r\n \r\n+                </Grid>\r\n+\r\n                 <li className=\"option-item\">\r\n                     <div>ขนาด</div>\r\n                     {selectedItem?.sizePrices?.map((acc, index) => (\r\n                         <Grid key={index}>\r\n"
                },
                {
                    "date": 1740584492925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,33 +85,27 @@\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n \r\n-                <Grid container>\r\n-\r\n-                </Grid>\r\n-\r\n-                <li className=\"option-item\">\r\n-                    <div>ขนาด</div>\r\n-                    {selectedItem?.sizePrices?.map((acc, index) => (\r\n-                        <Grid key={index}>\r\n+                <Grid className=\"option-grid\">\r\n+                    <div className=\"option-label\">ขนาด</div>\r\n+                    <div className=\"option-box-container\">\r\n+                        {selectedItem?.sizePrices?.map((acc, index) => (\r\n                             <label\r\n                                 key={index}\r\n                                 className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n                             >\r\n                                 <input\r\n                                     type=\"radio\"\r\n                                     value={acc.size}\r\n-                                    checked={selectedSize.size === acc.size}\r\n+                                    checked={selectedSize === acc.size}\r\n                                     onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n                                 />\r\n                                 {acc.size}\r\n                             </label>\r\n-\r\n-\r\n-                        </Grid>\r\n-                    ))}\r\n-                </li>\r\n+                        ))}\r\n+                    </div>\r\n+                </Grid>\r\n                 <li className=\"option-item\">\r\n                     <Grid container spacing={1}>\r\n                         <Grid item xs={12}>\r\n                             <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n"
                },
                {
                    "date": 1740584508156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,10 +85,10 @@\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n \r\n-                <Grid className=\"option-grid\">\r\n-                    <div className=\"option-label\">ขนาด</div>\r\n+                <Grid container>\r\n+                    <p>ขนาด</p>\r\n                     <div className=\"option-box-container\">\r\n                         {selectedItem?.sizePrices?.map((acc, index) => (\r\n                             <label\r\n                                 key={index}\r\n"
                },
                {
                    "date": 1740584537382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n \r\n-                <Grid container>\r\n+                <Grid container sx={{display: \"flex\",alignItems: \"center\",justifyContent: \"center\"}}>\r\n                     <p>ขนาด</p>\r\n                     <div className=\"option-box-container\">\r\n                         {selectedItem?.sizePrices?.map((acc, index) => (\r\n                             <label\r\n"
                },
                {
                    "date": 1740584543514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n \r\n-                <Grid container sx={{display: \"flex\",alignItems: \"center\",justifyContent: \"center\"}}>\r\n+                <Grid container sx={{display: \"flex\",justifyContent: \"center\"}}>\r\n                     <p>ขนาด</p>\r\n                     <div className=\"option-box-container\">\r\n                         {selectedItem?.sizePrices?.map((acc, index) => (\r\n                             <label\r\n"
                },
                {
                    "date": 1740584564691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,10 +85,13 @@\n \r\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n \r\n-                <Grid container sx={{display: \"flex\",justifyContent: \"center\"}}>\r\n-                    <p>ขนาด</p>\r\n+                <Grid container sx={{display: \"flex\",alignItems: \"center\",}}>\r\n+                    <Grid xs={1}>\r\n+                        <p>ขนาด</p>\r\n+                    </Grid>\r\n+                    \r\n                     <div className=\"option-box-container\">\r\n                         {selectedItem?.sizePrices?.map((acc, index) => (\r\n                             <label\r\n                                 key={index}\r\n"
                },
                {
                    "date": 1740584575210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,12 +86,14 @@\n             {/* Content */}\r\n             <Grid sx={{ flexGrow: 1 }}>\r\n \r\n                 <Grid container sx={{display: \"flex\",alignItems: \"center\",}}>\r\n-                    <Grid xs={2}>\r\n+                    <Grid item xs={2}>\r\n                         <p>ขนาด</p>\r\n                     </Grid>\r\n-                    \r\n+                    <Grid>\r\n+\r\n+                    </Grid>\r\n                     <div className=\"option-box-container\">\r\n                         {selectedItem?.sizePrices?.map((acc, index) => (\r\n                             <label\r\n                                 key={index}\r\n"
                },
                {
                    "date": 1740584813974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,205 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Grid, Stack } from \"@mui/material\";\r\n+import CloseIcon from '@mui/icons-material/Close';\r\n+\r\n+const MenuItemSelected = ({\r\n+    selectedItem,\r\n+    selectedSize,\r\n+    quantity,\r\n+    note,\r\n+    selectedOptions,\r\n+    setSelectedOptions,\r\n+    handleSizeChange,\r\n+    handleQuantityIncrease,\r\n+    handleQuantityDecrease,\r\n+    handleConfirmAdd,\r\n+    setNote,\r\n+    ingredientRemain,\r\n+    onClose\r\n+}) => {\r\n+    const [selectSize, setSelectedSize] = useState({});\r\n+    const [ingredientList, setIngredientList] = useState([]);\r\n+    const [ingredientRemainList, setIngredientRemainList] = useState([]);\r\n+    const [ingredientOverStock, setIngredientOverStock] = useState(false);\r\n+    const [reload, setReload] = useState(false);\r\n+\r\n+    useEffect(() => {\r\n+        setSelectedSize(selectedItem.sizePrices[0])\r\n+        setIngredientList(selectedItem.sizePrices[0].ingredients);\r\n+        handleSizeChange(selectedItem.sizePrices[0].size)\r\n+        // console.log(\"ingredientRemain : \", ingredientRemain)\r\n+        const remain = selectedItem.sizePrices[0].ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+    }, [selectedItem]);\r\n+\r\n+    const handleOptionChange = (optionGroup, option) => {\r\n+        setSelectedOptions(prevOptions => ({\r\n+            ...prevOptions,\r\n+            [optionGroup]: option\r\n+        }));\r\n+    };\r\n+    const handleSelectSize = (acc) => {\r\n+        const value = JSON.parse(acc)\r\n+        handleSizeChange(value.size)\r\n+        console.log(\"เลือกขนาด : \", value)\r\n+        setSelectedSize(value);\r\n+        setIngredientList(value.ingredients);\r\n+\r\n+\r\n+        // console.log(\"ingredientRemain2 : \", ingredientRemain)\r\n+        const remain = value.ingredients.map((acc) => {\r\n+            const ingredient = ingredientRemain.find((acc2) => acc.newIngredient === acc2.name)\r\n+            return ingredient\r\n+        })\r\n+        setIngredientRemainList(remain)\r\n+        // checkIngredientOverStock(value.ingredients,ingredientRemainList)\r\n+\r\n+    }\r\n+    const checkIngredientOverStock = (ingredientList, ingredientRemainList) => {\r\n+        const check = ingredientList.map((acc, index) => {\r\n+            if (acc.newIngredientQty * quantity > ingredientRemainList[index].remain) {\r\n+                return true\r\n+            } else {\r\n+                return false\r\n+            }\r\n+        })\r\n+        console.log(\"check : \", check)\r\n+        setIngredientOverStock(check)\r\n+    }\r\n+\r\n+    return (\r\n+        <Stack sx={{ minHeight: \"100%\", display: \"flex\" }}>\r\n+            {/* Header */}\r\n+            <Grid container sx={{ borderBottom: \"2px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n+                <Grid item xs={11}>\r\n+                    <p style={{ fontSize: 24 }}>{selectedItem.name}</p>\r\n+                </Grid>\r\n+                <Grid item xs={1}>\r\n+                    <CloseIcon style={{ fontSize: 18, color: \"#ff4b4b\", cursor: \"pointer\" }} onClick={() => onClose()} />\r\n+                </Grid>\r\n+                <p style={{ color: \"#777\" }}>{selectedItem.category}</p>\r\n+            </Grid>\r\n+\r\n+            {/* Content */}\r\n+            <Grid sx={{ flexGrow: 1 }}>\r\n+\r\n+                <Grid container sx={{ display: \"flex\", alignItems: \"center\", marginBottom: \"8px\", paddingBottom:\"8px\", borderBottom: \"1px solid #ddd\" }}>\r\n+                    <Grid item xs={2}><p>ขนาด</p></Grid>\r\n+                    <Grid item xs={10} justifyContent=\"flex-end\">\r\n+                        {selectedItem?.sizePrices?.map((acc, index) => (\r\n+                            <label\r\n+                                key={index}\r\n+                                className={`option-box ${selectedSize === acc.size ? 'selected' : ''}`}\r\n+                            >\r\n+                                <input\r\n+                                    type=\"radio\"\r\n+                                    value={acc.size}\r\n+                                    checked={selectedSize === acc.size}\r\n+                                    onChange={() => handleSelectSize(JSON.stringify(acc))}\r\n+                                />\r\n+                                {acc.size}\r\n+                            </label>\r\n+                        ))}\r\n+                    </Grid>\r\n+                </Grid>\r\n+\r\n+                <li className=\"option-item\">\r\n+                    <Grid container spacing={1}>\r\n+                        <Grid item xs={12}>\r\n+                            <p>รายละเอียดวัตถุดิบที่ใช้ ต่อ คงเหลือ</p>\r\n+                        </Grid>\r\n+                        {ingredientList.length === 0\r\n+                            ? <Grid item xs={12}>\r\n+                                <p>ไม่มีวัตถุดิบ</p>\r\n+                            </Grid>\r\n+                            : <>\r\n+                                {ingredientList.map((acc, index) => (\r\n+                                    <Grid key={index} item xs={12} style={{ paddingLeft: '10%' }}>\r\n+                                        <Grid container justifyContent={'space-between'}>\r\n+                                            <Grid item xs={6}>\r\n+                                                <p>{acc.newIngredient}</p>\r\n+                                            </Grid>\r\n+                                            <Grid item xs={5} display={'flex'} justifyContent={'flex-end'} style={{ paddingRight: '5%' }}>\r\n+                                                <p>{(acc.newIngredientQty * quantity).toFixed(2)}/</p><p style={{ color: (acc.newIngredientQty * quantity) > ingredientRemainList[index].remain ? \"red\" : \"black\" }}>{ingredientRemainList[index].remain}</p>\r\n+                                            </Grid>\r\n+                                            <Grid item xs={1}>\r\n+                                                <p>{acc.unit}</p>\r\n+                                            </Grid>\r\n+\r\n+                                        </Grid>\r\n+                                    </Grid>\r\n+                                ))}\r\n+                            </>\r\n+                        }\r\n+\r\n+                    </Grid>\r\n+                </li>\r\n+\r\n+\r\n+                {/* เลือกจำนวนที่ต้องการ */}\r\n+                <li className=\"option-item\">\r\n+                    <div>จำนวน</div>\r\n+                    <div className=\"quantity-div\">\r\n+                        <button\r\n+                            onClick={handleQuantityDecrease}\r\n+                            className=\"quantity-left-btn\"\r\n+                            disabled={quantity === 1}\r\n+                        >\r\n+                            -\r\n+                        </button>\r\n+                        <span>{quantity}</span>\r\n+                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n+                    </div>\r\n+                </li>\r\n+\r\n+                {/* Special Options */}\r\n+                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n+                    <li key={customOption._id}>\r\n+                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n+                        <div className=\"option-box-container\">\r\n+                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n+                                <label\r\n+                                    key={option}\r\n+                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n+                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n+                                >\r\n+                                    <input\r\n+                                        type=\"radio\"\r\n+                                        name={customOption.label}\r\n+                                        value={option}\r\n+                                        checked={selectedOptions[customOption.label] === option}\r\n+                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n+                                    />\r\n+                                    {option}\r\n+                                </label>\r\n+                            ))}\r\n+                        </div>\r\n+                    </li>\r\n+                ))}\r\n+\r\n+                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n+                <li className=\"option-item-column\">\r\n+                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n+                    <input\r\n+                        type=\"text\"\r\n+                        value={note}\r\n+                        onChange={(e) => setNote(e.target.value)}\r\n+                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n+                        className=\"note-input\"\r\n+                    />\r\n+                </li>\r\n+            </Grid>\r\n+\r\n+            {/* Action Buttons */}\r\n+            <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n+                <button className='red-button' onClick={onClose}>ยกเลิก</button>\r\n+                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n+            </Grid>\r\n+        </Stack>\r\n+    );\r\n+};\r\n+\r\n+export default MenuItemSelected;\r\n"
                }
            ],
            "date": 1739608768375,
            "name": "Commit-0",
            "content": "import React from 'react';\r\n\r\nconst MenuItemSelected = ({\r\n    selectedItem, \r\n    selectedSize, \r\n    quantity, \r\n    note, \r\n    selectedOptions, \r\n    setSelectedOptions, \r\n    handleSizeChange, \r\n    handleQuantityIncrease, \r\n    handleQuantityDecrease, \r\n    handleConfirmAdd, \r\n    setNote\r\n}) => {\r\n\r\n    const handleOptionChange = (optionGroup, option) => {\r\n        setSelectedOptions(prevOptions => ({\r\n            ...prevOptions,\r\n            [optionGroup]: option\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"right-box-header\">\r\n                <div className='fs-24 fw-5 text-black'>{selectedItem.name}</div>\r\n                <div className='fs-16 text-dark-grey'>{selectedItem.category}</div>\r\n            </div>\r\n            <div className=\"right-box-header\">\r\n                {/* <img src={selectedItem.image} alt={selectedItem.name} className=\"item-image\" /> */}\r\n            </div>\r\n\r\n            <ul>\r\n                {/* แสดงตัวเลือกขนาด (size) */}\r\n                <li className=\"option-item\">\r\n                    <div>ขนาด</div>\r\n                    {selectedItem?.sizePrices?.map(({ size }) => (\r\n                        <label\r\n                            key={size}\r\n                            className={`option-box ${selectedSize === size ? 'selected' : ''}`}\r\n                            onClick={() => handleSizeChange(size)}\r\n                        >\r\n                            <input\r\n                                type=\"radio\"\r\n                                value={size}\r\n                                checked={selectedSize === size}\r\n                                onChange={() => handleSizeChange(size)}\r\n                            />\r\n                            {size}\r\n                        </label>\r\n                    ))}\r\n                </li>\r\n\r\n                {/* เลือกจำนวนที่ต้องการ */}\r\n                <li className=\"option-item\">\r\n                    <div>จำนวน</div>\r\n                    <div className=\"quantity-div\">\r\n                        <button\r\n                            onClick={handleQuantityDecrease}\r\n                            className=\"quantity-left-btn\"\r\n                            disabled={quantity === 1}\r\n                        >\r\n                            -\r\n                        </button>\r\n                        <span>{quantity}</span>\r\n                        <button onClick={handleQuantityIncrease} className=\"quantity-right-btn\">+</button>\r\n                    </div>\r\n                </li>\r\n\r\n                {/* Special Options */}\r\n                {Array.isArray(selectedItem?.customOptions) && selectedItem.customOptions.map((customOption) => (\r\n                    <li key={customOption._id}>\r\n                        <div style={{ marginLeft: '6px' }}>{customOption.label}</div>\r\n                        <div className=\"option-box-container\">\r\n                            {Array.isArray(customOption.options) && customOption.options.map((option) => (\r\n                                <label\r\n                                    key={option}\r\n                                    className={`option-box ${selectedOptions[customOption.label] === option ? 'selected' : ''}`}\r\n                                    onClick={() => handleOptionChange(customOption.label, option)}\r\n                                >\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name={customOption.label}\r\n                                        value={option}\r\n                                        checked={selectedOptions[customOption.label] === option}\r\n                                        onChange={() => handleOptionChange(customOption.label, option)}\r\n                                    />\r\n                                    {option}\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n\r\n                {/* ระบุโน๊ต หรือ หมายเหตุ */}\r\n                <li className=\"option-item-column\">\r\n                    <div style={{ marginTop: \"8px\" }}>รายละเอียดเพิ่มเติม</div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={note}\r\n                        onChange={(e) => setNote(e.target.value)}\r\n                        placeholder=\"เช่น ไม่ใส่ถั่ว ไม่เอาผัก\"\r\n                        className=\"note-input\"\r\n                    />\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"menu-action-buttons\">\r\n                <button className='red-button'>ยกเลิก</button>\r\n                <button className='blue-button' onClick={handleConfirmAdd}>เพิ่มเข้าคำสั่งซื้อ</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuItemSelected;\r\n"
        }
    ]
}