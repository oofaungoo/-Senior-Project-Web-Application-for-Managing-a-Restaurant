{
    "sourceFile": "FoodMood/src/pages/OrderHistory/OrderHistory.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1740378856447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740626996914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import OrderHistory_table from './assets/OrderHistory_table';\r\n \r\n const OrderHistory = () => {\r\n \r\n+    const [orders, setOrders] = useState([]);\r\n     const [orderDate, setOrderDate] = useState('');\r\n     const [orderTimeStart, setOrderTimeStart] = useState('');\r\n     const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n \r\n"
                },
                {
                    "date": 1740627026834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,19 @@\n     const handleDateChange = (e) => setOrderDate(e.target.value);\r\n     const handleTimeStartChange = (e) => setOrderTimeStart(e.target.value);\r\n     const handleTimeEndChange = (e) => setOrderTimeEnd(e.target.value);\r\n \r\n+    // API: Fetch data from server\r\n+    useState(() => {\r\n+        axios.get(\"http://localhost:5000/api/orders\")\r\n+            .then((res) => {\r\n+                console.log(res.data);\r\n+                setData(res.data);\r\n+            })\r\n+            .catch((err) => console.error(\"Error fetching orders:\", err));\r\n+    }, []);\r\n+\r\n+\r\n     return (\r\n         <>\r\n             <div className=\"middle-box\">\r\n                 <OrderHistory_filter\r\n"
                },
                {
                    "date": 1740627035050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import OrderHistory_table from './assets/OrderHistory_table';\r\n \r\n const OrderHistory = () => {\r\n \r\n-    const [orders, setOrders] = useState([]);\r\n+    const [data, setData] = useState([]);\r\n     const [orderDate, setOrderDate] = useState('');\r\n     const [orderTimeStart, setOrderTimeStart] = useState('');\r\n     const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n \r\n"
                },
                {
                    "date": 1740627042386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n import OrderHistory_filter from './assets/OrderHistory_filter';\r\n import OrderHistory_table from './assets/OrderHistory_table';\r\n \r\n const OrderHistory = () => {\r\n"
                },
                {
                    "date": 1740627056425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,13 @@\n             })\r\n             .catch((err) => console.error(\"Error fetching orders:\", err));\r\n     }, []);\r\n \r\n+    const filteredOrders = data.filter(order =>\r\n+        ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)\r\n+    );\r\n \r\n+\r\n     return (\r\n         <>\r\n             <div className=\"middle-box\">\r\n                 <OrderHistory_filter\r\n"
                },
                {
                    "date": 1740627068887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n                     handleDateChange={handleDateChange}\r\n                     handleTimeStartChange={handleTimeStartChange}\r\n                     handleTimeEndChange={handleTimeEndChange}\r\n                 />\r\n-                <OrderHistory_table />\r\n+                <OrderHistory_table data={filteredOrders} />\r\n             </div>\r\n         </>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1740640971091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import OrderHistory_filter from './assets/OrderHistory_filter';\r\n+import OrderHistory_table from './assets/OrderHistory_table';\r\n+\r\n+const OrderHistory = () => {\r\n+\r\n+    const [data, setData] = useState([]);\r\n+    const [orderDate, setOrderDate] = useState('');\r\n+    const [orderTimeStart, setOrderTimeStart] = useState('');\r\n+    const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n+\r\n+    // Handle changes in date and time inputs\r\n+    const handleDateChange = (e) => setOrderDate(e.target.value);\r\n+    const handleTimeStartChange = (e) => setOrderTimeStart(e.target.value);\r\n+    const handleTimeEndChange = (e) => setOrderTimeEnd(e.target.value);\r\n+\r\n+    // API: Fetch data from server\r\n+    useState(() => {\r\n+        axios.get(\"http://localhost:5000/api/orders\")\r\n+            .then((res) => {\r\n+                console.log(res.data);\r\n+                setData(res.data);\r\n+            })\r\n+            .catch((err) => console.error(\"Error fetching orders:\", err));\r\n+    }, []);\r\n+\r\n+    const filteredOrders = data.filter(order =>\r\n+        ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)\r\n+    );\r\n+\r\n+\r\n+    return (\r\n+        <>\r\n+            {/* Box ของ MenuList */}\r\n+            <Box\r\n+                sx={{ backgroundColor: \"#fff\", width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\", height: \"100vh\", padding: \"20px\", borderRadius: \"8px\", overflowY: \"auto\", marginRight: \"10px\",}}\r\n+            >\r\n+                <OrderHistory_filter\r\n+                    orderDate={orderDate}\r\n+                    orderTimeStart={orderTimeStart}\r\n+                    orderTimeEnd={orderTimeEnd}\r\n+                    handleDateChange={handleDateChange}\r\n+                    handleTimeStartChange={handleTimeStartChange}\r\n+                    handleTimeEndChange={handleTimeEndChange}\r\n+                />\r\n+                <OrderHistory_table data={filteredOrders} />\r\n+            </Box>\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n+export default OrderHistory;\r\n+\r\n"
                },
                {
                    "date": 1740640993395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n import OrderHistory_filter from './assets/OrderHistory_filter';\r\n import OrderHistory_table from './assets/OrderHistory_table';\r\n \r\n const OrderHistory = () => {\r\n+    const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n+    const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n \r\n     const [data, setData] = useState([]);\r\n     const [orderDate, setOrderDate] = useState('');\r\n     const [orderTimeStart, setOrderTimeStart] = useState('');\r\n@@ -51,55 +53,4 @@\n };\r\n \r\n export default OrderHistory;\r\n \r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import OrderHistory_filter from './assets/OrderHistory_filter';\r\n-import OrderHistory_table from './assets/OrderHistory_table';\r\n-\r\n-const OrderHistory = () => {\r\n-\r\n-    const [data, setData] = useState([]);\r\n-    const [orderDate, setOrderDate] = useState('');\r\n-    const [orderTimeStart, setOrderTimeStart] = useState('');\r\n-    const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n-\r\n-    // Handle changes in date and time inputs\r\n-    const handleDateChange = (e) => setOrderDate(e.target.value);\r\n-    const handleTimeStartChange = (e) => setOrderTimeStart(e.target.value);\r\n-    const handleTimeEndChange = (e) => setOrderTimeEnd(e.target.value);\r\n-\r\n-    // API: Fetch data from server\r\n-    useState(() => {\r\n-        axios.get(\"http://localhost:5000/api/orders\")\r\n-            .then((res) => {\r\n-                console.log(res.data);\r\n-                setData(res.data);\r\n-            })\r\n-            .catch((err) => console.error(\"Error fetching orders:\", err));\r\n-    }, []);\r\n-\r\n-    const filteredOrders = data.filter(order =>\r\n-        ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)\r\n-    );\r\n-\r\n-\r\n-    return (\r\n-        <>\r\n-            <div className=\"middle-box\">\r\n-                <OrderHistory_filter\r\n-                    orderDate={orderDate}\r\n-                    orderTimeStart={orderTimeStart}\r\n-                    orderTimeEnd={orderTimeEnd}\r\n-                    handleDateChange={handleDateChange}\r\n-                    handleTimeStartChange={handleTimeStartChange}\r\n-                    handleTimeEndChange={handleTimeEndChange}\r\n-                />\r\n-                <OrderHistory_table data={filteredOrders} />\r\n-            </div>\r\n-        </>\r\n-    );\r\n-};\r\n-\r\n-export default OrderHistory;\r\n-\r\n"
                },
                {
                    "date": 1740641001811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n+import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n import OrderHistory_filter from './assets/OrderHistory_filter';\r\n import OrderHistory_table from './assets/OrderHistory_table';\r\n \r\n const OrderHistory = () => {\r\n"
                },
                {
                    "date": 1740641948844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n-import { Box, Modal, useMediaQuery } from \"@mui/material\";\r\n+import { Box, useMediaQuery } from \"@mui/material\";\r\n import OrderHistory_filter from './assets/OrderHistory_filter';\r\n import OrderHistory_table from './assets/OrderHistory_table';\r\n \r\n const OrderHistory = () => {\r\n@@ -11,34 +11,57 @@\n     const [data, setData] = useState([]);\r\n     const [orderDate, setOrderDate] = useState('');\r\n     const [orderTimeStart, setOrderTimeStart] = useState('');\r\n     const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n+    const [filteredOrders, setFilteredOrders] = useState([]);\r\n \r\n     // Handle changes in date and time inputs\r\n     const handleDateChange = (e) => setOrderDate(e.target.value);\r\n     const handleTimeStartChange = (e) => setOrderTimeStart(e.target.value);\r\n     const handleTimeEndChange = (e) => setOrderTimeEnd(e.target.value);\r\n \r\n     // API: Fetch data from server\r\n-    useState(() => {\r\n+    useEffect(() => {\r\n         axios.get(\"http://localhost:5000/api/orders\")\r\n             .then((res) => {\r\n                 console.log(res.data);\r\n                 setData(res.data);\r\n             })\r\n             .catch((err) => console.error(\"Error fetching orders:\", err));\r\n     }, []);\r\n \r\n-    const filteredOrders = data.filter(order =>\r\n-        ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)\r\n-    );\r\n+    // Filter orders based on selected date and time\r\n+    useEffect(() => {\r\n+        const filtered = data.filter(order => {\r\n+            // เช็คสถานะ ต้องเป็น \"เสร็จสิ้น\" หรือ \"ยกเลิก\" เท่านั้น\r\n+            if (!['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)) return false;\r\n \r\n+            // แปลงวันที่ใน order ให้เป็น YYYY-MM-DD\r\n+            const orderDateFormatted = order.orderDate.split('T')[0]; // สมมติ orderDate มาในรูปแบบ \"2024-02-24T12:00:00\"\r\n \r\n+            // ตรวจสอบว่าตรงกับวันที่ที่เลือกหรือไม่\r\n+            if (orderDate && orderDateFormatted !== orderDate) return false;\r\n+\r\n+            // เช็คช่วงเวลาสั่ง\r\n+            if (orderTimeStart || orderTimeEnd) {\r\n+                const orderTime = order.orderTime; // สมมติ orderTime มาในรูปแบบ \"12:30\"\r\n+\r\n+                // เปรียบเทียบเวลา (ถ้ามีค่าที่เลือก)\r\n+                if (orderTimeStart && orderTime < orderTimeStart) return false;\r\n+                if (orderTimeEnd && orderTime > orderTimeEnd) return false;\r\n+            }\r\n+\r\n+            return true;\r\n+        });\r\n+\r\n+        setFilteredOrders(filtered);\r\n+    }, [data, orderDate, orderTimeStart, orderTimeEnd]); // รันใหม่เมื่อค่าเหล่านี้เปลี่ยน\r\n+\r\n     return (\r\n         <>\r\n             {/* Box ของ MenuList */}\r\n             <Box\r\n-                sx={{ backgroundColor: \"#fff\", width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\", height: \"100vh\", padding: \"20px\", borderRadius: \"8px\", overflowY: \"auto\", marginRight: \"10px\",}}\r\n+                sx={{ backgroundColor: \"#fff\", width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\", height: \"100vh\", padding: \"20px\", borderRadius: \"8px\", overflowY: \"auto\", marginRight: \"10px\" }}\r\n             >\r\n                 <OrderHistory_filter\r\n                     orderDate={orderDate}\r\n                     orderTimeStart={orderTimeStart}\r\n@@ -53,5 +76,4 @@\n     );\r\n };\r\n \r\n export default OrderHistory;\r\n-\r\n"
                },
                {
                    "date": 1740641953992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n             return true;\r\n         });\r\n \r\n         setFilteredOrders(filtered);\r\n-    }, [data, orderDate, orderTimeStart, orderTimeEnd]); // รันใหม่เมื่อค่าเหล่านี้เปลี่ยน\r\n+    }, [data, orderDate, orderTimeStart, orderTimeEnd]);\r\n \r\n     return (\r\n         <>\r\n             {/* Box ของ MenuList */}\r\n"
                },
                {
                    "date": 1740642003470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n             // เช็คสถานะ ต้องเป็น \"เสร็จสิ้น\" หรือ \"ยกเลิก\" เท่านั้น\r\n             if (!['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)) return false;\r\n \r\n             // แปลงวันที่ใน order ให้เป็น YYYY-MM-DD\r\n-            const orderDateFormatted = order.orderDate.split('T')[0]; // สมมติ orderDate มาในรูปแบบ \"2024-02-24T12:00:00\"\r\n+            const orderDateFormatted = order.orderDate;\r\n \r\n             // ตรวจสอบว่าตรงกับวันที่ที่เลือกหรือไม่\r\n             if (orderDate && orderDateFormatted !== orderDate) return false;\r\n \r\n"
                },
                {
                    "date": 1740642073997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,34 +29,26 @@\n             .catch((err) => console.error(\"Error fetching orders:\", err));\r\n     }, []);\r\n \r\n     // Filter orders based on selected date and time\r\n-    useEffect(() => {\r\n-        const filtered = data.filter(order => {\r\n-            // เช็คสถานะ ต้องเป็น \"เสร็จสิ้น\" หรือ \"ยกเลิก\" เท่านั้น\r\n-            if (!['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)) return false;\r\n+    const filteredOrders = data.filter(order => {\r\n+        // แปลงวันที่จาก 27/02/2025 → 2025-02-27\r\n+        const formattedOrderDate = order.orderDate.split(\"/\").reverse().join(\"-\");\r\n+    \r\n+        // เช็ควันที่\r\n+        const dateMatch = orderDate ? formattedOrderDate === orderDate : true;\r\n+    \r\n+        // แปลงเวลาจาก HH:mm:ss → HH:mm\r\n+        const formattedOrderTime = order.orderTime.slice(0, 5);\r\n+    \r\n+        // เช็คเวลาช่วงเริ่มต้น - สิ้นสุด\r\n+        const startMatch = orderTimeStart ? formattedOrderTime >= orderTimeStart : true;\r\n+        const endMatch = orderTimeEnd ? formattedOrderTime <= orderTimeEnd : true;\r\n+    \r\n+        return dateMatch && startMatch && endMatch && ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus);\r\n+    });\r\n+    \r\n \r\n-            // แปลงวันที่ใน order ให้เป็น YYYY-MM-DD\r\n-            const orderDateFormatted = order.orderDate;\r\n-\r\n-            // ตรวจสอบว่าตรงกับวันที่ที่เลือกหรือไม่\r\n-            if (orderDate && orderDateFormatted !== orderDate) return false;\r\n-\r\n-            // เช็คช่วงเวลาสั่ง\r\n-            if (orderTimeStart || orderTimeEnd) {\r\n-                const orderTime = order.orderTime; // สมมติ orderTime มาในรูปแบบ \"12:30\"\r\n-\r\n-                // เปรียบเทียบเวลา (ถ้ามีค่าที่เลือก)\r\n-                if (orderTimeStart && orderTime < orderTimeStart) return false;\r\n-                if (orderTimeEnd && orderTime > orderTimeEnd) return false;\r\n-            }\r\n-\r\n-            return true;\r\n-        });\r\n-\r\n-        setFilteredOrders(filtered);\r\n-    }, [data, orderDate, orderTimeStart, orderTimeEnd]);\r\n-\r\n     return (\r\n         <>\r\n             {/* Box ของ MenuList */}\r\n             <Box\r\n"
                },
                {
                    "date": 1740642087445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,26 +29,31 @@\n             .catch((err) => console.error(\"Error fetching orders:\", err));\r\n     }, []);\r\n \r\n     // Filter orders based on selected date and time\r\n-    const filteredOrders = data.filter(order => {\r\n-        // แปลงวันที่จาก 27/02/2025 → 2025-02-27\r\n-        const formattedOrderDate = order.orderDate.split(\"/\").reverse().join(\"-\");\r\n-    \r\n-        // เช็ควันที่\r\n-        const dateMatch = orderDate ? formattedOrderDate === orderDate : true;\r\n-    \r\n-        // แปลงเวลาจาก HH:mm:ss → HH:mm\r\n-        const formattedOrderTime = order.orderTime.slice(0, 5);\r\n-    \r\n-        // เช็คเวลาช่วงเริ่มต้น - สิ้นสุด\r\n-        const startMatch = orderTimeStart ? formattedOrderTime >= orderTimeStart : true;\r\n-        const endMatch = orderTimeEnd ? formattedOrderTime <= orderTimeEnd : true;\r\n-    \r\n-        return dateMatch && startMatch && endMatch && ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus);\r\n-    });\r\n-    \r\n+    useEffect(() => {\r\n+        const filteredOrders = data.filter(order => {\r\n+            // แปลงวันที่จาก 27/02/2025 → 2025-02-27\r\n+            const formattedOrderDate = order.orderDate.split(\"/\").reverse().join(\"-\");\r\n+        \r\n+            // เช็ควันที่\r\n+            const dateMatch = orderDate ? formattedOrderDate === orderDate : true;\r\n+        \r\n+            // แปลงเวลาจาก HH:mm:ss → HH:mm\r\n+            const formattedOrderTime = order.orderTime.slice(0, 5);\r\n+        \r\n+            // เช็คเวลาช่วงเริ่มต้น - สิ้นสุด\r\n+            const startMatch = orderTimeStart ? formattedOrderTime >= orderTimeStart : true;\r\n+            const endMatch = orderTimeEnd ? formattedOrderTime <= orderTimeEnd : true;\r\n+        \r\n+            return dateMatch && startMatch && endMatch && ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus);\r\n+        });\r\n+        \r\n+        });\r\n \r\n+        setFilteredOrders(filtered);\r\n+    }, [data, orderDate, orderTimeStart, orderTimeEnd]);\r\n+\r\n     return (\r\n         <>\r\n             {/* Box ของ MenuList */}\r\n             <Box\r\n"
                },
                {
                    "date": 1740642093723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,8 @@\n         \r\n             return dateMatch && startMatch && endMatch && ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus);\r\n         });\r\n         \r\n-        });\r\n \r\n         setFilteredOrders(filtered);\r\n     }, [data, orderDate, orderTimeStart, orderTimeEnd]);\r\n \r\n"
                },
                {
                    "date": 1740642142261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,28 +30,32 @@\n     }, []);\r\n \r\n     // Filter orders based on selected date and time\r\n     useEffect(() => {\r\n-        const filteredOrders = data.filter(order => {\r\n-            // แปลงวันที่จาก 27/02/2025 → 2025-02-27\r\n-            const formattedOrderDate = order.orderDate.split(\"/\").reverse().join(\"-\");\r\n-        \r\n-            // เช็ควันที่\r\n-            const dateMatch = orderDate ? formattedOrderDate === orderDate : true;\r\n-        \r\n+        const filtered = data.filter(order => {\r\n+            // เช็คสถานะ ต้องเป็น \"เสร็จสิ้น\" หรือ \"ยกเลิก\" เท่านั้น\r\n+            if (!['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)) return false;\r\n+    \r\n+            // แปลงวันที่จาก DD/MM/YYYY → YYYY-MM-DD\r\n+            const [day, month, year] = order.orderDate.split(\"/\");\r\n+            const orderDateFormatted = `${year}-${month}-${day}`; // ให้ตรงกับค่าจาก <input type=\"date\" />\r\n+    \r\n+            // ตรวจสอบว่าตรงกับวันที่ที่เลือกหรือไม่\r\n+            if (orderDate && orderDateFormatted !== orderDate) return false;\r\n+    \r\n             // แปลงเวลาจาก HH:mm:ss → HH:mm\r\n-            const formattedOrderTime = order.orderTime.slice(0, 5);\r\n-        \r\n-            // เช็คเวลาช่วงเริ่มต้น - สิ้นสุด\r\n-            const startMatch = orderTimeStart ? formattedOrderTime >= orderTimeStart : true;\r\n-            const endMatch = orderTimeEnd ? formattedOrderTime <= orderTimeEnd : true;\r\n-        \r\n-            return dateMatch && startMatch && endMatch && ['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus);\r\n+            const orderTimeFormatted = order.orderTime.slice(0, 5);\r\n+    \r\n+            // เช็คช่วงเวลาสั่ง\r\n+            if (orderTimeStart && orderTimeFormatted < orderTimeStart) return false;\r\n+            if (orderTimeEnd && orderTimeFormatted > orderTimeEnd) return false;\r\n+    \r\n+            return true;\r\n         });\r\n-        \r\n-\r\n+    \r\n         setFilteredOrders(filtered);\r\n     }, [data, orderDate, orderTimeStart, orderTimeEnd]);\r\n+    \r\n \r\n     return (\r\n         <>\r\n             {/* Box ของ MenuList */}\r\n"
                },
                {
                    "date": 1740642499134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n     const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n     const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n \r\n     const [data, setData] = useState([]);\r\n+    const [selectedData, setSelectedData] = useState(false)\r\n     const [orderDate, setOrderDate] = useState('');\r\n     const [orderTimeStart, setOrderTimeStart] = useState('');\r\n     const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n     const [filteredOrders, setFilteredOrders] = useState([]);\r\n@@ -28,9 +29,9 @@\n             })\r\n             .catch((err) => console.error(\"Error fetching orders:\", err));\r\n     }, []);\r\n \r\n-    // Filter orders based on selected date and time\r\n+    // Function: Filter by Date\r\n     useEffect(() => {\r\n         const filtered = data.filter(order => {\r\n             // เช็คสถานะ ต้องเป็น \"เสร็จสิ้น\" หรือ \"ยกเลิก\" เท่านั้น\r\n             if (!['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)) return false;\r\n@@ -54,9 +55,14 @@\n     \r\n         setFilteredOrders(filtered);\r\n     }, [data, orderDate, orderTimeStart, orderTimeEnd]);\r\n     \r\n+    // Function: Select order\r\n+    const handleSelectOrder = (order) => {\r\n+        setSelectedData(order);\r\n+    };\r\n \r\n+\r\n     return (\r\n         <>\r\n             {/* Box ของ MenuList */}\r\n             <Box\r\n@@ -71,8 +77,63 @@\n                     handleTimeEndChange={handleTimeEndChange}\r\n                 />\r\n                 <OrderHistory_table data={filteredOrders} />\r\n             </Box>\r\n+\r\n+            {/* Desktop & Tablet: แสดง AddMenu และ MenuItemDetail ด้านขวา */}\r\n+            {!isMobile && (selectedData) && (\r\n+                <Box\r\n+                    sx={{\r\n+                        backgroundColor: \"#fff\",\r\n+                        width: isTablet ? \"35%\" : \"25%\", // Box ของ Tablet = 30%, Desktop = 25%\r\n+                        height: \"100vh\",\r\n+                        padding: \"20px\",\r\n+                        borderRadius: \"8px\",\r\n+                        overflowY: \"auto\",\r\n+                        display: \"flex\",\r\n+                        flexDirection: \"column\",\r\n+                    }}\r\n+                >\r\n+                    {selectedData && (\r\n+                        <OrderDetail\r\n+                            selectedOrder={selectedData}\r\n+                            onClose={() => setSelectedData(null)}\r\n+                            updateOrder={updateOrder} />\r\n+                    )}\r\n+                </Box>\r\n+            )}\r\n+\r\n+            {/* Mobile - ใช้ Modal */}\r\n+            {isMobile && (\r\n+                <Modal\r\n+                    open={selectedData}\r\n+                    onClose={() => {\r\n+                        setSelectedData(false);\r\n+                    }}\r\n+                >\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        {selectedData && (\r\n+                            <OrderDetail\r\n+                                selectedOrder={selectedData}\r\n+                                onClose={() => setSelectedData(null)}\r\n+                                updateOrder={updateOrder} />\r\n+                        )}\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n+\r\n         </>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740642508311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n     const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n \r\n     const [data, setData] = useState([]);\r\n-    const [selectedData, setSelectedData] = useState(false);\r\n+    const [selectedData, setSelectedData] = useState(null);\r\n     const [orderDate, setOrderDate] = useState('');\r\n     const [orderTimeStart, setOrderTimeStart] = useState('');\r\n     const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n     const [filteredOrders, setFilteredOrders] = useState([]);\r\n"
                },
                {
                    "date": 1740642591161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,134 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import { Box, useMediaQuery, Modal } from \"@mui/material\";\r\n+import OrderHistory_filter from './assets/OrderHistory_filter';\r\n+import OrderHistory_table from './assets/OrderHistory_table';\r\n+import OrderHistory_detail from './assets/OrderHistory_detail';\r\n+\r\n+const OrderHistory = () => {\r\n+    const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n+    const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1040px)\");\r\n+\r\n+    const [data, setData] = useState([]);\r\n+    const [selectedData, setSelectedData] = useState(null);\r\n+    const [orderDate, setOrderDate] = useState('');\r\n+    const [orderTimeStart, setOrderTimeStart] = useState('');\r\n+    const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n+    const [filteredOrders, setFilteredOrders] = useState([]);\r\n+\r\n+    // Handle changes in date and time inputs\r\n+    const handleDateChange = (e) => setOrderDate(e.target.value);\r\n+    const handleTimeStartChange = (e) => setOrderTimeStart(e.target.value);\r\n+    const handleTimeEndChange = (e) => setOrderTimeEnd(e.target.value);\r\n+\r\n+    // API: Fetch data from server\r\n+    useEffect(() => {\r\n+        axios.get(\"http://localhost:5000/api/orders\")\r\n+            .then((res) => {\r\n+                console.log(res.data);\r\n+                setData(res.data);\r\n+            })\r\n+            .catch((err) => console.error(\"Error fetching orders:\", err));\r\n+    }, []);\r\n+\r\n+    // Function: Filter by Date\r\n+    useEffect(() => {\r\n+        const filtered = data.filter(order => {\r\n+            // เช็คสถานะ ต้องเป็น \"เสร็จสิ้น\" หรือ \"ยกเลิก\" เท่านั้น\r\n+            if (!['เสร็จสิ้น', 'ยกเลิก'].includes(order.orderStatus)) return false;\r\n+\r\n+            // แปลงวันที่จาก DD/MM/YYYY → YYYY-MM-DD\r\n+            const [day, month, year] = order.orderDate.split(\"/\");\r\n+            const orderDateFormatted = `${year}-${month}-${day}`; // ให้ตรงกับค่าจาก <input type=\"date\" />\r\n+\r\n+            // ตรวจสอบว่าตรงกับวันที่ที่เลือกหรือไม่\r\n+            if (orderDate && orderDateFormatted !== orderDate) return false;\r\n+\r\n+            // แปลงเวลาจาก HH:mm:ss → HH:mm\r\n+            const orderTimeFormatted = order.orderTime.slice(0, 5);\r\n+\r\n+            // เช็คช่วงเวลาสั่ง\r\n+            if (orderTimeStart && orderTimeFormatted < orderTimeStart) return false;\r\n+            if (orderTimeEnd && orderTimeFormatted > orderTimeEnd) return false;\r\n+\r\n+            return true;\r\n+        });\r\n+\r\n+        setFilteredOrders(filtered);\r\n+    }, [data, orderDate, orderTimeStart, orderTimeEnd]);\r\n+\r\n+    // Function: Select order\r\n+    const handleSelectOrder = (order) => {\r\n+        setSelectedData(order);\r\n+    };\r\n+\r\n+\r\n+    return (\r\n+        <>\r\n+            {/* Box ของ MenuList */}\r\n+            <Box\r\n+                sx={{ backgroundColor: \"#fff\", width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\", height: \"100vh\", padding: \"20px\", borderRadius: \"8px\", overflowY: \"auto\", marginRight: \"10px\" }}\r\n+            >\r\n+                <OrderHistory_filter\r\n+                    orderDate={orderDate}\r\n+                    orderTimeStart={orderTimeStart}\r\n+                    orderTimeEnd={orderTimeEnd}\r\n+                    handleDateChange={handleDateChange}\r\n+                    handleTimeStartChange={handleTimeStartChange}\r\n+                    handleTimeEndChange={handleTimeEndChange}\r\n+                />\r\n+                <OrderHistory_table data={filteredOrders} />\r\n+            </Box>\r\n+\r\n+            {/* Desktop & Tablet: แสดงรายละเอียดออเดอร์ด้านขวา */}\r\n+            {!isMobile && selectedData && (\r\n+                <Box\r\n+                    sx={{\r\n+                        backgroundColor: \"#fff\",\r\n+                        width: isTablet ? \"35%\" : \"25%\",\r\n+                        height: \"100vh\",\r\n+                        padding: \"20px\",\r\n+                        borderRadius: \"8px\",\r\n+                        overflowY: \"auto\",\r\n+                        display: \"flex\",\r\n+                        flexDirection: \"column\",\r\n+                    }}\r\n+                >\r\n+                    <OrderHistory_detail\r\n+                        selectedOrder={selectedData}\r\n+                        onClose={() => setSelectedData(null)}\r\n+                    />\r\n+                </Box>\r\n+            )}\r\n+\r\n+            {/* Mobile - ใช้ Modal */}\r\n+            {isMobile && selectedData && (\r\n+                <Modal\r\n+                    open={Boolean(selectedData)}\r\n+                    onClose={() => setSelectedData(null)}\r\n+                >\r\n+                    <Box\r\n+                        sx={{\r\n+                            backgroundColor: \"#fff\",\r\n+                            padding: \"15px\",\r\n+                            borderRadius: \"8px\",\r\n+                            maxWidth: \"90vw\",\r\n+                            height: \"80vh\",\r\n+                            margin: \"10vh auto\",\r\n+                            overflowY: \"auto\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                        }}\r\n+                    >\r\n+                        <OrderHistory_detail\r\n+                            selectedOrder={selectedData}\r\n+                            onClose={() => setSelectedData(null)}\r\n+                        />\r\n+                    </Box>\r\n+                </Modal>\r\n+            )}\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n+export default OrderHistory;\r\n"
                }
            ],
            "date": 1740378856447,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport OrderHistory_filter from './assets/OrderHistory_filter';\r\nimport OrderHistory_table from './assets/OrderHistory_table';\r\n\r\nconst OrderHistory = () => {\r\n\r\n    const [orderDate, setOrderDate] = useState('');\r\n    const [orderTimeStart, setOrderTimeStart] = useState('');\r\n    const [orderTimeEnd, setOrderTimeEnd] = useState('');\r\n\r\n    // Handle changes in date and time inputs\r\n    const handleDateChange = (e) => setOrderDate(e.target.value);\r\n    const handleTimeStartChange = (e) => setOrderTimeStart(e.target.value);\r\n    const handleTimeEndChange = (e) => setOrderTimeEnd(e.target.value);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"middle-box\">\r\n                <OrderHistory_filter\r\n                    orderDate={orderDate}\r\n                    orderTimeStart={orderTimeStart}\r\n                    orderTimeEnd={orderTimeEnd}\r\n                    handleDateChange={handleDateChange}\r\n                    handleTimeStartChange={handleTimeStartChange}\r\n                    handleTimeEndChange={handleTimeEndChange}\r\n                />\r\n                <OrderHistory_table />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderHistory;\r\n\r\n"
        }
    ]
}