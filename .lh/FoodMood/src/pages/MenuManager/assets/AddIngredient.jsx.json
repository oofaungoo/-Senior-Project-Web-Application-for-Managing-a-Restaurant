{
    "sourceFile": "FoodMood/src/pages/MenuManager/assets/AddIngredient.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1740398602811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740572016621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n                 <input\r\n                     type=\"text\"\r\n                     value={editedSizeName}\r\n                     onChange={(e) => setEditedSizeName(e.target.value)}\r\n-                    onBlur={handleUpdateSizeName} // Update size name on blur\r\n+                    disabled\r\n                 />\r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ราคา </label>\r\n"
                },
                {
                    "date": 1740572045634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,14 +85,9 @@\n                 เพิ่มวัตถุดิบ\r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ขนาด </label>\r\n-                <input\r\n-                    type=\"text\"\r\n-                    value={editedSizeName}\r\n-                    onChange={(e) => setEditedSizeName(e.target.value)}\r\n-                    disabled\r\n-                />\r\n+                <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled/>\r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ราคา </label>\r\n                 <input\r\n"
                },
                {
                    "date": 1740572060431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n \r\n     return (\r\n         <>\r\n             <div className=\"right-box-header text-center fs-18 fw-5\">\r\n-                เพิ่มวัตถุดิบ\r\n+                จัดการวัตถุดิบ\r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ขนาด </label>\r\n                 <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled/>\r\n"
                },
                {
                    "date": 1740572073358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState,useEffect} from 'react';\r\n+import React, { useState, useEffect } from 'react';\r\n \r\n const AddIngredient = ({\r\n     currentSize,\r\n     newSizePrice,\r\n@@ -10,16 +10,16 @@\n     handleAddIngredient,\r\n     ingredientMain\r\n }) => {\r\n     const [ingredients, setIngredients] = useState([\r\n-        { \r\n-            newIngredient: '', \r\n-            newIngredientQty: '', \r\n-            unit: 'kg' \r\n+        {\r\n+            newIngredient: '',\r\n+            newIngredientQty: '',\r\n+            unit: 'kg'\r\n         },\r\n     ]);\r\n     useEffect(() => {\r\n-        if(ingredientMain){\r\n+        if (ingredientMain) {\r\n             setIngredients(ingredientMain);\r\n         }\r\n     }, []);\r\n \r\n@@ -48,19 +48,19 @@\n         } else {\r\n             console.error(\"onUpdatePrice is not a function or missing\");\r\n         }\r\n     };\r\n-    \r\n \r\n+\r\n     const updateIngredientField = (index, field, value) => {\r\n         const updatedIngredients = [...ingredients];\r\n-        if(field == \"newIngredient\"){\r\n+        if (field == \"newIngredient\") {\r\n             const targetIngredient = propIngredientOptions.find(option => option.name === value);\r\n             console.log('targetIngredient:', targetIngredient);\r\n             updatedIngredients[index][field] = value;\r\n             updatedIngredients[index][\"unit\"] = targetIngredient.unit;\r\n \r\n-        }else{\r\n+        } else {\r\n             updatedIngredients[index][field] = value;\r\n         }\r\n         console.log('index:', index);\r\n         console.log('value:', value);\r\n@@ -80,14 +80,17 @@\n     };\r\n \r\n     return (\r\n         <>\r\n+            <Grid sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n+                <p style={{ fontSize: 18, fontWeight: 500, justifyContent: \"center\" }}>{form === \"Edit\" ? \"แก้ไขเมนู\" : \"เพิ่มเมนูใหม่\"}</p>\r\n+            </Grid>\r\n             <div className=\"right-box-header text-center fs-18 fw-5\">\r\n                 จัดการวัตถุดิบ\r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ขนาด </label>\r\n-                <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled/>\r\n+                <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled />\r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ราคา </label>\r\n                 <input\r\n@@ -129,9 +132,9 @@\n                             disabled\r\n                             onChange={(e) =>\r\n                                 updateIngredientField(index, 'unit', e.target.value)\r\n                             }\r\n-                            \r\n+\r\n                         >\r\n                             <option value=\"kg\">กิโลกรัม</option>\r\n                             <option value=\"g\">กรัม</option>\r\n                         </select>\r\n"
                },
                {
                    "date": 1740572080073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,12 +81,11 @@\n \r\n     return (\r\n         <>\r\n             <Grid sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n-                <p style={{ fontSize: 18, fontWeight: 500, justifyContent: \"center\" }}>{form === \"Edit\" ? \"แก้ไขเมนู\" : \"เพิ่มเมนูใหม่\"}</p>\r\n+                <p style={{ fontSize: 18, fontWeight: 500, justifyContent: \"center\" }}>จัดการวัตถุดิบ</p>\r\n             </Grid>\r\n-            <div className=\"right-box-header text-center fs-18 fw-5\">\r\n-                จัดการวัตถุดิบ\r\n+                \r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ขนาด </label>\r\n                 <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled />\r\n"
                },
                {
                    "date": 1740572085430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,10 +83,8 @@\n         <>\r\n             <Grid sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n                 <p style={{ fontSize: 18, fontWeight: 500, justifyContent: \"center\" }}>จัดการวัตถุดิบ</p>\r\n             </Grid>\r\n-                \r\n-            </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ขนาด </label>\r\n                 <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled />\r\n             </div>\r\n"
                },
                {
                    "date": 1740572094535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n+import { Grid, Stack, Box } from \"@mui/material\";\r\n \r\n const AddIngredient = ({\r\n     currentSize,\r\n     newSizePrice,\r\n"
                },
                {
                    "date": 1740572142650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,12 +84,13 @@\n         <>\r\n             <Grid sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n                 <p style={{ fontSize: 18, fontWeight: 500, justifyContent: \"center\" }}>จัดการวัตถุดิบ</p>\r\n             </Grid>\r\n-            <div style={{ marginTop: \"10px\" }}>\r\n-                <label>ขนาด </label>\r\n+            <Grid mb={1}>\r\n+                <label>ขนาด</label>\r\n                 <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled />\r\n-            </div>\r\n+            </Grid>\r\n+            \r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>ราคา </label>\r\n                 <input\r\n                     type=\"number\"\r\n"
                },
                {
                    "date": 1740572174302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,18 +88,16 @@\n             <Grid mb={1}>\r\n                 <label>ขนาด</label>\r\n                 <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled />\r\n             </Grid>\r\n-            \r\n+            <Grid mb={1}>\r\n+                <label>ราคา</label>\r\n+                <input type=\"number\" value={editedPrice} placeholder=\"ระบุราคา\" onChange={(e) => setEditedPrice(e.target.value)} onBlur={handleUpdatePrice}/> \r\n+            </Grid>\r\n+\r\n             <div style={{ marginTop: \"10px\" }}>\r\n-                <label>ราคา </label>\r\n-                <input\r\n-                    type=\"number\"\r\n-                    value={editedPrice}\r\n-                    placeholder=\"ระบุราคา\"\r\n-                    onChange={(e) => setEditedPrice(e.target.value)}\r\n-                    onBlur={handleUpdatePrice} // Update price on blur\r\n-                />\r\n+                <label> </label>\r\n+                \r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>วัตถุดิบ</label>\r\n                 {ingredients.map((ingredient, index) => (\r\n"
                },
                {
                    "date": 1740572393555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,14 +90,14 @@\n                 <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled />\r\n             </Grid>\r\n             <Grid mb={1}>\r\n                 <label>ราคา</label>\r\n-                <input type=\"number\" value={editedPrice} placeholder=\"ระบุราคา\" onChange={(e) => setEditedPrice(e.target.value)} onBlur={handleUpdatePrice}/> \r\n+                <input type=\"number\" value={editedPrice} placeholder=\"ระบุราคา\" onChange={(e) => setEditedPrice(e.target.value)} onBlur={handleUpdatePrice} />\r\n             </Grid>\r\n \r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label> </label>\r\n-                \r\n+\r\n             </div>\r\n             <div style={{ marginTop: \"10px\" }}>\r\n                 <label>วัตถุดิบ</label>\r\n                 {ingredients.map((ingredient, index) => (\r\n@@ -142,12 +142,23 @@\n             <div>\r\n                 <button className=\"circle-plus-btn\" onClick={handleAddMoreFields}>+</button>\r\n             </div>\r\n \r\n-            <div className=\"order-action-buttons\">\r\n+\r\n+            <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n                 <button type=\"button\" className=\"red-button\" onClick={onBack}>\r\n                     ย้อนกลับ\r\n                 </button>\r\n+                <button type=\"button\" className=\"green-button\" onClick={handleSave}>\r\n+                    บันทึก\r\n+                </button>\r\n+            </Grid>\r\n+\r\n+\r\n+            <div className=\"order-action-buttons\">\r\n+                <button type=\"button\" className=\"red-button\" >\r\n+                    \r\n+                </button>\r\n                 <button type=\"button\" className=\"blue-button\" onClick={handleSave}>\r\n                     บันทึก\r\n                 </button>\r\n             </div>\r\n"
                },
                {
                    "date": 1740572402989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,18 +151,8 @@\n                 <button type=\"button\" className=\"green-button\" onClick={handleSave}>\r\n                     บันทึก\r\n                 </button>\r\n             </Grid>\r\n-\r\n-\r\n-            <div className=\"order-action-buttons\">\r\n-                <button type=\"button\" className=\"red-button\" >\r\n-                    \r\n-                </button>\r\n-                <button type=\"button\" className=\"blue-button\" onClick={handleSave}>\r\n-                    บันทึก\r\n-                </button>\r\n-            </div>\r\n         </>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740572411039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n                 <button className=\"circle-plus-btn\" onClick={handleAddMoreFields}>+</button>\r\n             </div>\r\n \r\n \r\n-            <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n+            <Grid display=\"flex\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n                 <button type=\"button\" className=\"red-button\" onClick={onBack}>\r\n                     ย้อนกลับ\r\n                 </button>\r\n                 <button type=\"button\" className=\"green-button\" onClick={handleSave}>\r\n"
                },
                {
                    "date": 1740572417437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n                 <button className=\"circle-plus-btn\" onClick={handleAddMoreFields}>+</button>\r\n             </div>\r\n \r\n \r\n-            <Grid justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n+            <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ marginTop: \"auto\", paddingTop: \"8px\" }}>\r\n                 <button type=\"button\" className=\"red-button\" onClick={onBack}>\r\n                     ย้อนกลับ\r\n                 </button>\r\n                 <button type=\"button\" className=\"green-button\" onClick={handleSave}>\r\n"
                },
                {
                    "date": 1740572928004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,153 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Grid, Stack, Box } from \"@mui/material\";\r\n+import AddCircleIcon from '@mui/icons-material/AddCircle';\r\n+\r\n+const AddIngredient = ({\r\n+    currentSize,\r\n+    newSizePrice,\r\n+    ingredientOptions,\r\n+    onUpdateSizeName,\r\n+    onUpdatePrice,\r\n+    onBack,\r\n+    handleAddIngredient,\r\n+    ingredientMain\r\n+}) => {\r\n+    const [ingredients, setIngredients] = useState([\r\n+        {\r\n+            newIngredient: '',\r\n+            newIngredientQty: '',\r\n+            unit: 'kg'\r\n+        },\r\n+    ]);\r\n+    useEffect(() => {\r\n+        if (ingredientMain) {\r\n+            setIngredients(ingredientMain);\r\n+        }\r\n+    }, []);\r\n+\r\n+    const [editedSizeName, setEditedSizeName] = useState(currentSize);\r\n+    const [editedPrice, setEditedPrice] = useState(newSizePrice);\r\n+\r\n+    const [propIngredientOptions, setPropIngredientOptions] = useState(ingredientOptions);\r\n+\r\n+    const handleAddMoreFields = () => {\r\n+        setIngredients([\r\n+            ...ingredients,\r\n+            { newIngredient: '', newIngredientQty: '', unit: 'kg' },\r\n+        ]);\r\n+    };\r\n+\r\n+    const handleUpdateSizeName = () => {\r\n+        if (editedSizeName && editedSizeName !== currentSize) {\r\n+            onUpdateSizeName(currentSize, editedSizeName);\r\n+        }\r\n+    };\r\n+\r\n+    const handleUpdatePrice = () => {\r\n+        console.log(\"Updating price:\", editedSizeName, editedPrice);\r\n+        if (editedPrice && typeof onUpdatePrice === \"function\") {\r\n+            onUpdatePrice(editedSizeName, editedPrice);\r\n+        } else {\r\n+            console.error(\"onUpdatePrice is not a function or missing\");\r\n+        }\r\n+    };\r\n+\r\n+\r\n+    const updateIngredientField = (index, field, value) => {\r\n+        const updatedIngredients = [...ingredients];\r\n+        if (field == \"newIngredient\") {\r\n+            const targetIngredient = propIngredientOptions.find(option => option.name === value);\r\n+            console.log('targetIngredient:', targetIngredient);\r\n+            updatedIngredients[index][field] = value;\r\n+            updatedIngredients[index][\"unit\"] = targetIngredient.unit;\r\n+\r\n+        } else {\r\n+            updatedIngredients[index][field] = value;\r\n+        }\r\n+        console.log('index:', index);\r\n+        console.log('value:', value);\r\n+        console.log('Updated Ingredients:', updatedIngredients);\r\n+\r\n+        setIngredients(updatedIngredients);\r\n+    };\r\n+\r\n+    const handleSave = () => {\r\n+        const dataToSave = {\r\n+            sizeName: editedSizeName,\r\n+            price: editedPrice,\r\n+            ingredients: ingredients,\r\n+        };\r\n+        handleAddIngredient(dataToSave);\r\n+        onBack();\r\n+    };\r\n+\r\n+    return (\r\n+        <>\r\n+            <Grid sx={{ borderBottom: \"1px solid #ddd\", marginBottom: \"8px\", paddingBottom: \"8px\" }}>\r\n+                <p style={{ fontSize: 18, fontWeight: 500, justifyContent: \"center\" }}>จัดการวัตถุดิบ</p>\r\n+            </Grid>\r\n+            <Grid mb={1}>\r\n+                <label>ขนาด</label>\r\n+                <input type=\"text\" value={editedSizeName} onChange={(e) => setEditedSizeName(e.target.value)} disabled />\r\n+            </Grid>\r\n+            <Grid mb={1}>\r\n+                <label>ราคา</label>\r\n+                <input type=\"number\" value={editedPrice} placeholder=\"ระบุราคา\" onChange={(e) => setEditedPrice(e.target.value)} onBlur={handleUpdatePrice} />\r\n+            </Grid>\r\n+            <div style={{ marginTop: \"10px\" }}>\r\n+                <label>วัตถุดิบ</label>\r\n+                {ingredients.map((ingredient, index) => (\r\n+                    <div key={index} className=\"inline-elements\" style={{ marginBottom: \"10px\" }}>\r\n+                        <select\r\n+                            className=\"form-select\"\r\n+                            value={ingredient.newIngredient}\r\n+                            onChange={(e) =>\r\n+                                updateIngredientField(index, 'newIngredient', e.target.value)\r\n+                            }\r\n+                        >\r\n+                            <option disabled value=\"\">วัตถุดิบ</option>\r\n+                            {ingredientOptions.map((option, idx) => (\r\n+                                <option key={idx} value={option.name}>\r\n+                                    {option.name}\r\n+                                </option>\r\n+                            ))}\r\n+                        </select>\r\n+                        <input\r\n+                            type=\"number\"\r\n+                            placeholder=\"ปริมาณ\"\r\n+                            value={ingredient.newIngredientQty}\r\n+                            onChange={(e) =>\r\n+                                updateIngredientField(index, 'newIngredientQty', e.target.value)\r\n+                            }\r\n+                        />\r\n+                        <select value={ingredient.unit} disabled>\r\n+                            <option value=\"kg\">กิโลกรัม</option>\r\n+                            <option value=\"g\">กรัม</option>\r\n+                        </select>\r\n+                    </div>\r\n+                ))}\r\n+            </div>\r\n+\r\n+            <Grid item xs={12} display=\"flex\" justifyContent=\"center\">\r\n+                <AddCircleIcon\r\n+                    type=\"button\"\r\n+                    sx={{ color: \"#62c965\", cursor: \"pointer\" }}\r\n+                    onClick={handleAddMoreFields}\r\n+                />\r\n+            </Grid>\r\n+\r\n+\r\n+\r\n+            <Grid display=\"flex\" justifyContent=\"space-between\" borderTop=\"1px solid #ddd\" sx={{ paddingTop: \"8px\" }}>\r\n+                <button type=\"button\" className=\"red-button\" onClick={onBack}>\r\n+                    ย้อนกลับ\r\n+                </button>\r\n+                <button type=\"button\" className=\"green-button\" onClick={handleSave}>\r\n+                    บันทึก\r\n+                </button>\r\n+            </Grid>\r\n+        </>\r\n+    );\r\n+};\r\n+\r\n+export default AddIngredient;\r\n"
                }
            ],
            "date": 1740398602811,
            "name": "Commit-0",
            "content": "import React, { useState,useEffect} from 'react';\r\n\r\nconst AddIngredient = ({\r\n    currentSize,\r\n    newSizePrice,\r\n    ingredientOptions,\r\n    onUpdateSizeName,\r\n    onUpdatePrice,\r\n    onBack,\r\n    handleAddIngredient,\r\n    ingredientMain\r\n}) => {\r\n    const [ingredients, setIngredients] = useState([\r\n        { \r\n            newIngredient: '', \r\n            newIngredientQty: '', \r\n            unit: 'kg' \r\n        },\r\n    ]);\r\n    useEffect(() => {\r\n        if(ingredientMain){\r\n            setIngredients(ingredientMain);\r\n        }\r\n    }, []);\r\n\r\n    const [editedSizeName, setEditedSizeName] = useState(currentSize);\r\n    const [editedPrice, setEditedPrice] = useState(newSizePrice);\r\n\r\n    const [propIngredientOptions, setPropIngredientOptions] = useState(ingredientOptions);\r\n\r\n    const handleAddMoreFields = () => {\r\n        setIngredients([\r\n            ...ingredients,\r\n            { newIngredient: '', newIngredientQty: '', unit: 'kg' },\r\n        ]);\r\n    };\r\n\r\n    const handleUpdateSizeName = () => {\r\n        if (editedSizeName && editedSizeName !== currentSize) {\r\n            onUpdateSizeName(currentSize, editedSizeName);\r\n        }\r\n    };\r\n\r\n    const handleUpdatePrice = () => {\r\n        console.log(\"Updating price:\", editedSizeName, editedPrice);\r\n        if (editedPrice && typeof onUpdatePrice === \"function\") {\r\n            onUpdatePrice(editedSizeName, editedPrice);\r\n        } else {\r\n            console.error(\"onUpdatePrice is not a function or missing\");\r\n        }\r\n    };\r\n    \r\n\r\n    const updateIngredientField = (index, field, value) => {\r\n        const updatedIngredients = [...ingredients];\r\n        if(field == \"newIngredient\"){\r\n            const targetIngredient = propIngredientOptions.find(option => option.name === value);\r\n            console.log('targetIngredient:', targetIngredient);\r\n            updatedIngredients[index][field] = value;\r\n            updatedIngredients[index][\"unit\"] = targetIngredient.unit;\r\n\r\n        }else{\r\n            updatedIngredients[index][field] = value;\r\n        }\r\n        console.log('index:', index);\r\n        console.log('value:', value);\r\n        console.log('Updated Ingredients:', updatedIngredients);\r\n\r\n        setIngredients(updatedIngredients);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        const dataToSave = {\r\n            sizeName: editedSizeName,\r\n            price: editedPrice,\r\n            ingredients: ingredients,\r\n        };\r\n        handleAddIngredient(dataToSave);\r\n        onBack();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"right-box-header text-center fs-18 fw-5\">\r\n                เพิ่มวัตถุดิบ\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <label>ขนาด </label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={editedSizeName}\r\n                    onChange={(e) => setEditedSizeName(e.target.value)}\r\n                    onBlur={handleUpdateSizeName} // Update size name on blur\r\n                />\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <label>ราคา </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={editedPrice}\r\n                    placeholder=\"ระบุราคา\"\r\n                    onChange={(e) => setEditedPrice(e.target.value)}\r\n                    onBlur={handleUpdatePrice} // Update price on blur\r\n                />\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <label>วัตถุดิบ</label>\r\n                {ingredients.map((ingredient, index) => (\r\n                    <div key={index} className=\"inline-elements\" style={{ marginBottom: \"10px\" }}>\r\n                        <select\r\n                            className=\"form-select\"\r\n                            value={ingredient.newIngredient}\r\n                            onChange={(e) =>\r\n                                updateIngredientField(index, 'newIngredient', e.target.value)\r\n                            }\r\n                        >\r\n                            <option disabled value=\"\">เลือกวัตถุดิบ</option>\r\n                            {ingredientOptions.map((option, idx) => (\r\n                                <option key={idx} value={option.name}>\r\n                                    {option.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"ปริมาณ\"\r\n                            value={ingredient.newIngredientQty}\r\n                            onChange={(e) =>\r\n                                updateIngredientField(index, 'newIngredientQty', e.target.value)\r\n                            }\r\n                        />\r\n                        <select\r\n                            value={ingredient.unit}\r\n                            disabled\r\n                            onChange={(e) =>\r\n                                updateIngredientField(index, 'unit', e.target.value)\r\n                            }\r\n                            \r\n                        >\r\n                            <option value=\"kg\">กิโลกรัม</option>\r\n                            <option value=\"g\">กรัม</option>\r\n                        </select>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"circle-plus-btn\" onClick={handleAddMoreFields}>+</button>\r\n            </div>\r\n\r\n            <div className=\"order-action-buttons\">\r\n                <button type=\"button\" className=\"red-button\" onClick={onBack}>\r\n                    ย้อนกลับ\r\n                </button>\r\n                <button type=\"button\" className=\"blue-button\" onClick={handleSave}>\r\n                    บันทึก\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIngredient;\r\n"
        }
    ]
}