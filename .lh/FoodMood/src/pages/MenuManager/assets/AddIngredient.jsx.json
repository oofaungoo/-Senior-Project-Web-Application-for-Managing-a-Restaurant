{
    "sourceFile": "FoodMood/src/pages/MenuManager/assets/AddIngredient.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1740398602811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1740398602811,
            "name": "Commit-0",
            "content": "import React, { useState,useEffect} from 'react';\r\n\r\nconst AddIngredient = ({\r\n    currentSize,\r\n    newSizePrice,\r\n    ingredientOptions,\r\n    onUpdateSizeName,\r\n    onUpdatePrice,\r\n    onBack,\r\n    handleAddIngredient,\r\n    ingredientMain\r\n}) => {\r\n    const [ingredients, setIngredients] = useState([\r\n        { \r\n            newIngredient: '', \r\n            newIngredientQty: '', \r\n            unit: 'kg' \r\n        },\r\n    ]);\r\n    useEffect(() => {\r\n        if(ingredientMain){\r\n            setIngredients(ingredientMain);\r\n        }\r\n    }, []);\r\n\r\n    const [editedSizeName, setEditedSizeName] = useState(currentSize);\r\n    const [editedPrice, setEditedPrice] = useState(newSizePrice);\r\n\r\n    const [propIngredientOptions, setPropIngredientOptions] = useState(ingredientOptions);\r\n\r\n    const handleAddMoreFields = () => {\r\n        setIngredients([\r\n            ...ingredients,\r\n            { newIngredient: '', newIngredientQty: '', unit: 'kg' },\r\n        ]);\r\n    };\r\n\r\n    const handleUpdateSizeName = () => {\r\n        if (editedSizeName && editedSizeName !== currentSize) {\r\n            onUpdateSizeName(currentSize, editedSizeName);\r\n        }\r\n    };\r\n\r\n    const handleUpdatePrice = () => {\r\n        console.log(\"Updating price:\", editedSizeName, editedPrice);\r\n        if (editedPrice && typeof onUpdatePrice === \"function\") {\r\n            onUpdatePrice(editedSizeName, editedPrice);\r\n        } else {\r\n            console.error(\"onUpdatePrice is not a function or missing\");\r\n        }\r\n    };\r\n    \r\n\r\n    const updateIngredientField = (index, field, value) => {\r\n        const updatedIngredients = [...ingredients];\r\n        if(field == \"newIngredient\"){\r\n            const targetIngredient = propIngredientOptions.find(option => option.name === value);\r\n            console.log('targetIngredient:', targetIngredient);\r\n            updatedIngredients[index][field] = value;\r\n            updatedIngredients[index][\"unit\"] = targetIngredient.unit;\r\n\r\n        }else{\r\n            updatedIngredients[index][field] = value;\r\n        }\r\n        console.log('index:', index);\r\n        console.log('value:', value);\r\n        console.log('Updated Ingredients:', updatedIngredients);\r\n\r\n        setIngredients(updatedIngredients);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        const dataToSave = {\r\n            sizeName: editedSizeName,\r\n            price: editedPrice,\r\n            ingredients: ingredients,\r\n        };\r\n        handleAddIngredient(dataToSave);\r\n        onBack();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"right-box-header text-center fs-18 fw-5\">\r\n                เพิ่มวัตถุดิบ\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <label>ขนาด </label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={editedSizeName}\r\n                    onChange={(e) => setEditedSizeName(e.target.value)}\r\n                    onBlur={handleUpdateSizeName} // Update size name on blur\r\n                />\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <label>ราคา </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={editedPrice}\r\n                    placeholder=\"ระบุราคา\"\r\n                    onChange={(e) => setEditedPrice(e.target.value)}\r\n                    onBlur={handleUpdatePrice} // Update price on blur\r\n                />\r\n            </div>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n                <label>วัตถุดิบ</label>\r\n                {ingredients.map((ingredient, index) => (\r\n                    <div key={index} className=\"inline-elements\" style={{ marginBottom: \"10px\" }}>\r\n                        <select\r\n                            className=\"form-select\"\r\n                            value={ingredient.newIngredient}\r\n                            onChange={(e) =>\r\n                                updateIngredientField(index, 'newIngredient', e.target.value)\r\n                            }\r\n                        >\r\n                            <option disabled value=\"\">เลือกวัตถุดิบ</option>\r\n                            {ingredientOptions.map((option, idx) => (\r\n                                <option key={idx} value={option.name}>\r\n                                    {option.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"ปริมาณ\"\r\n                            value={ingredient.newIngredientQty}\r\n                            onChange={(e) =>\r\n                                updateIngredientField(index, 'newIngredientQty', e.target.value)\r\n                            }\r\n                        />\r\n                        <select\r\n                            value={ingredient.unit}\r\n                            disabled\r\n                            onChange={(e) =>\r\n                                updateIngredientField(index, 'unit', e.target.value)\r\n                            }\r\n                            \r\n                        >\r\n                            <option value=\"kg\">กิโลกรัม</option>\r\n                            <option value=\"g\">กรัม</option>\r\n                        </select>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"circle-plus-btn\" onClick={handleAddMoreFields}>+</button>\r\n            </div>\r\n\r\n            <div className=\"order-action-buttons\">\r\n                <button type=\"button\" className=\"red-button\" onClick={onBack}>\r\n                    ย้อนกลับ\r\n                </button>\r\n                <button type=\"button\" className=\"blue-button\" onClick={handleSave}>\r\n                    บันทึก\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddIngredient;\r\n"
        }
    ]
}