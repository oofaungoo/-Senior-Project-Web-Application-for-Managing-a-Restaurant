{
    "sourceFile": "FoodMood/src/pages/MenuManager/assets/AddNewMenu.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1739559269548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739607882026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,13 @@\n import axios from 'axios';\r\n import { HiOutlinePencil, HiOutlineTrash } from \"react-icons/hi\";\r\n import Swal from 'sweetalert2';\r\n \r\n+{/* \r\n+    1. กดแก้ไขแล้วมันไม่ดึงข้อมูลไปแก้\r\n+*/}\r\n+\r\n+\r\n const AddNewMenu = ({ form, dataToEdit, onCancel }) => {\r\n     const [menuName, setMenuName] = useState('');\r\n     const [category_id, setCategory_id] = useState('1');\r\n     const [category, setCategory] = useState('1');\r\n"
                },
                {
                    "date": 1739612904346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,8 +65,9 @@\n             setMenuName(dataToEdit.name)\r\n             setCategory_id(dataToEdit.category_id)\r\n             setCategory(dataToEdit.category)\r\n             setSizePrices(dataToEdit.sizePrices)\r\n+            setCustomOptions(dataToEdit.customOptions)\r\n         }\r\n \r\n     }, []);\r\n \r\n"
                },
                {
                    "date": 1739613044381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     1. กดแก้ไขแล้วมันไม่ดึงข้อมูลไปแก้\r\n */}\r\n \r\n \r\n-const AddNewMenu = ({ form, dataToEdit, onCancel }) => {\r\n+const AddNewMenu = ({ form, dataToEdit, onCancel,setShowItemDetail }) => {\r\n     const [menuName, setMenuName] = useState('');\r\n     const [category_id, setCategory_id] = useState('1');\r\n     const [category, setCategory] = useState('1');\r\n     const [sizePrices, setSizePrices] = useState([]);\r\n@@ -180,8 +180,9 @@\n                 sizePrices,\r\n                 customOptions,\r\n             };\r\n             axios.put(`http://localhost:5000/api/foods/${dataToEdit._id}`, editedMenu)\r\n+            setShowItemDetail(false);\r\n         } else {\r\n             const newMenu = {\r\n                 name: menuName,\r\n                 category_id,\r\n@@ -190,8 +191,9 @@\n                 sizePrices,\r\n                 customOptions,\r\n             };\r\n             axios.post('http://localhost:5000/api/foods', newMenu)\r\n+            setShowItemDetail(false);\r\n         }\r\n     };\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1740398597574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n         }\r\n     };\r\n \r\n     return (\r\n-        <div className=\"right-box\">\r\n+        <>\r\n             {!ingredientScreen ? (\r\n                 <form onSubmit={(e) => e.preventDefault()}>\r\n                     <div className=\"right-box-header text-center fs-18 fw-5\">เพิ่มเมนูใหม่</div>\r\n \r\n@@ -356,9 +356,9 @@\n                     }}\r\n                     onBack={() => setIngredientScreen(false)}\r\n                 />\r\n             )}\r\n-        </div>\r\n+        </>\r\n     );\r\n };\r\n \r\n export default AddNewMenu;\r\n"
                }
            ],
            "date": 1739559269548,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { HiPlusCircle } from \"react-icons/hi\";\r\nimport './AddNewMenu.css';\r\nimport AddIngredient from './AddIngredient';\r\nimport axios from 'axios';\r\nimport { HiOutlinePencil, HiOutlineTrash } from \"react-icons/hi\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst AddNewMenu = ({ form, dataToEdit, onCancel }) => {\r\n    const [menuName, setMenuName] = useState('');\r\n    const [category_id, setCategory_id] = useState('1');\r\n    const [category, setCategory] = useState('1');\r\n    const [sizePrices, setSizePrices] = useState([]);\r\n    const [newSize, setNewSize] = useState('เล็ก');\r\n    const [newSizePrice, setNewSizePrice] = useState('');\r\n\r\n    const [imagePreview, setImagePreview] = useState(null);   //show: user input image (ตอนนีัสามารถ show ได้ แต่ยังไม่สามารถเก็บใน database ได้)\r\n    const [ingredientScreen, setIngredientScreen] = useState(false);    //show: AddIngredient.jsx\r\n\r\n    const [currentSize, setCurrentSize] = useState(null);\r\n    const [price, setPrice] = useState(null);\r\n    const [ingredientMain, setIngredientMain] = useState([\r\n        {\r\n            newIngredient: '',\r\n            newIngredientQty: '',\r\n            unit: 'kg'\r\n        },\r\n    ]);\r\n\r\n    const [ingredientsBySize, setIngredientsBySize] = useState({});\r\n\r\n    const [customOptions, setCustomOptions] = useState([]);\r\n    const [newLabel, setNewLabel] = useState('');\r\n    const [newOption, setNewOption] = useState('');\r\n    const [isOptionVisible, setIsOptionVisible] = useState(false);\r\n\r\n\r\n    const [ingredientOptions, setIngredientOptions] = useState([]);\r\n\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [sizeList, setSizeList] = useState([]);\r\n\r\n    // API: Fetch data from database (1.Food category 2.Food size 3.Ingredient)\r\n    useEffect(() => {\r\n        // Food category\r\n        axios.get('http://localhost:5000/api/add_menus/category')\r\n            .then(res => { setCategoryList(res.data); })\r\n            .catch(err => console.error('Error fetching categories:', err));\r\n        // Food size\r\n        axios.get('http://localhost:5000/api/add_menus/size')\r\n            .then(res => { setSizeList(res.data); })\r\n            .catch(err => console.error('Error fetching sizes:', err));\r\n        // Ingredient\r\n        axios.get('http://localhost:5000/api/ingredients')\r\n            .then(res => { setIngredientOptions(res.data); })\r\n            .catch(err => console.error('Error fetching ingredients:', err));\r\n\r\n        if (form == \"Edit\") {\r\n            console.log('dataToEdit:');\r\n            setMenuName(dataToEdit.name)\r\n            setCategory_id(dataToEdit.category_id)\r\n            setCategory(dataToEdit.category)\r\n            setSizePrices(dataToEdit.sizePrices)\r\n        }\r\n\r\n    }, []);\r\n\r\n    // Handle image upload\r\n    const handleImageUpload = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => setImagePreview(reader.result);\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    // Add size and price\r\n    const handleAddSizePrice = () => {\r\n        if (newSize && newSizePrice) {\r\n            setSizePrices([{\r\n                size: newSize,\r\n                price: Number(newSizePrice)\r\n            },\r\n            ...sizePrices\r\n            ]);\r\n            setNewSize('');\r\n            setNewSizePrice('');\r\n        }\r\n    };\r\n\r\n    // Show ingredient screen\r\n    const handleIngredientScreen = (size, price, ingredient) => {\r\n        setCurrentSize(size);\r\n        setPrice(price)\r\n        setIngredientMain(ingredient);\r\n\r\n        console.log('ingredient:', ingredient);\r\n        setIngredientScreen(true);\r\n    };\r\n\r\n    // Add ingredient\r\n    const handleAddIngredient = (value) => {\r\n        console.log('value:', value);\r\n        const intoSizePrices = sizePrices.map((item) => {\r\n            if (item.size === value.sizeName) {\r\n                return { ...item, ingredients: value.ingredients };\r\n            }\r\n            return item;\r\n        });\r\n\r\n        console.log('intoSizePrices:', intoSizePrices);\r\n\r\n        setSizePrices(intoSizePrices);\r\n    };\r\n\r\n    // Add custom option\r\n    const handleAddOption = () => {\r\n        if (newLabel && newOption) {\r\n            setCustomOptions([\r\n                ...customOptions,\r\n                { label: newLabel, options: newOption.split(',').map((opt) => opt.trim()) },\r\n            ]);\r\n            setNewLabel('');\r\n            setNewOption('');\r\n            setIsOptionVisible(false);\r\n        }\r\n    };\r\n\r\n    // Special Option 1.Edit 2.Delete\r\n    const handleEditOption = (index) => {\r\n        Swal.fire({\r\n            title: \"แก้ไขตัวเลือกพิเศษ\",\r\n            html: `\r\n                <label for=\"swal-input-label\">ชื่อหมวดหมู่:</label>\r\n                <input id=\"swal-input-label\" class=\"swal2-input\" value=\"${customOptions[index].label}\" placeholder=\"เช่น ระดับความหวาน\" />\r\n                <label for=\"swal-input-options\">ตัวเลือก:</label>\r\n                <input id=\"swal-input-options\" class=\"swal2-input\" value=\"${customOptions[index].options.join(', ')}\" placeholder=\"เช่น 0, 25, 50 (กรุณาระบุเครื่องหมาย , ด้วย)\" />\r\n            `,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'บันทึก',\r\n            cancelButtonText: 'ยกเลิก',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const editedLabel = document.getElementById('swal-input-label').value;\r\n                const editedOptions = document.getElementById('swal-input-options').value;\r\n    \r\n                if (editedLabel && editedOptions) {\r\n                    const updatedOptions = customOptions.map((item, i) =>\r\n                        i === index\r\n                            ? { ...item, label: editedLabel, options: editedOptions.split(',').map(opt => opt.trim()) }\r\n                            : item\r\n                    );\r\n                    setCustomOptions(updatedOptions);\r\n                } else {\r\n                    Swal.fire(\"กรุณาระบุ ชื่อหมวดหมู่ และ ตัวเลือก ให้เรียบร้อย!\", '', 'error');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleDeleteOption = (index) => {\r\n        const filteredOptions = customOptions.filter((_, i) => i !== index);\r\n        setCustomOptions(filteredOptions);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (form == \"Edit\") {\r\n            const editedMenu = {\r\n                name: menuName,\r\n                category_id,\r\n                category: categoryList.find((item) => item._id === category_id)?.name,\r\n                image: imagePreview,\r\n                sizePrices,\r\n                customOptions,\r\n            };\r\n            axios.put(`http://localhost:5000/api/foods/${dataToEdit._id}`, editedMenu)\r\n        } else {\r\n            const newMenu = {\r\n                name: menuName,\r\n                category_id,\r\n                category: categoryList.find((item) => item._id === category_id)?.name,\r\n                image: imagePreview,\r\n                sizePrices,\r\n                customOptions,\r\n            };\r\n            axios.post('http://localhost:5000/api/foods', newMenu)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"right-box\">\r\n            {!ingredientScreen ? (\r\n                <form onSubmit={(e) => e.preventDefault()}>\r\n                    <div className=\"right-box-header text-center fs-18 fw-5\">เพิ่มเมนูใหม่</div>\r\n\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <label>ชื่อเมนู</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"เช่น ผัดกระเพรา\"\r\n                            value={menuName}\r\n                            onChange={(e) => setMenuName(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <label>หมวดหมู่</label>\r\n                        <select\r\n                            className=\"form-select\"\r\n                            value={category_id}\r\n                            onChange={(e) => setCategory_id(e.target.value)}\r\n                        >\r\n                            {categoryList.map((item, index) => (\r\n                                <option key={index} value={item._id}>{item.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"upload-img\" style={{ marginTop: \"10px\" }} onClick={() => document.getElementById('fileInput').click()}>\r\n                        {imagePreview ? (\r\n                            <img src={imagePreview} alt=\"Uploaded\" style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\r\n                        ) : (\r\n                            <>\r\n                                <HiPlusCircle className=\"fs-60\" />\r\n                                อัปโหลดรูปภาพ\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <input\r\n                        id=\"fileInput\"\r\n                        type=\"file\"\r\n                        style={{ display: 'none' }}\r\n                        accept=\"image/*\"\r\n                        onChange={handleImageUpload}\r\n                    />\r\n\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                        <label>ขนาดและราคา</label>\r\n                        <div>\r\n                            {sizePrices.map((item, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    className=\"option-box\"\r\n                                    onClick={() => handleIngredientScreen(item.size, item.price, item.ingredients)}\r\n                                >\r\n                                    {item.size} : {item.price} บาท\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className=\"size-price-inputs\" style={{ marginTop: \"10px\" }}>\r\n                            <select\r\n                                className=\"form-select\"\r\n                                value={newSize}\r\n                                onChange={(e) => setNewSize(e.target.value)}\r\n                            >\r\n                                {sizeList.map((item, index) => (\r\n                                    <option key={index} value={item.name}>{item.name}</option>\r\n                                ))}\r\n                            </select>\r\n\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"ราคา\"\r\n                                value={newSizePrice}\r\n                                onChange={(e) => setNewSizePrice(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button type=\"button\" className=\"blue-button text-center\" style={{ marginTop: \"10px\" }} onClick={handleAddSizePrice}>\r\n                            เพิ่มขนาดและราคา\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className='right-box-header' />\r\n\r\n                    {/* Custom Options */}\r\n                    <div className=\"right-box-header\">\r\n                        <div>\r\n                            {customOptions.map((item, index) => (\r\n                                <div key={index} className=\"option-box\">\r\n                                    {item.label} : {item.options.join(', ')}\r\n                                    <HiOutlinePencil\r\n                                        onClick={() => handleEditOption(index)}\r\n                                        className=\"icon\"\r\n                                        style={{ cursor: 'pointer', marginLeft: '10px' }}\r\n                                    />\r\n                                    <HiOutlineTrash\r\n                                        onClick={() => handleDeleteOption(index)}\r\n                                        className=\"icon\"\r\n                                        style={{ cursor: 'pointer', marginLeft: '10px' }}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"add-option-label\">\r\n                            <label style={{ marginTop: '8px', marginRight: '6px' }}>ตัวเลือกพิเศษ</label>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"circle-plus-btn\"\r\n                                onClick={() => setIsOptionVisible(!isOptionVisible)}\r\n                            >\r\n                                +\r\n                            </button>\r\n                        </div>\r\n\r\n                        {isOptionVisible && (\r\n                            <div className=\"add-option-container\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"ชื่อหมวดหมู่ เช่น ระดับความหวาน\"\r\n                                    value={newLabel}\r\n                                    onChange={(e) => setNewLabel(e.target.value)}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"ตัวเลือก เช่น 0, 25, 50\"\r\n                                    value={newOption}\r\n                                    onChange={(e) => setNewOption(e.target.value)}\r\n                                />\r\n                                <button type=\"button\" className=\"blue-button\" onClick={handleAddOption}>\r\n                                    เพิ่มตัวเลือก\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"order-action-buttons\">\r\n                        <button type=\"button\" className=\"red-button\" onClick={onCancel}>\r\n                            ยกเลิก\r\n                        </button>\r\n                        <button type=\"button\" className=\"blue-button\" onClick={handleSave}>\r\n                            บันทึก\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            ) : (\r\n                <AddIngredient\r\n                    currentSize={currentSize}\r\n                    newSizePrice={price}\r\n                    ingredientMain={ingredientMain}\r\n                    ingredientsBySize={ingredientsBySize}\r\n                    ingredientOptions={ingredientOptions}\r\n                    handleAddIngredient={handleAddIngredient}\r\n                    onAddIngredient={(size, ingredient) => {\r\n                        const newIngredients = ingredientsBySize[size] || [];\r\n                        setIngredientsBySize({\r\n                            ...ingredientsBySize,\r\n                            [size]: [...newIngredients, ingredient],\r\n                        });\r\n                    }}\r\n                    onBack={() => setIngredientScreen(false)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewMenu;\r\n"
        }
    ]
}