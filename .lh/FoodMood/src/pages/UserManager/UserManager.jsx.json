{
    "sourceFile": "FoodMood/src/pages/UserManager/UserManager.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1739554088105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739554096905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,9 +141,9 @@\n                 <div className=\"search-container\">\r\n                     <input\r\n                         type=\"text\"\r\n                         className=\"search-input\"\r\n-                        placeholder=\"ค้นหาด้วยชื่อ\"\r\n+                        placeholder=\"ค้นหาด้วยชื่อ จ้า\"\r\n                         value={searchQuery}\r\n                         onChange={(e) => setSearchQuery(e.target.value)}\r\n                     />\r\n                     <button className=\"blue-button\" onClick={handleAddNewUser}>เพิ่มผู้ใช้ใหม่</button>\r\n"
                }
            ],
            "date": 1739554088105,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport './UserManager.css';\r\nimport '../IngredientManager/IngredientManager.css';\r\nimport EditUser from './assets/EditUser';\r\nimport UserTable from './assets/UserTable';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst UserManager = () => {\r\n    const [data, setData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [showEditUser, setShowEditUser] = useState(false);\r\n    const [userToEdit, setUserToEdit] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [roleOptions, setRoleOptions] = useState([]);\r\n    const [userToDelete, setUserToDelete] = useState(null);\r\n\r\n    // Fetch data from the API\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/users');\r\n                setData(response.data);\r\n                \r\n            } catch (err) {\r\n                console.error('Failed to fetch users:', err);\r\n                setError('Failed to load user data.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchData();\r\n\r\n        axios.get('http://localhost:5000/api/roles')\r\n            .then(res => {\r\n                console.log('role จ้า: ', res.data);\r\n                setRoleOptions(res.data); \r\n                \r\n            })\r\n            .catch(err => console.error('Error fetching :', err));\r\n\r\n    }, []);\r\n\r\n    const filteredData = data.filter(item =>\r\n        (item.id && item.id.includes(searchQuery)) || (item.name && item.name.includes(searchQuery))\r\n    );\r\n    \r\n    const handleEditUser = (user) => {\r\n        setUserToEdit(user);\r\n        setIsEditing(true); // Edit user mode\r\n        setShowEditUser(true);\r\n    };\r\n\r\n    const handleAddNewUser = () => {\r\n        setUserToEdit({ id: '', name: '', nickname: '', roll: '', status: 'offline', phone: '' });\r\n        setIsEditing(false); // Add new user mode\r\n        setShowEditUser(true);\r\n    };\r\n\r\n    const handleSaveUser = (updatedUser) => {\r\n        if (isEditing) {\r\n            console.log('แก้ไข user  :', userToEdit._id);\r\n            axios.put(`http://localhost:5000/api/users/${userToEdit._id}`, updatedUser)\r\n                .then(res => {\r\n                    console.log('User updated:', res.data);\r\n                    setData(data.map(user => (user._id === res.data._id ? res.data : user)));\r\n                })\r\n                .catch(err => console.error('Failed to update user:', err));\r\n        } else {\r\n            console.log('เพิ่ม user:', updatedUser);\r\n            axios.post('http://localhost:5000/api/users', updatedUser)\r\n                .then(res => {\r\n                    console.log('User added:', res.data);\r\n                    setData([...data, res.data]);\r\n                })\r\n                .catch(err => console.error('Failed to add user:', err));\r\n        }\r\n        setShowEditUser(false);\r\n    };\r\n\r\n    const handleDeleteUser = (user) => {\r\n        axios.delete(`http://localhost:5000/api/users/${user._id}`)\r\n            .then((res) => {\r\n                Swal.fire({\r\n                    title: 'ผู้ใช้ดังกล่าวถูกลบแล้ว!',\r\n                    icon: 'success',\r\n                    confirmButtonColor: \"#64A2FF\",\r\n                    confirmButtonText: 'OK',\r\n                });\r\n                setData((prevData) => prevData.filter((item) => item._id !== user._id));\r\n            })\r\n            .catch((err) => {\r\n                Swal.fire({\r\n                    title: 'เกิดข้อผิดพลาดในการลบผู้ใช้ดังกล่าว',\r\n                    text: 'ลองใหม่อีกครั้ง',\r\n                    icon: 'error',\r\n                    confirmButtonColor: \"#64A2FF\",\r\n                    confirmButtonText: 'OK',\r\n                });\r\n            });\r\n    };\r\n    \r\n    const handleClickConfirm = (e) => {\r\n        setUserToDelete(e);\r\n        Swal.fire({\r\n            title: 'แน่ใจใช่ไหม?',\r\n            text: `คุณกำลังจะลบผู้ใช้\\nชื่อ: ${e.name}\\nตำแหน่ง: ${roleOptions.find(role => role._id === e.role_id)?.role_name}`,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#ff4b4b\",\r\n            cancelButtonColor: \"#B2B2B2\",\r\n            confirmButtonText: 'ยืนยันการลบ',\r\n            cancelButtonText: 'ยกเลิก',\r\n            dangerMode: true,\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                handleDeleteUser(e);\r\n            } else {\r\n                Swal.fire({\r\n                    title: 'ยกเลิกการลบ',\r\n                    confirmButtonColor: '#64A2FF',\r\n                });\r\n            }\r\n        });\r\n    };\r\n    \r\n\r\n    if (loading) {\r\n        return <div className=\"loading\">Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"error\">Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"middle-box\">\r\n                <div className=\"search-container\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"search-input\"\r\n                        placeholder=\"ค้นหาด้วยชื่อ\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                    />\r\n                    <button className=\"blue-button\" onClick={handleAddNewUser}>เพิ่มผู้ใช้ใหม่</button>\r\n                </div>\r\n                <UserTable data={filteredData} roleOptions={roleOptions} onEdit={handleEditUser} handleClickConfirm={handleClickConfirm} />\r\n            </div>\r\n            {showEditUser && (\r\n                <EditUser\r\n                    isEditing={isEditing}\r\n                    user={userToEdit}\r\n                    onClose={() => setShowEditUser(false)}\r\n                    onSave={handleSaveUser}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserManager;\r\n"
        }
    ]
}