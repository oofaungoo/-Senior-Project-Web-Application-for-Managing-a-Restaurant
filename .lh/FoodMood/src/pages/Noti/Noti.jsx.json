{
    "sourceFile": "FoodMood/src/pages/Noti/Noti.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1740378876661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740809925362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,68 +1,45 @@\n import React, { useState, useEffect } from 'react';\r\n import './Noti.css';\r\n \r\n-const Noti = () => {\r\n+const Noti = ({ setUnreadNotifications, setLowStockItems }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n-    // Simulate fetching data from backend\r\n     useEffect(() => {\r\n-        const fetchNotifications = async () => {\r\n-            const mockData = [\r\n-                {\r\n-                    id: 1,\r\n-                    item: \"หมูสับ\",\r\n-                    quantity: \"50 g\",\r\n-                    affectedMenus: \"ผัดกะเพราหมู, ผัดซีอิ๊วหมู, ข้าวหน้าหมู\",\r\n-                    time: \"12:48 20/01/20025\",\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => {\r\n+                const lowStock = res.data.filter(item => item.remain < item.min);\r\n+                setLowStockItems(lowStock);\r\n+                setUnreadNotifications(lowStock.length);\r\n+\r\n+                const notiData = lowStock.map((item, index) => ({\r\n+                    id: index + 1,\r\n+                    item: item.name,\r\n+                    quantity: item.remain + ' ' + item.unit,\r\n+                    affectedMenus: \"-\", \r\n+                    time: new Date().toLocaleTimeString(),\r\n                     isNew: true,\r\n-                },\r\n-                {\r\n-                    id: 2,\r\n-                    item: \"ไก่\",\r\n-                    quantity: \"30 g\",\r\n-                    affectedMenus: \"ผัดกะเพราไก่, ผัดซีอิ๊วไก่, ข้าวหน้าไก่\",\r\n-                    time: \"12:45 20/01/20025\",\r\n-                    isNew: false,\r\n-                },\r\n-                {\r\n-                    id: 3,\r\n-                    item: \"ปลาหมึก\",\r\n-                    quantity: \"หมด\",\r\n-                    affectedMenus: \"ผัดกะเพราปลาหมึก, ข้าวผัดปลาหมึก\",\r\n-                    time: \"12:40 20/01/20025\",\r\n-                    isNew: false,\r\n-                },\r\n-            ];\r\n-            setNotifications(mockData);\r\n-        };\r\n+                }));\r\n+                setNotifications(notiData);\r\n+            })\r\n+            .catch(err => console.error('Error fetching ingredients:', err));\r\n+    }, [setUnreadNotifications, setLowStockItems]);\r\n \r\n-        fetchNotifications();\r\n-    }, []);\r\n-\r\n     return (\r\n-        <>\r\n-            <div className=\"middle-box\">\r\n-                {notifications.map((noti) => (\r\n-                    <div\r\n-                        key={noti.id}\r\n-                        className={`notification ${noti.isNew ? 'new' : ''}`}\r\n-                    >\r\n-                        <div className=\"notification-header\">\r\n-                            {noti.isNew && (\r\n-                                <span className=\"notification-title-text fw-5\">New</span>\r\n-                            )}\r\n-                            <span className=\"notification-time\">{noti.time}</span>\r\n-                        </div>\r\n-                        <div className=\"notification-content\">\r\n-                            วัตถุดิบ <span className=\"text-red\">{noti.item}</span> ในคลังคงเหลือน้อยกว่า\r\n-                            <span className=\"text-red\"> {noti.quantity}</span> อาจส่งผลต่อเมนูต่อไปนี้\r\n-                            <span className=\"text-red\"> {noti.affectedMenus}</span>\r\n-                        </div>\r\n+        <div className=\"middle-box\">\r\n+            {notifications.map((noti) => (\r\n+                <div key={noti.id} className={`notification ${noti.isNew ? 'new' : ''}`}>\r\n+                    <div className=\"notification-header\">\r\n+                        {noti.isNew && <span className=\"notification-title-text fw-5\">New</span>}\r\n+                        <span className=\"notification-time\">{noti.time}</span>\r\n                     </div>\r\n-                ))}\r\n-            </div>\r\n-        </>\r\n+                    <div className=\"notification-content\">\r\n+                        วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n+                        <span className=\"text-red\"> {noti.quantity}</span>\r\n+                    </div>\r\n+                </div>\r\n+            ))}\r\n+        </div>\r\n     );\r\n };\r\n \r\n export default Noti;\r\n"
                },
                {
                    "date": 1740809974293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n import './Noti.css';\r\n \r\n const Noti = ({ setUnreadNotifications, setLowStockItems }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n"
                },
                {
                    "date": 1740810009403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,20 +26,29 @@\n     }, [setUnreadNotifications, setLowStockItems]);\r\n \r\n     return (\r\n         <div className=\"middle-box\">\r\n-            {notifications.map((noti) => (\r\n-                <div key={noti.id} className={`notification ${noti.isNew ? 'new' : ''}`}>\r\n-                    <div className=\"notification-header\">\r\n-                        {noti.isNew && <span className=\"notification-title-text fw-5\">New</span>}\r\n-                        <span className=\"notification-time\">{noti.time}</span>\r\n-                    </div>\r\n-                    <div className=\"notification-content\">\r\n-                        วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n-                        <span className=\"text-red\"> {noti.quantity}</span>\r\n-                    </div>\r\n+            <ul>\r\n+                {adminMenu.map((item, index) => (\r\n+                    <li key={index}>\r\n+                        <Link to={item.to} className=\"sidebar-link\">\r\n+                            {item.icon}\r\n+                            <span>{item.label}</span>\r\n+                            {item.badge > 0 && <span className=\"badge\">{item.badge}</span>}\r\n+                        </Link>\r\n+                    </li>\r\n+                ))}\r\n+            </ul>\r\n+            {lowStockItems.length > 0 && (\r\n+                <div className=\"low-stock-container\">\r\n+                    <h4>วัตถุดิบใกล้หมด</h4>\r\n+                    <ul>\r\n+                        {lowStockItems.map((item, index) => (\r\n+                            <li key={index}>{item.name} เหลือ {item.remain} {item.unit}</li>\r\n+                        ))}\r\n+                    </ul>\r\n                 </div>\r\n-            ))}\r\n+            )}\r\n         </div>\r\n     );\r\n };\r\n \r\n"
                },
                {
                    "date": 1740810082554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,49 +5,50 @@\n const Noti = ({ setUnreadNotifications, setLowStockItems }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/ingredients')\r\n-            .then(res => {\r\n+        const fetchIngredients = async () => {\r\n+            try {\r\n+                const res = await axios.get('http://localhost:5000/api/ingredients');\r\n                 const lowStock = res.data.filter(item => item.remain < item.min);\r\n+                \r\n                 setLowStockItems(lowStock);\r\n                 setUnreadNotifications(lowStock.length);\r\n \r\n                 const notiData = lowStock.map((item, index) => ({\r\n-                    id: index + 1,\r\n+                    id: item._id,\r\n                     item: item.name,\r\n-                    quantity: item.remain + ' ' + item.unit,\r\n+                    quantity: `${item.remain} ${item.unit}`,\r\n                     affectedMenus: \"-\", \r\n-                    time: new Date().toLocaleTimeString(),\r\n+                    time: new Date().toLocaleString(),\r\n                     isNew: true,\r\n                 }));\r\n                 setNotifications(notiData);\r\n-            })\r\n-            .catch(err => console.error('Error fetching ingredients:', err));\r\n+            } catch (err) {\r\n+                console.error('Error fetching ingredients:', err);\r\n+            }\r\n+        };\r\n+\r\n+        fetchIngredients();\r\n     }, [setUnreadNotifications, setLowStockItems]);\r\n \r\n     return (\r\n         <div className=\"middle-box\">\r\n-            <ul>\r\n-                {adminMenu.map((item, index) => (\r\n-                    <li key={index}>\r\n-                        <Link to={item.to} className=\"sidebar-link\">\r\n-                            {item.icon}\r\n-                            <span>{item.label}</span>\r\n-                            {item.badge > 0 && <span className=\"badge\">{item.badge}</span>}\r\n-                        </Link>\r\n-                    </li>\r\n-                ))}\r\n-            </ul>\r\n-            {lowStockItems.length > 0 && (\r\n-                <div className=\"low-stock-container\">\r\n-                    <h4>วัตถุดิบใกล้หมด</h4>\r\n-                    <ul>\r\n-                        {lowStockItems.map((item, index) => (\r\n-                            <li key={index}>{item.name} เหลือ {item.remain} {item.unit}</li>\r\n-                        ))}\r\n-                    </ul>\r\n-                </div>\r\n+            {notifications.length > 0 ? (\r\n+                notifications.map((noti) => (\r\n+                    <div key={noti.id} className={`notification ${noti.isNew ? 'new' : ''}`}>\r\n+                        <div className=\"notification-header\">\r\n+                            {noti.isNew && <span className=\"notification-title-text fw-5\">New</span>}\r\n+                            <span className=\"notification-time\">{noti.time}</span>\r\n+                        </div>\r\n+                        <div className=\"notification-content\">\r\n+                            วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n+                            <span className=\"text-red\"> {noti.quantity}</span>\r\n+                        </div>\r\n+                    </div>\r\n+                ))\r\n+            ) : (\r\n+                <p className=\"no-notifications\">ไม่มีการแจ้งเตือน</p>\r\n             )}\r\n         </div>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1740810188319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,28 +5,30 @@\n const Noti = ({ setUnreadNotifications, setLowStockItems }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n+\r\n+\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n         const fetchIngredients = async () => {\r\n-            try {\r\n-                const res = await axios.get('http://localhost:5000/api/ingredients');\r\n-                const lowStock = res.data.filter(item => item.remain < item.min);\r\n-                \r\n-                setLowStockItems(lowStock);\r\n-                setUnreadNotifications(lowStock.length);\r\n+            axios.get('http://localhost:5000/api/ingredients')\r\n+                .then(res => { setIngredientOptions(res.data); })\r\n+                .catch(err => console.error('Error fetching ingredients:', err));\r\n \r\n-                const notiData = lowStock.map((item, index) => ({\r\n-                    id: item._id,\r\n-                    item: item.name,\r\n-                    quantity: `${item.remain} ${item.unit}`,\r\n-                    affectedMenus: \"-\", \r\n-                    time: new Date().toLocaleString(),\r\n-                    isNew: true,\r\n-                }));\r\n-                setNotifications(notiData);\r\n-            } catch (err) {\r\n-                console.error('Error fetching ingredients:', err);\r\n-            }\r\n+            setLowStockItems(lowStock);\r\n+            setUnreadNotifications(lowStock.length);\r\n+\r\n+            const notiData = lowStock.map((item, index) => ({\r\n+                id: item._id,\r\n+                item: item.name,\r\n+                quantity: `${item.remain} ${item.unit}`,\r\n+                affectedMenus: \"-\",\r\n+                time: new Date().toLocaleString(),\r\n+                isNew: true,\r\n+            }));\r\n+            setNotifications(notiData);\r\n         };\r\n \r\n         fetchIngredients();\r\n     }, [setUnreadNotifications, setLowStockItems]);\r\n"
                },
                {
                    "date": 1740810242648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,34 +5,41 @@\n const Noti = ({ setUnreadNotifications, setLowStockItems }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n-\r\n-\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n         const fetchIngredients = async () => {\r\n-            axios.get('http://localhost:5000/api/ingredients')\r\n-                .then(res => { setIngredientOptions(res.data); })\r\n-                .catch(err => console.error('Error fetching ingredients:', err));\r\n-\r\n-            setLowStockItems(lowStock);\r\n-            setUnreadNotifications(lowStock.length);\r\n-\r\n-            const notiData = lowStock.map((item, index) => ({\r\n-                id: item._id,\r\n-                item: item.name,\r\n-                quantity: `${item.remain} ${item.unit}`,\r\n-                affectedMenus: \"-\",\r\n-                time: new Date().toLocaleString(),\r\n-                isNew: true,\r\n-            }));\r\n-            setNotifications(notiData);\r\n+            try {\r\n+                const res = await axios.get('http://localhost:5000/api/ingredients');\r\n+                const ingredients = res.data;\r\n+    \r\n+                setIngredientOptions(ingredients);\r\n+    \r\n+                // กรองเฉพาะวัตถุดิบที่ต่ำกว่าขั้นต่ำ\r\n+                const lowStock = ingredients.filter(item => item.remain < item.min);\r\n+    \r\n+                // อัปเดต state ของ Sidebar และ Noti\r\n+                setLowStockItems(lowStock);\r\n+                setUnreadNotifications(lowStock.length);\r\n+    \r\n+                // สร้างข้อมูลแจ้งเตือน\r\n+                const notiData = lowStock.map(item => ({\r\n+                    id: item._id,\r\n+                    item: item.name,\r\n+                    quantity: `${item.remain} ${item.unit}`,\r\n+                    affectedMenus: \"-\",\r\n+                    time: new Date().toLocaleString(),\r\n+                    isNew: true,\r\n+                }));\r\n+    \r\n+                setNotifications(notiData);\r\n+            } catch (err) {\r\n+                console.error('Error fetching ingredients:', err);\r\n+            }\r\n         };\r\n-\r\n+    \r\n         fetchIngredients();\r\n-    }, [setUnreadNotifications, setLowStockItems]);\r\n+    }, [setUnreadNotifications, setLowStockItems, setIngredientOptions]);\r\n+    \r\n \r\n     return (\r\n         <div className=\"middle-box\">\r\n             {notifications.length > 0 ? (\r\n"
                },
                {
                    "date": 1740810296657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,16 @@\n         const fetchIngredients = async () => {\r\n             try {\r\n                 const res = await axios.get('http://localhost:5000/api/ingredients');\r\n                 const ingredients = res.data;\r\n-    \r\n-                setIngredientOptions(ingredients);\r\n-    \r\n-                // กรองเฉพาะวัตถุดิบที่ต่ำกว่าขั้นต่ำ\r\n+\r\n+                // กรองวัตถุดิบที่มีจำนวนน้อยกว่าขั้นต่ำ\r\n                 const lowStock = ingredients.filter(item => item.remain < item.min);\r\n-    \r\n-                // อัปเดต state ของ Sidebar และ Noti\r\n+\r\n+                // อัปเดต state\r\n                 setLowStockItems(lowStock);\r\n                 setUnreadNotifications(lowStock.length);\r\n-    \r\n+\r\n                 // สร้างข้อมูลแจ้งเตือน\r\n                 const notiData = lowStock.map(item => ({\r\n                     id: item._id,\r\n                     item: item.name,\r\n@@ -28,18 +26,17 @@\n                     affectedMenus: \"-\",\r\n                     time: new Date().toLocaleString(),\r\n                     isNew: true,\r\n                 }));\r\n-    \r\n+\r\n                 setNotifications(notiData);\r\n             } catch (err) {\r\n                 console.error('Error fetching ingredients:', err);\r\n             }\r\n         };\r\n-    \r\n+\r\n         fetchIngredients();\r\n-    }, [setUnreadNotifications, setLowStockItems, setIngredientOptions]);\r\n-    \r\n+    }, [setUnreadNotifications, setLowStockItems]);\r\n \r\n     return (\r\n         <div className=\"middle-box\">\r\n             {notifications.length > 0 ? (\r\n"
                },
                {
                    "date": 1740810338063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,26 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import './Noti.css';\r\n \r\n-const Noti = ({ setUnreadNotifications, setLowStockItems }) => {\r\n+const Noti = ({ setUnreadNotifications = () => {}, setLowStockItems = () => {} }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n         const fetchIngredients = async () => {\r\n             try {\r\n                 const res = await axios.get('http://localhost:5000/api/ingredients');\r\n                 const ingredients = res.data;\r\n \r\n-                // กรองวัตถุดิบที่มีจำนวนน้อยกว่าขั้นต่ำ\r\n                 const lowStock = ingredients.filter(item => item.remain < item.min);\r\n \r\n-                // อัปเดต state\r\n                 setLowStockItems(lowStock);\r\n                 setUnreadNotifications(lowStock.length);\r\n \r\n-                // สร้างข้อมูลแจ้งเตือน\r\n                 const notiData = lowStock.map(item => ({\r\n                     id: item._id,\r\n                     item: item.name,\r\n                     quantity: `${item.remain} ${item.unit}`,\r\n-                    affectedMenus: \"-\",\r\n                     time: new Date().toLocaleString(),\r\n                     isNew: true,\r\n                 }));\r\n \r\n"
                },
                {
                    "date": 1740810393027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n                             <span className=\"notification-time\">{noti.time}</span>\r\n                         </div>\r\n                         <div className=\"notification-content\">\r\n                             วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n-                            <span className=\"text-red\"> {noti.quantity}</span>\r\n+                            <span className=\"text-red\"> {noti.quantity}</span> จากจำนวนขั้นต่ำ <span className=\"text-red\"> {noti.min}</span>\r\n                         </div>\r\n                     </div>\r\n                 ))\r\n             ) : (\r\n"
                },
                {
                    "date": 1740810430836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \r\n                 const notiData = lowStock.map(item => ({\r\n                     id: item._id,\r\n                     item: item.name,\r\n-                    quantity: `${item.remain} ${item.unit}`,\r\n+                    remain: `${item.remain} ${item.unit}`,\r\n                     time: new Date().toLocaleString(),\r\n                     isNew: true,\r\n                 }));\r\n \r\n"
                },
                {
                    "date": 1740810441697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n                             <span className=\"notification-time\">{noti.time}</span>\r\n                         </div>\r\n                         <div className=\"notification-content\">\r\n                             วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n-                            <span className=\"text-red\"> {noti.quantity}</span> จากจำนวนขั้นต่ำ <span className=\"text-red\"> {noti.min}</span>\r\n+                            <span className=\"text-red\"> {noti.remain}</span> จากจำนวนขั้นต่ำ <span className=\"text-red\"> {noti.min}</span>\r\n                         </div>\r\n                     </div>\r\n                 ))\r\n             ) : (\r\n"
                },
                {
                    "date": 1740810462313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n                 const notiData = lowStock.map(item => ({\r\n                     id: item._id,\r\n                     item: item.name,\r\n                     remain: `${item.remain} ${item.unit}`,\r\n+                    min: `${item.min} ${item.unit}`,\r\n                     time: new Date().toLocaleString(),\r\n                     isNew: true,\r\n                 }));\r\n \r\n"
                },
                {
                    "date": 1740810557635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,19 @@\n         fetchIngredients();\r\n     }, [setUnreadNotifications, setLowStockItems]);\r\n \r\n     return (\r\n-        <div className=\"middle-box\">\r\n+        <Box\r\n+                sx={{\r\n+                    backgroundColor: \"#fff\",\r\n+                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n+                    height: \"100vh\",\r\n+                    padding: \"20px\",\r\n+                    borderRadius: \"8px\",\r\n+                    overflowY: \"auto\",\r\n+                    marginRight: \"10px\",\r\n+                }}\r\n+            >\r\n             {notifications.length > 0 ? (\r\n                 notifications.map((noti) => (\r\n                     <div key={noti.id} className={`notification ${noti.isNew ? 'new' : ''}`}>\r\n                         <div className=\"notification-header\">\r\n@@ -51,9 +61,9 @@\n                 ))\r\n             ) : (\r\n                 <p className=\"no-notifications\">ไม่มีการแจ้งเตือน</p>\r\n             )}\r\n-        </div>\r\n+        </Box>\r\n     );\r\n };\r\n \r\n export default Noti;\r\n"
                },
                {
                    "date": 1740810570287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     return (\r\n         <Box\r\n                 sx={{\r\n                     backgroundColor: \"#fff\",\r\n-                    width: isMobile ? \"100%\" : isTablet ? \"65%\" : \"75%\",\r\n+                    width: 100%,\r\n                     height: \"100vh\",\r\n                     padding: \"20px\",\r\n                     borderRadius: \"8px\",\r\n                     overflowY: \"auto\",\r\n"
                },
                {
                    "date": 1740810586423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+import React, { useState, useEffect } from 'react';\r\n+import axios from 'axios';\r\n+import './Noti.css';\r\n+import { Box } from '@mui/material';\r\n+\r\n+const Noti = ({ setUnreadNotifications = () => {}, setLowStockItems = () => {} }) => {\r\n+    const [notifications, setNotifications] = useState([]);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchIngredients = async () => {\r\n+            try {\r\n+                const res = await axios.get('http://localhost:5000/api/ingredients');\r\n+                const ingredients = res.data;\r\n+\r\n+                const lowStock = ingredients.filter(item => item.remain < item.min);\r\n+\r\n+                setLowStockItems(lowStock);\r\n+                setUnreadNotifications(lowStock.length);\r\n+\r\n+                const notiData = lowStock.map(item => ({\r\n+                    id: item._id,\r\n+                    item: item.name,\r\n+                    remain: `${item.remain} ${item.unit}`,\r\n+                    min: `${item.min} ${item.unit}`,\r\n+                    time: new Date().toLocaleString(),\r\n+                    isNew: true,\r\n+                }));\r\n+\r\n+                setNotifications(notiData);\r\n+            } catch (err) {\r\n+                console.error('Error fetching ingredients:', err);\r\n+            }\r\n+        };\r\n+\r\n+        fetchIngredients();\r\n+    }, [setUnreadNotifications, setLowStockItems]);\r\n+\r\n+    return (\r\n+        <Box\r\n+                sx={{\r\n+                    backgroundColor: \"#fff\",\r\n+                    width: \"100%\",\r\n+                    height: \"100vh\",\r\n+                    padding: \"20px\",\r\n+                    borderRadius: \"8px\",\r\n+                    overflowY: \"auto\",\r\n+                    marginRight: \"10px\",\r\n+                }}\r\n+            >\r\n+            {notifications.length > 0 ? (\r\n+                notifications.map((noti) => (\r\n+                    <div key={noti.id} className={`notification ${noti.isNew ? 'new' : ''}`}>\r\n+                        <div className=\"notification-header\">\r\n+                            {noti.isNew && <span className=\"notification-title-text fw-5\">New</span>}\r\n+                            <span className=\"notification-time\">{noti.time}</span>\r\n+                        </div>\r\n+                        <div className=\"notification-content\">\r\n+                            วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n+                            <span className=\"text-red\"> {noti.remain}</span> จากจำนวนขั้นต่ำ <span className=\"text-red\"> {noti.min}</span>\r\n+                        </div>\r\n+                    </div>\r\n+                ))\r\n+            ) : (\r\n+                <p className=\"no-notifications\">ไม่มีการแจ้งเตือน</p>\r\n+            )}\r\n+        </Box>\r\n+    );\r\n+};\r\n+\r\n+export default Noti;\r\n"
                },
                {
                    "date": 1740811163110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n-import './Noti.css';\r\n-import { Box } from '@mui/material';\r\n+import { Box, Card, CardContent, Typography, Chip, Stack, Button } from '@mui/material';\r\n \r\n const Noti = ({ setUnreadNotifications = () => {}, setLowStockItems = () => {} }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n@@ -19,10 +18,11 @@\n \r\n                 const notiData = lowStock.map(item => ({\r\n                     id: item._id,\r\n                     item: item.name,\r\n-                    remain: `${item.remain} ${item.unit}`,\r\n-                    min: `${item.min} ${item.unit}`,\r\n+                    remain: item.remain,\r\n+                    min: item.min,\r\n+                    unit: item.unit,\r\n                     time: new Date().toLocaleString(),\r\n                     isNew: true,\r\n                 }));\r\n \r\n@@ -34,104 +34,62 @@\n \r\n         fetchIngredients();\r\n     }, [setUnreadNotifications, setLowStockItems]);\r\n \r\n+    const clearNotifications = () => {\r\n+        setNotifications([]);\r\n+        setUnreadNotifications(0);\r\n+    };\r\n+\r\n     return (\r\n         <Box\r\n-                sx={{\r\n-                    backgroundColor: \"#fff\",\r\n-                    width: \"100%\",\r\n-                    height: \"100vh\",\r\n-                    padding: \"20px\",\r\n-                    borderRadius: \"8px\",\r\n-                    overflowY: \"auto\",\r\n-                    marginRight: \"10px\",\r\n-                }}\r\n-            >\r\n-            {notifications.length > 0 ? (\r\n-                notifications.map((noti) => (\r\n-                    <div key={noti.id} className={`notification ${noti.isNew ? 'new' : ''}`}>\r\n-                        <div className=\"notification-header\">\r\n-                            {noti.isNew && <span className=\"notification-title-text fw-5\">New</span>}\r\n-                            <span className=\"notification-time\">{noti.time}</span>\r\n-                        </div>\r\n-                        <div className=\"notification-content\">\r\n-                            วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n-                            <span className=\"text-red\"> {noti.remain}</span> จากจำนวนขั้นต่ำ <span className=\"text-red\"> {noti.min}</span>\r\n-                        </div>\r\n-                    </div>\r\n-                ))\r\n-            ) : (\r\n-                <p className=\"no-notifications\">ไม่มีการแจ้งเตือน</p>\r\n-            )}\r\n-        </Box>\r\n-    );\r\n-};\r\n+            sx={{\r\n+                backgroundColor: \"#f9f9f9\",\r\n+                width: \"100%\",\r\n+                height: \"100vh\",\r\n+                padding: \"20px\",\r\n+                borderRadius: \"8px\",\r\n+                overflowY: \"auto\",\r\n+                marginRight: \"10px\",\r\n+                display: \"flex\",\r\n+                flexDirection: \"column\",\r\n+                gap: 2,\r\n+            }}\r\n+        >\r\n+            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n+                <Typography variant=\"h6\" fontWeight=\"bold\">🔔 การแจ้งเตือน</Typography>\r\n+                {notifications.length > 0 && (\r\n+                    <Button variant=\"contained\" color=\"error\" onClick={clearNotifications}>\r\n+                        ล้างแจ้งเตือน\r\n+                    </Button>\r\n+                )}\r\n+            </Stack>\r\n \r\n-export default Noti;\r\n-import React, { useState, useEffect } from 'react';\r\n-import axios from 'axios';\r\n-import './Noti.css';\r\n-\r\n-const Noti = ({ setUnreadNotifications = () => {}, setLowStockItems = () => {} }) => {\r\n-    const [notifications, setNotifications] = useState([]);\r\n-\r\n-    useEffect(() => {\r\n-        const fetchIngredients = async () => {\r\n-            try {\r\n-                const res = await axios.get('http://localhost:5000/api/ingredients');\r\n-                const ingredients = res.data;\r\n-\r\n-                const lowStock = ingredients.filter(item => item.remain < item.min);\r\n-\r\n-                setLowStockItems(lowStock);\r\n-                setUnreadNotifications(lowStock.length);\r\n-\r\n-                const notiData = lowStock.map(item => ({\r\n-                    id: item._id,\r\n-                    item: item.name,\r\n-                    remain: `${item.remain} ${item.unit}`,\r\n-                    min: `${item.min} ${item.unit}`,\r\n-                    time: new Date().toLocaleString(),\r\n-                    isNew: true,\r\n-                }));\r\n-\r\n-                setNotifications(notiData);\r\n-            } catch (err) {\r\n-                console.error('Error fetching ingredients:', err);\r\n-            }\r\n-        };\r\n-\r\n-        fetchIngredients();\r\n-    }, [setUnreadNotifications, setLowStockItems]);\r\n-\r\n-    return (\r\n-        <Box\r\n-                sx={{\r\n-                    backgroundColor: \"#fff\",\r\n-                    width: 100%,\r\n-                    height: \"100vh\",\r\n-                    padding: \"20px\",\r\n-                    borderRadius: \"8px\",\r\n-                    overflowY: \"auto\",\r\n-                    marginRight: \"10px\",\r\n-                }}\r\n-            >\r\n             {notifications.length > 0 ? (\r\n-                notifications.map((noti) => (\r\n-                    <div key={noti.id} className={`notification ${noti.isNew ? 'new' : ''}`}>\r\n-                        <div className=\"notification-header\">\r\n-                            {noti.isNew && <span className=\"notification-title-text fw-5\">New</span>}\r\n-                            <span className=\"notification-time\">{noti.time}</span>\r\n-                        </div>\r\n-                        <div className=\"notification-content\">\r\n-                            วัตถุดิบ <span className=\"text-red\">{noti.item}</span> เหลือเพียง\r\n-                            <span className=\"text-red\"> {noti.remain}</span> จากจำนวนขั้นต่ำ <span className=\"text-red\"> {noti.min}</span>\r\n-                        </div>\r\n-                    </div>\r\n-                ))\r\n+                <Stack spacing={2}>\r\n+                    {notifications.map((noti) => (\r\n+                        <Card key={noti.id} sx={{ borderLeft: \"5px solid red\", boxShadow: 3 }}>\r\n+                            <CardContent>\r\n+                                <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n+                                    <Typography variant=\"subtitle1\" fontWeight=\"bold\">{noti.item}</Typography>\r\n+                                    {noti.isNew && <Chip label=\"New\" color=\"error\" size=\"small\" />}\r\n+                                </Stack>\r\n+                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n+                                    วัตถุดิบ <strong>{noti.item}</strong> เหลือเพียง \r\n+                                    <strong style={{ color: \"red\" }}> {noti.remain} {noti.unit}</strong>  \r\n+                                    จากจำนวนขั้นต่ำ <strong style={{ color: \"red\" }}>{noti.min} {noti.unit}</strong>\r\n+                                </Typography>\r\n+                                <Typography variant=\"caption\" color=\"text.secondary\">\r\n+                                    📅 {noti.time}\r\n+                                </Typography>\r\n+                            </CardContent>\r\n+                        </Card>\r\n+                    ))}\r\n+                </Stack>\r\n             ) : (\r\n-                <p className=\"no-notifications\">ไม่มีการแจ้งเตือน</p>\r\n+                <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n+                    ไม่มีการแจ้งเตือน\r\n+                </Typography>\r\n             )}\r\n         </Box>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1740811231956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n     return (\r\n         <Box\r\n             sx={{\r\n-                backgroundColor: \"#f9f9f9\",\r\n+                backgroundColor: \"#fff\",\r\n                 width: \"100%\",\r\n                 height: \"100vh\",\r\n                 padding: \"20px\",\r\n                 borderRadius: \"8px\",\r\n"
                },
                {
                    "date": 1740811413098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,10 @@\n const Noti = ({ setUnreadNotifications = () => {}, setLowStockItems = () => {} }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n-        const fetchIngredients = async () => {\r\n-            try {\r\n-                const res = await axios.get('http://localhost:5000/api/ingredients');\r\n+        axios.get('http://localhost:5000/api/ingredients')\r\n+            .then(res => {\r\n                 const ingredients = res.data;\r\n \r\n                 const lowStock = ingredients.filter(item => item.remain < item.min);\r\n \r\n@@ -26,14 +25,10 @@\n                     isNew: true,\r\n                 }));\r\n \r\n                 setNotifications(notiData);\r\n-            } catch (err) {\r\n-                console.error('Error fetching ingredients:', err);\r\n-            }\r\n-        };\r\n-\r\n-        fetchIngredients();\r\n+            })\r\n+            .catch(err => console.error('Error fetching ingredients:', err));\r\n     }, [setUnreadNotifications, setLowStockItems]);\r\n \r\n     const clearNotifications = () => {\r\n         setNotifications([]);\r\n"
                },
                {
                    "date": 1740827189826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,18 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import { Box, Card, CardContent, Typography, Chip, Stack, Button } from '@mui/material';\r\n \r\n-const Noti = ({ setUnreadNotifications = () => {}, setLowStockItems = () => {} }) => {\r\n+const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n+        const token = localStorage.getItem(\"token\");\r\n+        if (!token) {\r\n+            Swal.fire({ title: \"Sesstion ของคุณหมดอายุ\", text: \"กรุณาเข้าสู่ระบบใหม่\", icon: \"warning\", confirmButtonColor: \"#64A2FF\", confirmButtonText: \"OK\" })\r\n+                .then(() => { navigate('/'); });\r\n+            return;\r\n+        }\r\n         axios.get('http://localhost:5000/api/ingredients')\r\n             .then(res => {\r\n                 const ingredients = res.data;\r\n \r\n@@ -68,10 +74,10 @@\n                                     <Typography variant=\"subtitle1\" fontWeight=\"bold\">{noti.item}</Typography>\r\n                                     {noti.isNew && <Chip label=\"New\" color=\"error\" size=\"small\" />}\r\n                                 </Stack>\r\n                                 <Typography variant=\"body2\" color=\"text.secondary\">\r\n-                                    วัตถุดิบ <strong>{noti.item}</strong> เหลือเพียง \r\n-                                    <strong style={{ color: \"red\" }}> {noti.remain} {noti.unit}</strong>  \r\n+                                    วัตถุดิบ <strong>{noti.item}</strong> เหลือเพียง\r\n+                                    <strong style={{ color: \"red\" }}> {noti.remain} {noti.unit}</strong>\r\n                                     จากจำนวนขั้นต่ำ <strong style={{ color: \"red\" }}>{noti.min} {noti.unit}</strong>\r\n                                 </Typography>\r\n                                 <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                     📅 {noti.time}\r\n"
                },
                {
                    "date": 1740827207823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import { Box, Card, CardContent, Typography, Chip, Stack, Button } from '@mui/material';\r\n+import Swal from 'sweetalert2';\r\n+import { Navigate } from 'react-router-dom';\r\n \r\n const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n"
                },
                {
                    "date": 1740827217195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n import Swal from 'sweetalert2';\r\n import { Navigate } from 'react-router-dom';\r\n \r\n const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n+    const navigate = useNavigate();\r\n+\r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n         const token = localStorage.getItem(\"token\");\r\n"
                },
                {
                    "date": 1740827362177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import axios from 'axios';\r\n import { Box, Card, CardContent, Typography, Chip, Stack, Button } from '@mui/material';\r\n import Swal from 'sweetalert2';\r\n import { Navigate } from 'react-router-dom';\r\n+import Swal from 'sweetalert2';\r\n \r\n const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n     const navigate = useNavigate();\r\n \r\n"
                },
                {
                    "date": 1740827368799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import { Box, Card, CardContent, Typography, Chip, Stack, Button } from '@mui/material';\r\n import Swal from 'sweetalert2';\r\n-import { Navigate } from 'react-router-dom';\r\n+import { useNavigate } from 'react-router-dom';\r\n import Swal from 'sweetalert2';\r\n \r\n const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n     const navigate = useNavigate();\r\n"
                },
                {
                    "date": 1740827400219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,16 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import { Box, Card, CardContent, Typography, Chip, Stack, Button } from '@mui/material';\r\n-import Swal from 'sweetalert2';\r\n import { useNavigate } from 'react-router-dom';\r\n-import Swal from 'sweetalert2';\r\n \r\n+\r\n const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n-    const navigate = useNavigate();\r\n \r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n-        const token = localStorage.getItem(\"token\");\r\n-        if (!token) {\r\n-            Swal.fire({ title: \"Sesstion ของคุณหมดอายุ\", text: \"กรุณาเข้าสู่ระบบใหม่\", icon: \"warning\", confirmButtonColor: \"#64A2FF\", confirmButtonText: \"OK\" })\r\n-                .then(() => { navigate('/'); });\r\n-            return;\r\n-        }\r\n+\r\n         axios.get('http://localhost:5000/api/ingredients')\r\n             .then(res => {\r\n                 const ingredients = res.data;\r\n \r\n"
                },
                {
                    "date": 1740828616759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n import { Box, Card, CardContent, Typography, Chip, Stack, Button } from '@mui/material';\r\n import { useNavigate } from 'react-router-dom';\r\n+import Swal from \"sweetalert2\";\r\n \r\n \r\n const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n \r\n"
                },
                {
                    "date": 1740828974826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,20 @@\n import Swal from \"sweetalert2\";\r\n \r\n \r\n const Noti = ({ setUnreadNotifications = () => { }, setLowStockItems = () => { } }) => {\r\n+    const navigate = useNavigate();\r\n \r\n     const [notifications, setNotifications] = useState([]);\r\n \r\n     useEffect(() => {\r\n-\r\n+        const token = localStorage.getItem(\"token\");\r\n+        if (!token) {\r\n+            Swal.fire({ title: \"Sesstion ของคุณหมดอายุ\", text: \"กรุณาเข้าสู่ระบบใหม่\", icon: \"warning\", confirmButtonColor: \"#64A2FF\", confirmButtonText: \"OK\" })\r\n+                .then(() => { navigate('/'); });\r\n+            return;\r\n+        }\r\n+        \r\n         axios.get('http://localhost:5000/api/ingredients')\r\n             .then(res => {\r\n                 const ingredients = res.data;\r\n \r\n"
                }
            ],
            "date": 1740378876661,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport './Noti.css';\r\n\r\nconst Noti = () => {\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    // Simulate fetching data from backend\r\n    useEffect(() => {\r\n        const fetchNotifications = async () => {\r\n            const mockData = [\r\n                {\r\n                    id: 1,\r\n                    item: \"หมูสับ\",\r\n                    quantity: \"50 g\",\r\n                    affectedMenus: \"ผัดกะเพราหมู, ผัดซีอิ๊วหมู, ข้าวหน้าหมู\",\r\n                    time: \"12:48 20/01/20025\",\r\n                    isNew: true,\r\n                },\r\n                {\r\n                    id: 2,\r\n                    item: \"ไก่\",\r\n                    quantity: \"30 g\",\r\n                    affectedMenus: \"ผัดกะเพราไก่, ผัดซีอิ๊วไก่, ข้าวหน้าไก่\",\r\n                    time: \"12:45 20/01/20025\",\r\n                    isNew: false,\r\n                },\r\n                {\r\n                    id: 3,\r\n                    item: \"ปลาหมึก\",\r\n                    quantity: \"หมด\",\r\n                    affectedMenus: \"ผัดกะเพราปลาหมึก, ข้าวผัดปลาหมึก\",\r\n                    time: \"12:40 20/01/20025\",\r\n                    isNew: false,\r\n                },\r\n            ];\r\n            setNotifications(mockData);\r\n        };\r\n\r\n        fetchNotifications();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"middle-box\">\r\n                {notifications.map((noti) => (\r\n                    <div\r\n                        key={noti.id}\r\n                        className={`notification ${noti.isNew ? 'new' : ''}`}\r\n                    >\r\n                        <div className=\"notification-header\">\r\n                            {noti.isNew && (\r\n                                <span className=\"notification-title-text fw-5\">New</span>\r\n                            )}\r\n                            <span className=\"notification-time\">{noti.time}</span>\r\n                        </div>\r\n                        <div className=\"notification-content\">\r\n                            วัตถุดิบ <span className=\"text-red\">{noti.item}</span> ในคลังคงเหลือน้อยกว่า\r\n                            <span className=\"text-red\"> {noti.quantity}</span> อาจส่งผลต่อเมนูต่อไปนี้\r\n                            <span className=\"text-red\"> {noti.affectedMenus}</span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Noti;\r\n"
        }
    ]
}